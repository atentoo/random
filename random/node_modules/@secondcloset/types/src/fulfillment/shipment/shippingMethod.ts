import { ShipmentItem } from "./shipmentItem";
import {
  AppointmentStatus,
  AppointmentType,
  AppointmentSubtype,
  DeliveryType,
  ParcelServiceLevel,
} from "../../fulfillment/appointment";
import { CustomerAddress, Customer, ShipmentTag } from "../order";
import { BaseUser, BaseImage, BaseNote, BaseAddress } from "../../_common";
import { Package } from "./package";
import { Carrier } from "./carrier";
import { ScServiceCode } from "../shipment";

type ExternalCarrierShipmentStatus =
  | "shipment_created"
  | "label_generated"
  | "label_printed"
  | "label_required"
  | "apply_label"
  | "with_carrier"
  | "awaiting_carrier"
  | "shipment_cancelled"
  | "returned";

export type ShippingMethodStatus =
  | AppointmentStatus
  | ExternalCarrierShipmentStatus;

export type ShippingMethodType =
  | "appointment"
  | "fulfillment"
  | "external_carrier_shipment";

export interface SecondClosetShippingMethod {
  air_skip?: boolean;
  id: string;
  route_id: string | null;
  user_id?: string;
  user_code?: string;
  user_email?: string;
  user_firstname?: string;
  user_lastname?: string;
  number?: string;
  status: AppointmentStatus;
  cancelled_at?: string | null;
  failed_reason?: string | null;
  failed_notes?: string | null;
  claim_number?: string;
  issue_images?: BaseImage[];
  incomplete_at?: string;
  job_type?: AppointmentType;
  job_subtype?: AppointmentSubtype;
  date?: string | null;
  timerange?: string | null;
  formatted_timeslot?: string | null;
  customer_segment?: string;
  start_time?: string | null;
  end_time?: string | null;
  arrived_time?: string | null;
  rescheduled?: boolean;
  rescheduled_appointment_id?: string | null;
  range_of_days_assigned_dates?: {
    assigned_start_datetime: string;
    assigned_end_datetime: string;
  } | null;
  range_of_days_start_date?: string | null;
  range_of_days_end_date?: string | null;
  parcel_service_level?: ParcelServiceLevel;
  created_at: string;
  updated_at?: string;
  num_movers?: number | null;
  estimated_time?: number;
  movers?: string[] | null;
  driver_id?: string | null;
  signature_url?: string | null;
  signed_at?: string | null;
  signature_image?: BaseImage | null;
  location?: CustomerAddress;
  delivery_service_level?: ScServiceCode;
  field_ops_notes?: BaseNote[];
  verification_images?: BaseImage[];
  delivery_type?: DeliveryType;
  shipping_labels?: LastMileShippingLabel[];
  signature_required?: boolean;
  source?: {
    id: string;
    type: string;
    shipment_tags: ShipmentTag[];
    customer: Customer;
    notes: string;
    platform: "manual" | "shopify" | string;
    external_platform_version: number | null;
  };
  type?: ShippingMethodType;
  shipment?: {
    id: string;
    organization_id: string;
    billed: false;
    user: BaseUser;
    notes: BaseNote[];
    shipment_items: ShipmentItem[];
    shipment_number: string;
    packages: Package[];
    external_order_id: string;
    external_order_type: string;
    external_shipment_id: string | null;
    carrier: Carrier | null;
    created_at: string;
    updated_at: string;
    action_summary: string[];
  };
}

interface CarrierShippingAddress {
  id: string;
  contact_name: string;
  phone_number: string;
  address: string;
  address_line_1?: string;
  address_line_2?: string;
  city: string;
  country: string;
  province: string;
  postal_code: string;
}

export interface ExternalCarrierShippingLabel {
  id: string;
  label_id: string;
  tracking_number: string;
  tracking_url: string;
  label_download: string;
  voided: boolean;
  voided_at: string | null;
}

export interface LastMileShippingLabel {
  id: string;
  label_id?: string;
  tracking_number?: string;
  tracking_url?: string;
  label_download?: string;
}

export interface ExternalCarrierShippingMethod {
  id: string;
  status: ExternalCarrierShipmentStatus;
  shipped_at: string | null;
  shipment_status: string | null;
  shipment_id: string | null;
  carrier_id: string | null;
  service_code: string | null;
  ship_from_address: CarrierShippingAddress;
  ship_to_address: CarrierShippingAddress;
  shipping_labels: ExternalCarrierShippingLabel[];
}

export interface CustomerPickupShippingMethod {
  id: string;
  status: "awaiting" | "failed" | "cancelled" | "completed";
  created_at: string;
  completed_at?: string;
  failed_at?: string;
  failed_reason?: string;
  estimated_pickup_date?: string;
}
