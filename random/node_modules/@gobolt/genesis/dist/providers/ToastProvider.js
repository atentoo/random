import { jsxs as c, jsx as r } from "react/jsx-runtime";
import i from "react";
import { ToastContainer as m, toast as u } from "../node_modules/react-toastify/dist/index.js";
import { useTheme as l } from "../utils/styled.js";
import "../node_modules/react-toastify/dist/ReactToastify.css.js";
import p from "../components/Toast/Toast.js";
const n = i.createContext(void 0), g = ({ closeToast: o, toastProps: a, message: e, state: s, action: t }) => r(p, { message: e, state: s, close: o, action: t }), b = ({ children: o }) => {
  const a = l();
  return c(n.Provider, { value: { show: (e, s, t) => {
    u.success((d) => r(g, { message: e, state: s, action: t, ...d }));
  } }, children: [r(m, { closeButton: !1, closeOnClick: !1, draggable: !1, pauseOnFocusLoss: !1, pauseOnHover: !1, theme: a.mode, hideProgressBar: !0, icon: !1, style: { width: 0, height: 0, padding: 0, margin: 0, overflow: "visible", background: "none", position: "fixed", zIndex: 9999 }, toastStyle: { background: "none", boxShadow: "none", padding: 0, margin: 0, overflow: "visible", width: 340 } }), o] });
}, C = () => {
  const o = i.useContext(n);
  if (o === void 0) throw new Error("useToast must be used within a ToastProvider");
  return o;
};
export {
  n as ToastContext,
  b as ToastProvider,
  C as useToast
};
