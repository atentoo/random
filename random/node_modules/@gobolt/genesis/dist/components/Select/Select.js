import { jsx as t } from "react/jsx-runtime";
import l, { useEffect as m } from "react";
import { TYPE as u } from "../../constants/index.js";
import c from "../shared/DropdownChevron.js";
import { SelectWrapper as f, Select as h, SelectDropdown as y, StyledMenuItem as x } from "./styles.js";
import { useGenesis as C } from "../../providers/useGenesis.js";
const I = ({ type: n = u.primary, state: a, variant: s = "none", defaultValue: d, onChange: o, ...p }) => {
  const { breakpoint: S } = C(), [i, r] = l.useState(!1);
  return m(() => {
    const e = document.createElement("style");
    return e.textContent = `
      .ant-select-dropdown {
        padding: 0px !important;
        border-radius: 0px !important;
      }
    `, document.head.appendChild(e), () => {
      document.head.removeChild(e);
    };
  }, []), t(f, { $isFocused: i, type: n, children: t(h, { ...p, defaultValue: d, $variant: s, suffixIcon: t(c, {}), dropdownRender: (e) => t(y, { type: n, state: a, children: t(x, { type: n, state: a, children: e }) }), onFocus: () => r(!0), onBlur: () => r(!1), onChange: (e) => {
    r(!1), o == null || o(e);
  } }) });
};
export {
  I as default
};
