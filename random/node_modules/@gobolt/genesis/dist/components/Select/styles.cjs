"use strict";Object.defineProperty(exports,Symbol.toStringTag,{value:"Module"});const a=require("styled-components"),b=require("../../node_modules/antd/es/select/index.cjs"),f=a.div`
  position: relative;
  border: 2px solid transparent;
  background-color: transparent;
  border-radius: 8px;
  padding: 1px;
  width: auto;

  ${({$isFocused:n,theme:e,type:o="primary"})=>n&&`
    border: 2px solid ${e.colors[o].focussed.ringColor};
    background-color: transparent;
    border-radius: 8px;
    padding: 1px;
  `}

  .ant-select-dropdown {
    animation-duration: ${({theme:n})=>`${n.motion.veryfast}s`} !important;
  }
`,p=({colors:n,sizing:e,typography:o,borderRadius:t},i,u,m)=>{var s,l,c,d;return m==="simple"?((r,y,v,g)=>`
    &.ant-select {
      background-color: ${r.surface.secondary};
      border-color: ${r.surface.secondary};
      min-width: 160px;

      .ant-select-selector {
        background-color: ${r.surface.secondary};
        border-color: ${r.surface.secondary};
        border-radius: ${g.BorderRadiusSm}px;
        margin: 0px;  
      }
    }
  `)(n,0,0,t):`
    &.ant-select {

      font-size: 16px;
      line-height: ${e.Size6}px;
      letter-spacing: 0;
      font-weight: 400;
      border-width: 1px;

      width: 100%; 
      min-width: 250px;
      height: auto;
      min-height: 32px;

      //background-color:  ${n[i][u].backgroundColor}
      background-color: #fff;
      
      border-radius: ${t.BorderRadiusMd}px;
      gap: ${e.Size2}px;

      .ant-select-selector {
        border-color: ${n.inputs.surface.border};
        padding: 4px 12px !important;
        height: 40px !important;
        min-height: 40px !important;
        background-color: transparent !important;
        display: flex;
        align-items: center;

        .ant-select-selection-search {
          margin-inline-start: 0;
          padding-left: 0;
          height: 100%;
          display: flex;
          align-items: center;
          
          input {
            font-size: 16px;
          }
        }

        .ant-select-selection-overflow {
          flex-wrap: nowrap;
          gap: 4px;
          padding: 0;
          height: 100%;
          align-items: center;
          margin-left: 0;
          display: flex;
        }

        .ant-select-selection-item {
          margin: 0;
          background: transparent;
          border: none;
          height: 100%;
          line-height: normal;
          padding: 0;
          font-size: 16px;
          display: flex;
          align-items: center;

          &.ant-select-selection-placeholder {
            padding-top: 6px;
          }
        }

        .ant-select-selection-overflow-item {
          height: 100%;
          display: flex;
          align-items: center;
        }

        .ant-select-selection-overflow-item-suffix {
          position: absolute;
          right: 12px;
          height: 100%;
          display: flex;
          align-items: center;
          font-size: 16px;

          .ant-select-selection-item {
            padding-top: 6px;
          }
        }
      }

      .ant-select-selection-item {
        padding-left: 4px;
      }

      .ant-segmented-item-label span + span {
        margin-inline-start: 4px !important;
      }

      &:active {
        background-color: ${((l=(s=n==null?void 0:n[i])==null?void 0:s.pressed)==null?void 0:l.backgroundColor)??"#fff"};
        border-color: ${((d=(c=n==null?void 0:n[i])==null?void 0:c.pressed)==null?void 0:d.borderColor)??"#fff"};
      }

      // Remove focus styles
      &:focus, &:focus-visible {
        background-color: transparent;
        border-color: transparent;
        outline: none;
        box-shadow: none;
      }

      .ant-select-arrow {
        color: #000000;
        -webkit-font-smoothing: antialiased;
        -moz-osx-font-smoothing: grayscale;
        text-rendering: optimizeLegibility;
      }

      &:disabled,
      &.ant-select-disabled {
        color: ${n.inputs.onsurface.disabled};
        background-color: ${n.inputs.surface.disabled};
        border-color: ${n.inputs.surface.border};
        
        .ant-select-selector {
          background-color: ${n.inputs.surface.disabled};
        }
        
        .ant-select-arrow {
          color: ${n.inputs.onsurface["icon-disabled"]};
        }
      }
    }
  `},h=a.div`
  .ant-select-item-option {
    transition: ${({theme:n,type:e})=>(o=>`all ${o.motion.veryfast}s ease-in-out`)(n)};
    border-radius: 0px;

    &:hover {
      background-color: ${({theme:n,type:e})=>n.colors.surface.secondary};
      color: ${({theme:n,type:e})=>n.colors.onsurface["copy-dark"]};
    }

    &.ant-select-item-option-selected {
      background-color: ${({theme:n,type:e})=>n.colors[e].hover.backgroundColor};
      color: ${({theme:n,type:e})=>n.colors[e].active.color};
      font-weight: 400;
      border-radius: 0px;

      &:hover {
        background-color: ${({theme:n,type:e})=>n.colors[e].hover.backgroundColor};
        color: ${({theme:n,type:e})=>n.colors[e].hover.color};
        border-radius: 0px;
      }
    }
  }
`,x=a.div`
  .ant-select-dropdown {
    animation-duration: ${({theme:n})=>`${n.motion.veryfast}s`} !important;
    transition: all ${({theme:n})=>`${n.motion.veryfast}s`}
      cubic-bezier(0.645, 0.045, 0.355, 1) !important;

    .ant-select-item {
      border-radius: 0px;
    }
  }

  &.ant-slide-up-enter,
  &.ant-slide-up-appear {
    animation-duration: ${({theme:n})=>`${n.motion.veryfast}s`} !important;
  }

  &.ant-slide-up-leave {
    animation-duration: ${({theme:n})=>`${n.motion.veryfast}s`} !important;
  }
`,$=a(b)`
  ${({theme:n,type:e="primary",state:o="active",$variant:t="none"})=>p(n,e,o,t)}
`;exports.Select=$,exports.SelectDropdown=x,exports.SelectWrapper=f,exports.StyledMenuItem=h,exports.getGenesisClass=p;
