import { jsx as n } from "react/jsx-runtime";
import * as p from "react";
import a from "../ErrorBoundaryFallback/ErrorBoundaryFallback.js";
class h extends p.Component {
  constructor(r) {
    super(r), this.state = { hasError: !1 };
  }
  static getDerivedStateFromError(r) {
    return { hasError: !0 };
  }
  componentDidCatch(r, t) {
    if (this.props.logError) return this.props.logError(r, t.componentStack, null);
    ((o, e, s) => {
      console.error(o, e, s);
    })(r, t.componentStack, null), this.setState({ error: r, componentStack: t.componentStack });
  }
  render() {
    return this.state.hasError ? this.props.errorComponent ? this.props.errorComponent : n(a, { error: this.state.error, componentStack: this.state.componentStack, resetError: this.props.resetError }) : this.props.children;
  }
}
export {
  h as default
};
