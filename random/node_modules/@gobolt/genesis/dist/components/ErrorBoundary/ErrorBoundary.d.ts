import * as React from "react";
export interface ErrorBoundaryProps {
    hasError?: boolean;
    logError?: (error: Error, componentStack: string, ownerStack: string) => void;
    errorComponent?: React.ReactNode | React.ReactElement;
    children?: React.ReactNode;
    resetError?: () => void;
    error?: Error;
    componentStack?: string;
}
declare class ErrorBoundary extends React.Component<any, ErrorBoundaryProps> {
    constructor(props: any);
    static getDerivedStateFromError(error: any): {
        hasError: boolean;
    };
    componentDidCatch(error: any, info: any): any;
    render(): any;
}
export default ErrorBoundary;
