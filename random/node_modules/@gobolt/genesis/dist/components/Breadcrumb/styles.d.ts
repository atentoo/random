import { GenesisTheme } from '../../styles/theme/genesis-theme.types';
interface StyledBreadcrumbProps {
    theme?: GenesisTheme;
    $isDisabled?: boolean;
}
interface StyledBreadcrumbComponentProps extends StyledBreadcrumbProps {
    type?: string;
    state?: string;
    breakpoint?: string;
    role?: string;
}
export declare const getGenesisClass: ({ colors, typography }: GenesisTheme, breakpoint?: string) => string;
export declare const BreadcrumbWrapper: import('styled-components/dist/types').IStyledComponentBase<"web", import('styled-components/dist/types').Substitute<import('react').DetailedHTMLProps<import('react').HTMLAttributes<HTMLDivElement>, HTMLDivElement>, StyledBreadcrumbProps>> & string;
export declare const Breadcrumb: import('styled-components/dist/types').IStyledComponentBase<"web", import('styled-components/dist/types').Substitute<import('antd').BreadcrumbProps<import('antd/es/_util/type').AnyObject>, StyledBreadcrumbComponentProps>> & string & Omit<{
    <T extends import('antd/es/_util/type').AnyObject = import('antd/es/_util/type').AnyObject>(props: import('antd').BreadcrumbProps<T>): React.ReactElement<unknown, string | React.JSXElementConstructor<any>>;
    Item: React.FC<import('antd').BreadcrumbItemProps> & {
        __ANT_BREADCRUMB_ITEM: boolean;
    };
    Separator: React.FC<{
        children?: React.ReactNode | undefined;
    }> & {
        __ANT_BREADCRUMB_SEPARATOR: boolean;
    };
    displayName: string;
}, keyof import('react').Component<any, {}, any>>;
export default Breadcrumb;
