import { InputProps as AntInputProps } from 'antd';
import { STATE } from '../../constants';
interface InputStyledProps extends AntInputProps {
    state?: keyof typeof STATE;
}
export declare const Input: import('styled-components/dist/types').IStyledComponentBase<"web", import('styled-components/dist/types').Substitute<Omit<AntInputProps & import('react').RefAttributes<import('rc-input').InputRef>, "ref"> & {
    ref?: import('react').Ref<import('rc-input').InputRef>;
}, InputStyledProps>> & string & Omit<import('react').ForwardRefExoticComponent<AntInputProps & import('react').RefAttributes<import('rc-input').InputRef>> & {
    Group: import('react').FC<import('antd/es/input').GroupProps>;
    Search: import('react').ForwardRefExoticComponent<import('antd/es/input').SearchProps & import('react').RefAttributes<import('rc-input').InputRef>>;
    TextArea: import('react').ForwardRefExoticComponent<import('antd/es/input').TextAreaProps & import('react').RefAttributes<import('antd/es/input/TextArea').TextAreaRef>>;
    Password: import('react').ForwardRefExoticComponent<import('antd/es/input').PasswordProps & import('react').RefAttributes<import('rc-input').InputRef>>;
    OTP: import('react').ForwardRefExoticComponent<import('antd/es/input/OTP').OTPProps & import('react').RefAttributes<import('antd/es/input/OTP').OTPRef>>;
}, keyof import('react').Component<any, {}, any>>;
export {};
