import M from "../../../@babel/runtime/helpers/esm/slicedToArray.js";
import * as f from "react";
function w(i, p, m, s) {
  var c = f.useMemo(function() {
    return [/* @__PURE__ */ new Map(), []];
  }, [i, m.id, s]), d = M(c, 2), u = d[0], t = d[1];
  return function(a) {
    var g = arguments.length > 1 && arguments[1] !== void 0 ? arguments[1] : a, e = u.get(a), o = u.get(g);
    if (e === void 0 || o === void 0) for (var h = i.length, r = t.length; r < h; r += 1) {
      var v, l = i[r], n = p(l);
      u.set(n, r);
      var b = (v = m.get(n)) !== null && v !== void 0 ? v : s;
      if (t[r] = (t[r - 1] || 0) + b, n === a && (e = r), n === g && (o = r), e !== void 0 && o !== void 0) break;
    }
    return { top: t[e - 1] || 0, bottom: t[o] };
  };
}
export {
  w as useGetSize
};
