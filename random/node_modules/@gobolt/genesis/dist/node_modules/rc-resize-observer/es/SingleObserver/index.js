import x from "../../../@babel/runtime/helpers/esm/objectSpread2.js";
import k from "../../../@babel/runtime/helpers/esm/typeof.js";
import c from "../../../rc-util/es/Dom/findDOMNode.js";
import { supportRef as z, getNodeRef as B, useComposeRef as I } from "../../../rc-util/es/ref.js";
import * as t from "react";
import { CollectionContext as P } from "../Collection.js";
import { observe as _, unobserve as q } from "../utils/observerUtil.js";
import A from "./DomWrapper.js";
function F(f, O) {
  var s = f.children, h = f.disabled, r = t.useRef(null), d = t.useRef(null), m = t.useContext(P), v = typeof s == "function", o = v ? s(r) : s, n = t.useRef({ width: -1, height: -1, offsetWidth: -1, offsetHeight: -1 }), p = !v && t.isValidElement(o) && z(o), j = p ? B(o) : null, y = I(j, r), g = function() {
    var e;
    return c(r.current) || (r.current && k(r.current) === "object" ? c((e = r.current) === null || e === void 0 ? void 0 : e.nativeElement) : null) || c(d.current);
  };
  t.useImperativeHandle(O, function() {
    return g();
  });
  var R = t.useRef(f);
  R.current = f;
  var b = t.useCallback(function(e) {
    var E = R.current, H = E.onResize, D = E.data, w = e.getBoundingClientRect(), l = w.width, a = w.height, i = e.offsetWidth, u = e.offsetHeight, C = Math.floor(l), W = Math.floor(a);
    if (n.current.width !== C || n.current.height !== W || n.current.offsetWidth !== i || n.current.offsetHeight !== u) {
      var M = { width: C, height: W, offsetWidth: i, offsetHeight: u };
      n.current = M;
      var S = i === Math.round(l) ? l : i, V = u === Math.round(a) ? a : u, N = x(x({}, M), {}, { offsetWidth: S, offsetHeight: V });
      m == null || m(N, e, D), H && Promise.resolve().then(function() {
        H(N, e);
      });
    }
  }, []);
  return t.useEffect(function() {
    var e = g();
    return e && !h && _(e, b), function() {
      return q(e, b);
    };
  }, [r.current, h]), t.createElement(A, { ref: d }, p ? t.cloneElement(o, { ref: y }) : o);
}
var G = t.forwardRef(F);
process.env.NODE_ENV !== "production" && (G.displayName = "SingleObserver");
export {
  G as default
};
