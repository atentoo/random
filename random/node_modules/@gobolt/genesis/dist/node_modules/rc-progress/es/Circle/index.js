import R from "../../../@babel/runtime/helpers/esm/extends.js";
import v from "../../../@babel/runtime/helpers/esm/typeof.js";
import S from "../../../@babel/runtime/helpers/esm/objectSpread2.js";
import X from "../../../@babel/runtime/helpers/esm/objectWithoutProperties.js";
import * as h from "react";
import Z from "../../../../_virtual/index.js";
import { defaultProps as U, useTransitionDuration as Y } from "../common.js";
import $ from "../hooks/useId.js";
import rr from "./PtgCircle.js";
import { VIEW_BOX_SIZE as C, getCircleStyle as j } from "./util.js";
var er = ["id", "prefixCls", "steps", "strokeWidth", "trailWidth", "gapDegree", "gapPosition", "trailColor", "strokeLinecap", "style", "className", "strokeColor", "percent"];
function V(m) {
  var i = m ?? [];
  return Array.isArray(i) ? i : [i];
}
var tr = function(m) {
  var i, A, E, r = S(S({}, U), m), I = r.id, f = r.prefixCls, N = r.steps, e = r.strokeWidth, z = r.trailWidth, L = r.gapDegree, t = L === void 0 ? 0 : L, W = r.gapPosition, x = r.trailColor, T = r.strokeLinecap, q = r.style, F = r.className, G = r.strokeColor, H = r.percent, J = X(r, er), s = C / 2, K = $(I), P = "".concat(K, "-gradient"), u = s - e / 2, d = 2 * Math.PI * u, b = t > 0 ? 90 + t / 2 : -90, n = d * ((360 - t) / 360), _ = v(N) === "object" ? N : { count: N, gap: 2 }, l = _.count, w = _.gap, B = V(H), p = V(G), M = p.find(function(c) {
    return c && v(c) === "object";
  }), y = M && v(M) === "object" ? "butt" : T, Q = j(d, n, 0, 100, b, t, W, x, y, e), O = Y();
  return h.createElement("svg", R({ className: Z("".concat(f, "-circle"), F), viewBox: "0 0 ".concat(C, " ").concat(C), style: q, id: I, role: "presentation" }, J), !l && h.createElement("circle", { className: "".concat(f, "-circle-trail"), r: u, cx: s, cy: s, stroke: x, strokeLinecap: y, strokeWidth: z || e, style: Q }), l ? (i = Math.round(l * (B[0] / 100)), A = 100 / l, E = 0, new Array(l).fill(null).map(function(c, o) {
    var a = o <= i - 1 ? p[0] : x, g = a && v(a) === "object" ? "url(#".concat(P, ")") : void 0, k = j(d, n, E, A, b, t, W, a, "butt", e, w);
    return E += 100 * (n - k.strokeDashoffset + w) / n, h.createElement("circle", { key: o, className: "".concat(f, "-circle-path"), r: u, cx: s, cy: s, stroke: g, strokeWidth: e, opacity: 1, style: k, ref: function(D) {
      O[o] = D;
    } });
  })) : function() {
    var c = 0;
    return B.map(function(o, a) {
      var g = p[a] || p[p.length - 1], k = j(d, n, c, o, b, t, W, g, y, e);
      return c += o, h.createElement(rr, { key: a, color: g, ptg: o, radius: u, prefixCls: f, gradientId: P, style: k, strokeLinecap: y, strokeWidth: e, gapDegree: t, ref: function(D) {
        O[a] = D;
      }, size: C });
    }).reverse();
  }());
};
process.env.NODE_ENV !== "production" && (tr.displayName = "Circle");
export {
  tr as default
};
