import C from "../../../@babel/runtime/helpers/esm/typeof.js";
import * as t from "react";
var m = function(e) {
  var a = e.bg, c = e.children;
  return t.createElement("div", { style: { width: "100%", height: "100%", background: a } }, c);
};
function p(e, a) {
  return Object.keys(e).map(function(c) {
    var o = parseFloat(c), n = "".concat(Math.floor(o * a), "%");
    return "".concat(e[c], " ").concat(n);
  });
}
var N = t.forwardRef(function(e, a) {
  var c = e.prefixCls, o = e.color, n = e.gradientId, f = e.radius, u = e.style, h = e.ptg, k = e.strokeLinecap, v = e.strokeWidth, i = e.size, r = e.gapDegree, l = o && C(o) === "object", E = l ? "#FFF" : void 0, s = i / 2, d = t.createElement("circle", { className: "".concat(c, "-circle-path"), r: f, cx: s, cy: s, stroke: E, strokeLinecap: k, strokeWidth: v, opacity: h === 0 ? 0 : 1, style: u, ref: a });
  if (!l) return d;
  var g = "".concat(n, "-conic"), b = r ? "".concat(180 + r / 2, "deg") : "0deg", y = p(o, (360 - r) / 360), j = p(o, 1), F = "conic-gradient(from ".concat(b, ", ").concat(y.join(", "), ")"), x = "linear-gradient(to ".concat(r ? "bottom" : "top", ", ").concat(j.join(", "), ")");
  return t.createElement(t.Fragment, null, t.createElement("mask", { id: g }, d), t.createElement("foreignObject", { x: 0, y: 0, width: i, height: i, mask: "url(#".concat(g, ")") }, t.createElement(m, { bg: x }, t.createElement(m, { bg: F }))));
});
process.env.NODE_ENV !== "production" && (N.displayName = "PtgCircle");
export {
  N as default
};
