import a from "../../@babel/runtime/helpers/esm/extends.js";
import V from "../../@babel/runtime/helpers/esm/objectDestructuringEmpty.js";
import A from "../../@babel/runtime/helpers/esm/slicedToArray.js";
import D from "../../@babel/runtime/helpers/esm/objectWithoutProperties.js";
import _ from "../../../_virtual/index.js";
import z from "../../rc-motion/es/CSSMotion.js";
import "../../rc-motion/es/CSSMotionList.js";
import * as t from "react";
import B from "../../rc-util/es/hooks/useLayoutEffect.js";
import { TreeContext as F } from "./contextTypes.js";
import v from "./TreeNode.js";
import G from "./useUnmount.js";
import { getTreeNodeProps as H } from "./utils/treeUtil.js";
var I = ["className", "style", "motion", "motionNodes", "motionType", "onMotionStart", "onMotionEnd", "active", "treeNodeRequiredProps"], J = t.forwardRef(function(e, m) {
  var E = e.className, y = e.style, M = e.motion, o = e.motionNodes, s = e.motionType, g = e.onMotionStart, R = e.onMotionEnd, c = e.active, S = e.treeNodeRequiredProps, T = D(e, I), h = t.useState(!0), p = A(h, 2), f = p[0], x = p[1], C = t.useContext(F).prefixCls, n = o && s !== "hide";
  B(function() {
    o && n !== f && x(n);
  }, [o]);
  var l = t.useRef(!1), d = function() {
    o && !l.current && (l.current = !0, R());
  };
  return G(function() {
    o && g();
  }, d), o ? t.createElement(z, a({ ref: m, visible: f }, M, { motionAppear: s === "show", onVisibleChanged: function(i) {
    n === i && d();
  } }), function(i, b) {
    var P = i.className, k = i.style;
    return t.createElement("div", { ref: b, className: _("".concat(C, "-treenode-motion"), P), style: k }, o.map(function(r) {
      var u = Object.assign({}, (V(r.data), r.data)), q = r.title, N = r.key, j = r.isStart, w = r.isEnd;
      delete u.children;
      var O = H(N, S);
      return t.createElement(v, a({}, u, O, { title: q, active: c, data: r.data, key: N, isStart: j, isEnd: w }));
    }));
  }) : t.createElement(v, a({ domRef: m, className: E, style: y }, T, { active: c }));
});
process.env.NODE_ENV !== "production" && (J.displayName = "MotionTreeNode");
export {
  J as default
};
