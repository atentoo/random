import * as r from "react";
function l(e, s) {
  var n = r.useRef(0);
  n.current += 1;
  var a = r.useRef(e), u = [];
  Object.keys(e || {}).map(function(c) {
    var o;
    (e == null ? void 0 : e[c]) !== ((o = a.current) === null || o === void 0 ? void 0 : o[c]) && u.push(c);
  }), a.current = e;
  var t = r.useRef([]);
  return u.length && (t.current = u), r.useDebugValue(n.current), r.useDebugValue(t.current.join(", ")), s && console.log("".concat(s, ":"), n.current, t.current), n.current;
}
const d = process.env.NODE_ENV !== "production" ? l : function() {
};
var i = r.memo(function() {
  var e = l();
  return r.createElement("h1", null, "Render Times: ", e);
});
process.env.NODE_ENV !== "production" && (i.displayName = "RenderBlock");
export {
  i as RenderBlock,
  d as default
};
