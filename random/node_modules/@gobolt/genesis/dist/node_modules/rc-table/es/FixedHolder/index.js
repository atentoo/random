import P from "../../../@babel/runtime/helpers/esm/defineProperty.js";
import a from "../../../@babel/runtime/helpers/esm/objectSpread2.js";
import f from "../../../@babel/runtime/helpers/esm/toConsumableArray.js";
import I from "../../../@babel/runtime/helpers/esm/objectWithoutProperties.js";
import { useContext as J } from "../../../@rc-component/context/es/context.js";
import { fillRef as g } from "../../../rc-util/es/ref.js";
import * as o from "react";
import { useMemo as v } from "react";
import K from "../../../../_virtual/index.js";
import Q from "../ColGroup.js";
import U from "../context/TableContext.js";
import Y from "../hooks/useRenderTimes.js";
var Z = ["className", "noData", "columns", "flattenColumns", "colWidths", "columCount", "stickyOffsets", "direction", "fixHeader", "stickyTopOffset", "stickyBottomOffset", "stickyClassName", "onScroll", "maxContentScroll", "children"], w = o.forwardRef(function(t, D) {
  process.env.NODE_ENV !== "production" && Y(t);
  var L = t.className, k = t.noData, y = t.columns, i = t.flattenColumns, H = t.colWidths, p = t.columCount, u = t.stickyOffsets, x = t.direction, T = t.fixHeader, W = t.stickyTopOffset, R = t.stickyBottomOffset, N = t.stickyClassName, _ = t.onScroll, z = t.maxContentScroll, B = t.children, M = I(t, Z), m = J(U, ["prefixCls", "scrollbarSize", "isSticky", "getComponent"]), V = m.prefixCls, j = m.scrollbarSize, d = m.isSticky, F = (0, m.getComponent)(["header", "table"], "table"), n = d && !T ? 0 : j, C = o.useRef(null), X = o.useCallback(function(e) {
    g(D, e), g(C, e);
  }, []);
  o.useEffect(function() {
    var e;
    function l(r) {
      var c = r, s = c.currentTarget, S = c.deltaX;
      S && (_({ currentTarget: s, scrollLeft: s.scrollLeft + S }), r.preventDefault());
    }
    return (e = C.current) === null || e === void 0 || e.addEventListener("wheel", l, { passive: !1 }), function() {
      var r;
      (r = C.current) === null || r === void 0 || r.removeEventListener("wheel", l);
    };
  }, []);
  var q = o.useMemo(function() {
    return i.every(function(e) {
      return e.width;
    });
  }, [i]), b = i[i.length - 1], E = { fixed: b ? b.fixed : null, scrollbar: !0, onHeaderCell: function() {
    return { className: "".concat(V, "-cell-scrollbar") };
  } }, A = v(function() {
    return n ? [].concat(f(y), [E]) : y;
  }, [n, y]), O = v(function() {
    return n ? [].concat(f(i), [E]) : i;
  }, [n, i]), G = v(function() {
    var e = u.right, l = u.left;
    return a(a({}, u), {}, { left: x === "rtl" ? [].concat(f(l.map(function(r) {
      return r + n;
    })), [0]) : l, right: x === "rtl" ? e : [].concat(f(e.map(function(r) {
      return r + n;
    })), [0]), isSticky: d });
  }, [n, u, d]), h = function(e, l) {
    return v(function() {
      for (var r = [], c = 0; c < l; c += 1) {
        var s = e[c];
        if (s === void 0) return null;
        r[c] = s;
      }
      return r;
    }, [e.join("_"), l]);
  }(H, p);
  return o.createElement("div", { style: a({ overflow: "hidden" }, d ? { top: W, bottom: R } : {}), ref: X, className: K(L, P({}, N, !!N)) }, o.createElement(F, { style: { tableLayout: "fixed", visibility: k || h ? null : "hidden" } }, (!k || !z || q) && o.createElement(Q, { colWidths: h ? [].concat(f(h), [n]) : [], columCount: p + 1, columns: O }), B(a(a({}, M), {}, { stickyOffsets: G, columns: A, flattenColumns: O }))));
});
process.env.NODE_ENV !== "production" && (w.displayName = "FixedHolder");
const ft = o.memo(w);
export {
  ft as default
};
