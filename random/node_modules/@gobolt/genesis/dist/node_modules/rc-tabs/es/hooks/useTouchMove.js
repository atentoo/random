import s from "../../../@babel/runtime/helpers/esm/slicedToArray.js";
import * as R from "react";
import { useState as v, useRef as m } from "react";
var L = Math.pow(0.995, 20);
function k(M, i) {
  var I = v(), x = s(I, 2), c = x[0], h = x[1], P = v(0), p = s(P, 2), S = p[0], X = p[1], Y = v(0), E = s(Y, 2), w = E[0], D = E[1], W = v(), T = s(W, 2), d = T[0], y = T[1], f = m(), l = m(), a = m(null);
  a.current = { onTouchStart: function(t) {
    var n = t.touches[0], e = n.screenX, r = n.screenY;
    h({ x: e, y: r }), window.clearInterval(f.current);
  }, onTouchMove: function(t) {
    if (c) {
      var n = t.touches[0], e = n.screenX, r = n.screenY;
      h({ x: e, y: r });
      var o = e - c.x, u = r - c.y;
      i(o, u);
      var b = Date.now();
      X(b), D(b - S), y({ x: o, y: u });
    }
  }, onTouchEnd: function() {
    if (c && (h(null), y(null), d)) {
      var t = d.x / w, n = d.y / w, e = Math.abs(t), r = Math.abs(n);
      if (Math.max(e, r) < 0.1) return;
      var o = t, u = n;
      f.current = window.setInterval(function() {
        Math.abs(o) < 0.01 && Math.abs(u) < 0.01 ? window.clearInterval(f.current) : i(20 * (o *= L), 20 * (u *= L));
      }, 20);
    }
  }, onWheel: function(t) {
    var n = t.deltaX, e = t.deltaY, r = 0, o = Math.abs(n), u = Math.abs(e);
    o === u ? r = l.current === "x" ? n : e : o > u ? (r = n, l.current = "x") : (r = e, l.current = "y"), i(-r, -r) && t.preventDefault();
  } }, R.useEffect(function() {
    function t(e) {
      a.current.onTouchMove(e);
    }
    function n(e) {
      a.current.onTouchEnd(e);
    }
    return document.addEventListener("touchmove", t, { passive: !1 }), document.addEventListener("touchend", n, { passive: !0 }), M.current.addEventListener("touchstart", function(e) {
      a.current.onTouchStart(e);
    }, { passive: !0 }), M.current.addEventListener("wheel", function(e) {
      a.current.onWheel(e);
    }, { passive: !1 }), function() {
      document.removeEventListener("touchmove", t), document.removeEventListener("touchend", n);
    };
  }, []);
}
export {
  k as default
};
