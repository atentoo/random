import d from "../../../@babel/runtime/helpers/esm/defineProperty.js";
import T from "../../../../_virtual/index.js";
import * as o from "react";
import { genDataNodeKey as U, getRemovable as j } from "../util.js";
var q = function(e) {
  var w = e.prefixCls, i = e.id, s = e.active, u = e.focus, n = e.tab, r = n.key, l = n.label, c = n.disabled, v = n.closeIcon, m = n.icon, C = e.closable, y = e.renderWrapper, D = e.removeAriaLabel, p = e.editable, N = e.onClick, h = e.onFocus, I = e.onBlur, M = e.onKeyDown, x = e.onMouseDown, P = e.onMouseUp, K = e.style, B = e.tabCount, F = e.currentPosition, t = "".concat(w, "-tab"), k = j(C, v, p, c);
  function E(a) {
    c || N(a);
  }
  var R = o.useMemo(function() {
    return m && typeof l == "string" ? o.createElement("span", null, l) : l;
  }, [l, m]), b = o.useRef(null);
  o.useEffect(function() {
    u && b.current && b.current.focus();
  }, [u]);
  var g = o.createElement("div", { key: r, "data-node-key": U(r), className: T(t, d(d(d(d({}, "".concat(t, "-with-remove"), k), "".concat(t, "-active"), s), "".concat(t, "-disabled"), c), "".concat(t, "-focus"), u)), style: K, onClick: E }, o.createElement("div", { ref: b, role: "tab", "aria-selected": s, id: i && "".concat(i, "-tab-").concat(r), className: "".concat(t, "-btn"), "aria-controls": i && "".concat(i, "-panel-").concat(r), "aria-disabled": c, tabIndex: c ? null : s ? 0 : -1, onClick: function(a) {
    a.stopPropagation(), E(a);
  }, onKeyDown: M, onMouseDown: x, onMouseUp: P, onFocus: h, onBlur: I }, u && o.createElement("div", { "aria-live": "polite", style: { width: 0, height: 0, position: "absolute", overflow: "hidden", opacity: 0 } }, "Tab ".concat(F, " of ").concat(B)), m && o.createElement("span", { className: "".concat(t, "-icon") }, m), l && R), k && o.createElement("button", { type: "button", role: "tab", "aria-label": D || "remove", tabIndex: s ? 0 : -1, className: "".concat(t, "-remove"), onClick: function(a) {
    var f;
    a.stopPropagation(), (f = a).preventDefault(), f.stopPropagation(), p.onEdit("remove", { key: r, event: f });
  } }, v || p.removeIcon || "Ã—"));
  return y ? y(g) : g;
};
export {
  q as default
};
