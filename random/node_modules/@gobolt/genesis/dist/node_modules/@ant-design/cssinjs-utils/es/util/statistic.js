import c from "../../../../@babel/runtime/helpers/esm/objectSpread2.js";
import p from "../../../../@babel/runtime/helpers/esm/typeof.js";
var s = process.env.NODE_ENV !== "production" || typeof CSSINJS_STATISTIC < "u", a = !0;
function m() {
  for (var f = arguments.length, n = new Array(f), e = 0; e < f; e++) n[e] = arguments[e];
  if (!s) return Object.assign.apply(Object, [{}].concat(n));
  a = !1;
  var u = {};
  return n.forEach(function(r) {
    p(r) === "object" && Object.keys(r).forEach(function(o) {
      Object.defineProperty(u, o, { configurable: !0, enumerable: !0, get: function() {
        return r[o];
      } });
    });
  }), a = !0, u;
}
var i = {};
function d() {
}
var y = function(f) {
  var n, e = f, u = d;
  return s && typeof Proxy < "u" && (n = /* @__PURE__ */ new Set(), e = new Proxy(f, { get: function(r, o) {
    var t;
    return a && ((t = n) === null || t === void 0 || t.add(o)), r[o];
  } }), u = function(r, o) {
    var t;
    i[r] = { global: Array.from(n), component: c(c({}, (t = i[r]) === null || t === void 0 ? void 0 : t.component), o) };
  }), { token: e, keys: n, flush: u };
};
export {
  y as default,
  m as merge,
  i as statistic
};
