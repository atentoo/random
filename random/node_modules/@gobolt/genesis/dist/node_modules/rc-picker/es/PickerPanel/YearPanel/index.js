import P from "../../../../@babel/runtime/helpers/esm/extends.js";
import k from "../../../../@babel/runtime/helpers/esm/defineProperty.js";
import S from "../../../../@babel/runtime/helpers/esm/slicedToArray.js";
import * as o from "react";
import { formatValue as u, isSameYear as p, isInRange as I } from "../../utils/dateUtil.js";
import { useInfo as M, PanelContext as V } from "../context.js";
import w from "../PanelBody.js";
import j from "../PanelHeader.js";
function G(t) {
  var c = t.prefixCls, r = t.locale, e = t.generateConfig, i = t.pickerValue, m = t.disabledDate, C = t.onPickerValueChange, Y = t.onModeChange, b = "".concat(c, "-year-panel"), v = M(t, "year"), E = S(v, 1)[0], d = function(a) {
    var n = 10 * Math.floor(e.getYear(a) / 10);
    return e.setYear(a, n);
  }, g = function(a) {
    var n = d(a);
    return e.addYear(n, 9);
  }, l = d(i), f = g(i), y = e.addYear(l, -1), D = m ? function(a, n) {
    var x = e.setMonth(a, 0), s = e.setDate(x, 1), F = e.addYear(s, 1), N = e.addDate(F, -1);
    return m(s, n) && m(N, n);
  } : null, h = o.createElement("button", { type: "button", key: "decade", "aria-label": r.decadeSelect, onClick: function() {
    Y("decade");
  }, tabIndex: -1, className: "".concat(c, "-decade-btn") }, u(l, { locale: r, format: r.yearFormat, generateConfig: e }), "-", u(f, { locale: r, format: r.yearFormat, generateConfig: e }));
  return o.createElement(V.Provider, { value: E }, o.createElement("div", { className: b }, o.createElement(j, { superOffset: function(a) {
    return e.addYear(i, 10 * a);
  }, onChange: C, getStart: d, getEnd: g }, h), o.createElement(w, P({}, t, { disabledDate: D, titleFormat: r.fieldYearFormat, colNum: 3, rowNum: 4, baseDate: y, getCellDate: function(a, n) {
    return e.addYear(a, n);
  }, getCellText: function(a) {
    return u(a, { locale: r, format: r.cellYearFormat, generateConfig: e });
  }, getCellClassName: function(a) {
    return k({}, "".concat(c, "-cell-in-view"), p(e, a, l) || p(e, a, f) || I(e, l, f, a));
  } }))));
}
export {
  G as default
};
