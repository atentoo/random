import U from "../../../../@babel/runtime/helpers/esm/extends.js";
import d from "../../../../@babel/runtime/helpers/esm/defineProperty.js";
import j from "../../../../@babel/runtime/helpers/esm/slicedToArray.js";
import N from "../../../../../_virtual/index.js";
import * as n from "react";
import { getWeekStartDate as q, WEEK_DAY_COUNT as g, formatValue as p, isSameDate as z, isSameMonth as G } from "../../utils/dateUtil.js";
import { useInfo as J, PanelContext as K } from "../context.js";
import Q from "../PanelBody.js";
import R from "../PanelHeader.js";
function ne(o) {
  var c = o.prefixCls, k = o.panelName, W = k === void 0 ? "date" : k, t = o.locale, e = o.generateConfig, r = o.pickerValue, x = o.onPickerValueChange, y = o.onModeChange, h = o.mode, C = h === void 0 ? "date" : h, D = o.disabledDate, F = o.onSelect, i = o.onHover, u = o.showWeek, v = "".concat(c, "-").concat(W, "-panel"), m = "".concat(c, "-cell"), E = C === "week", P = J(o, C), b = j(P, 2), I = b[0], V = b[1], Y = e.locale.getWeekFirstDay(t.locale), O = e.setDate(r, 1), T = q(t.locale, e, O), A = e.getMonth(r), w = (u === void 0 ? E : u) ? function(a) {
    var l = D == null ? void 0 : D(a, { type: "week" });
    return n.createElement("td", { key: "week", className: N(m, "".concat(m, "-week"), d({}, "".concat(m, "-disabled"), l)), onClick: function() {
      l || F(a);
    }, onMouseEnter: function() {
      l || i == null || i(a);
    }, onMouseLeave: function() {
      l || i == null || i(null);
    } }, n.createElement("div", { className: "".concat(m, "-inner") }, e.locale.getWeek(t.locale, a)));
  } : null, f = [], B = t.shortWeekDays || (e.locale.getShortWeekDays ? e.locale.getShortWeekDays(t.locale) : []);
  w && f.push(n.createElement("th", { key: "empty" }, n.createElement("span", { style: { width: 0, height: 0, position: "absolute", overflow: "hidden", opacity: 0 } }, t.week)));
  for (var s = 0; s < g; s += 1) f.push(n.createElement("th", { key: s }, B[(s + Y) % g]));
  var H = t.shortMonths || (e.locale.getShortMonths ? e.locale.getShortMonths(t.locale) : []), S = n.createElement("button", { type: "button", "aria-label": t.yearSelect, key: "year", onClick: function() {
    y("year", r);
  }, tabIndex: -1, className: "".concat(c, "-year-btn") }, p(r, { locale: t, format: t.yearFormat, generateConfig: e })), M = n.createElement("button", { type: "button", "aria-label": t.monthSelect, key: "month", onClick: function() {
    y("month", r);
  }, tabIndex: -1, className: "".concat(c, "-month-btn") }, t.monthFormat ? p(r, { locale: t, format: t.monthFormat, generateConfig: e }) : H[A]), L = t.monthBeforeYear ? [M, S] : [S, M];
  return n.createElement(K.Provider, { value: I }, n.createElement("div", { className: N(v, u && "".concat(v, "-show-week")) }, n.createElement(R, { offset: function(a) {
    return e.addMonth(r, a);
  }, superOffset: function(a) {
    return e.addYear(r, a);
  }, onChange: x, getStart: function(a) {
    return e.setDate(a, 1);
  }, getEnd: function(a) {
    var l = e.setDate(a, 1);
    return l = e.addMonth(l, 1), e.addDate(l, -1);
  } }, L), n.createElement(Q, U({ titleFormat: t.fieldDateFormat }, o, { colNum: g, rowNum: 6, baseDate: T, headerCells: f, getCellDate: function(a, l) {
    return e.addDate(a, l);
  }, getCellText: function(a) {
    return p(a, { locale: t, format: t.cellDateFormat, generateConfig: e });
  }, getCellClassName: function(a) {
    return d(d({}, "".concat(c, "-cell-in-view"), G(e, a, r)), "".concat(c, "-cell-today"), z(e, a, V));
  }, prefixColumn: w, cellSelection: !E }))));
}
export {
  ne as default
};
