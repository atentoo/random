import i from "../../../@babel/runtime/helpers/esm/toConsumableArray.js";
function f(r, t) {
  for (var n = arguments.length > 2 && arguments[2] !== void 0 ? arguments[2] : "0", e = String(r); e.length < t; ) e = "".concat(n).concat(e);
  return e;
}
function c(r) {
  return r == null ? [] : Array.isArray(r) ? r : [r];
}
function m(r, t, n) {
  var e = i(r);
  return e[t] = n, e;
}
function d(r, t) {
  var n = {};
  return (t || Object.keys(r)).forEach(function(e) {
    r[e] !== void 0 && (n[e] = r[e]);
  }), n;
}
function l(r, t, n) {
  if (n) return n;
  switch (r) {
    case "time":
      return t.fieldTimeFormat;
    case "datetime":
      return t.fieldDateTimeFormat;
    case "month":
      return t.fieldMonthFormat;
    case "year":
      return t.fieldYearFormat;
    case "quarter":
      return t.fieldQuarterFormat;
    case "week":
      return t.fieldWeekFormat;
    default:
      return t.fieldDateFormat;
  }
}
function s(r, t, n) {
  var e = n !== void 0 ? n : t[t.length - 1], a = t.find(function(o) {
    return r[o];
  });
  return e !== a ? r[a] : void 0;
}
export {
  m as fillIndex,
  s as getFromDate,
  l as getRowFormat,
  f as leftPad,
  d as pickProps,
  c as toArray
};
