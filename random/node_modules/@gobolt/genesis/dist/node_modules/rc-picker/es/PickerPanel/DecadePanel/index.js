import F from "../../../../@babel/runtime/helpers/esm/extends.js";
import M from "../../../../@babel/runtime/helpers/esm/defineProperty.js";
import S from "../../../../@babel/runtime/helpers/esm/slicedToArray.js";
import * as c from "react";
import { formatValue as m, isSameDecade as Y, isInRange as V } from "../../utils/dateUtil.js";
import { useInfo as k, PanelContext as w } from "../context.js";
import I from "../PanelBody.js";
import j from "../PanelHeader.js";
function G(r) {
  var g = r.prefixCls, o = r.locale, e = r.generateConfig, i = r.pickerValue, d = r.disabledDate, v = r.onPickerValueChange, D = "".concat(g, "-decade-panel"), h = k(r, "decade"), E = S(h, 1)[0], u = function(a) {
    var t = 100 * Math.floor(e.getYear(a) / 100);
    return e.setYear(a, t);
  }, p = function(a) {
    var t = u(a);
    return e.addYear(t, 99);
  }, n = u(i), f = p(i), x = e.addYear(n, -10), P = d ? function(a, t) {
    var s = e.setDate(a, 1), l = e.setMonth(s, 0), C = e.setYear(l, 10 * Math.floor(e.getYear(l) / 10)), N = e.addYear(C, 10), y = e.addDate(N, -1);
    return d(C, t) && d(y, t);
  } : null, b = "".concat(m(n, { locale: o, format: o.yearFormat, generateConfig: e }), "-").concat(m(f, { locale: o, format: o.yearFormat, generateConfig: e }));
  return c.createElement(w.Provider, { value: E }, c.createElement("div", { className: D }, c.createElement(j, { superOffset: function(a) {
    return e.addYear(i, 100 * a);
  }, onChange: v, getStart: u, getEnd: p }, b), c.createElement(I, F({}, r, { disabledDate: P, colNum: 3, rowNum: 4, baseDate: x, getCellDate: function(a, t) {
    return e.addYear(a, 10 * t);
  }, getCellText: function(a) {
    var t = o.cellYearFormat, s = m(a, { locale: o, format: t, generateConfig: e }), l = m(e.addYear(a, 9), { locale: o, format: t, generateConfig: e });
    return "".concat(s, "-").concat(l);
  }, getCellClassName: function(a) {
    return M({}, "".concat(g, "-cell-in-view"), Y(e, a, n) || Y(e, a, f) || V(e, n, f, a));
  } }))));
}
export {
  G as default
};
