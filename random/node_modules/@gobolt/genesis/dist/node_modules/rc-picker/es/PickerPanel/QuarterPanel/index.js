import d from "../../../../@babel/runtime/helpers/esm/extends.js";
import h from "../../../../@babel/runtime/helpers/esm/defineProperty.js";
import y from "../../../../@babel/runtime/helpers/esm/slicedToArray.js";
import * as n from "react";
import { formatValue as m } from "../../utils/dateUtil.js";
import { useInfo as b, PanelContext as E } from "../context.js";
import v from "../PanelBody.js";
import x from "../PanelHeader.js";
function q(t) {
  var o = t.prefixCls, a = t.locale, r = t.generateConfig, l = t.pickerValue, u = t.onPickerValueChange, i = t.onModeChange, f = "".concat(o, "-quarter-panel"), c = b(t, "quarter"), s = y(c, 1)[0], g = r.setMonth(l, 0), p = n.createElement("button", { type: "button", key: "year", "aria-label": a.yearSelect, onClick: function() {
    i("year");
  }, tabIndex: -1, className: "".concat(o, "-year-btn") }, m(l, { locale: a, format: a.yearFormat, generateConfig: r }));
  return n.createElement(E.Provider, { value: s }, n.createElement("div", { className: f }, n.createElement(x, { superOffset: function(e) {
    return r.addYear(l, e);
  }, onChange: u, getStart: function(e) {
    return r.setMonth(e, 0);
  }, getEnd: function(e) {
    return r.setMonth(e, 11);
  } }, p), n.createElement(v, d({}, t, { titleFormat: a.fieldQuarterFormat, colNum: 4, rowNum: 1, baseDate: g, getCellDate: function(e, C) {
    return r.addMonth(e, 3 * C);
  }, getCellText: function(e) {
    return m(e, { locale: a, format: a.cellQuarterFormat, generateConfig: r });
  }, getCellClassName: function() {
    return h({}, "".concat(o, "-cell-in-view"), !0);
  } }))));
}
export {
  q as default
};
