import D from "../../../../@babel/runtime/helpers/esm/extends.js";
import E from "../../../../@babel/runtime/helpers/esm/defineProperty.js";
import x from "../../../../@babel/runtime/helpers/esm/slicedToArray.js";
import * as r from "react";
import { formatValue as f } from "../../utils/dateUtil.js";
import { useInfo as F, PanelContext as N } from "../context.js";
import P from "../PanelBody.js";
import k from "../PanelHeader.js";
function Y(o) {
  var l = o.prefixCls, n = o.locale, e = o.generateConfig, m = o.pickerValue, c = o.disabledDate, u = o.onPickerValueChange, h = o.onModeChange, g = "".concat(l, "-month-panel"), s = F(o, "month"), d = x(s, 1)[0], p = e.setMonth(m, 0), C = n.shortMonths || (e.locale.getShortMonths ? e.locale.getShortMonths(n.locale) : []), M = c ? function(t, a) {
    var i = e.setDate(t, 1), v = e.setMonth(i, e.getMonth(i) + 1), y = e.addDate(v, -1);
    return c(i, a) && c(y, a);
  } : null, b = r.createElement("button", { type: "button", key: "year", "aria-label": n.yearSelect, onClick: function() {
    h("year");
  }, tabIndex: -1, className: "".concat(l, "-year-btn") }, f(m, { locale: n, format: n.yearFormat, generateConfig: e }));
  return r.createElement(N.Provider, { value: d }, r.createElement("div", { className: g }, r.createElement(k, { superOffset: function(t) {
    return e.addYear(m, t);
  }, onChange: u, getStart: function(t) {
    return e.setMonth(t, 0);
  }, getEnd: function(t) {
    return e.setMonth(t, 11);
  } }, b), r.createElement(P, D({}, o, { disabledDate: M, titleFormat: n.fieldMonthFormat, colNum: 3, rowNum: 4, baseDate: p, getCellDate: function(t, a) {
    return e.addMonth(t, a);
  }, getCellText: function(t) {
    var a = e.getMonth(t);
    return n.monthFormat ? f(t, { locale: n, format: n.monthFormat, generateConfig: e }) : C[a];
  }, getCellClassName: function() {
    return E({}, "".concat(l, "-cell-in-view"), !0);
  } }))));
}
export {
  Y as default
};
