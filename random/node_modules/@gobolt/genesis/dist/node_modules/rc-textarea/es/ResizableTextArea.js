import P from "../../@babel/runtime/helpers/esm/extends.js";
import W from "../../@babel/runtime/helpers/esm/defineProperty.js";
import N from "../../@babel/runtime/helpers/esm/objectSpread2.js";
import K from "../../@babel/runtime/helpers/esm/typeof.js";
import u from "../../@babel/runtime/helpers/esm/slicedToArray.js";
import Q from "../../@babel/runtime/helpers/esm/objectWithoutProperties.js";
import U from "../../../_virtual/index.js";
import Z from "../../rc-resize-observer/es/index.js";
import y from "../../rc-util/es/hooks/useLayoutEffect.js";
import $ from "../../rc-util/es/hooks/useMergedState.js";
import A from "../../rc-util/es/raf.js";
import * as t from "react";
import ee from "./calculateNodeHeight.js";
var te = ["prefixCls", "defaultValue", "value", "autoSize", "onResize", "className", "style", "disabled", "onChange", "onInternalAutoSize"], ve = t.forwardRef(function(I, V) {
  var e = I, m = e.prefixCls, T = e.defaultValue, d = e.value, n = e.autoSize, i = e.onResize, j = e.className, D = e.style, p = e.disabled, v = e.onChange, R = e.onInternalAutoSize, H = Q(e, te), M = $(T, { value: d, postState: function(r) {
    return r ?? "";
  } }), S = u(M, 2), O = S[0], X = S[1], o = t.useRef();
  t.useImperativeHandle(V, function() {
    return { textArea: o.current };
  });
  var Y = t.useMemo(function() {
    return n && K(n) === "object" ? [n.minRows, n.maxRows] : [];
  }, [n]), z = u(Y, 2), E = z[0], h = z[1], l = !!n, _ = t.useState(2), x = u(_, 2), a = x[0], f = x[1], k = t.useState(), b = u(k, 2), q = b[0], B = b[1], g = function() {
    f(0), process.env.NODE_ENV === "test" && (R == null || R());
  };
  y(function() {
    l && g();
  }, [d, E, h, l]), y(function() {
    if (a === 0) f(1);
    else if (a === 1) {
      var r = ee(o.current, !1, E, h);
      f(2), B(r);
    } else (function() {
      try {
        if (document.activeElement === o.current) {
          var s = o.current, G = s.selectionStart, J = s.selectionEnd, L = s.scrollTop;
          o.current.setSelectionRange(G, J), o.current.scrollTop = L;
        }
      } catch {
      }
    })();
  }, [a]);
  var w = t.useRef(), C = function() {
    A.cancel(w.current);
  };
  t.useEffect(function() {
    return C;
  }, []);
  var F = l ? q : null, c = N(N({}, D), F);
  return a !== 0 && a !== 1 || (c.overflowY = "hidden", c.overflowX = "hidden"), t.createElement(Z, { onResize: function(r) {
    a === 2 && (i == null || i(r), n && (C(), w.current = A(function() {
      g();
    })));
  }, disabled: !(n || i) }, t.createElement("textarea", P({}, H, { ref: o, style: c, className: U(m, j, W({}, "".concat(m, "-disabled"), p)), disabled: p, value: O, onChange: function(r) {
    X(r.target.value), v == null || v(r);
  } })));
});
export {
  ve as default
};
