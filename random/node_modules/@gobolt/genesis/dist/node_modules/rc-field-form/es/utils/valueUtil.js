import a from "../../../@babel/runtime/helpers/esm/toConsumableArray.js";
import u from "../../../@babel/runtime/helpers/esm/typeof.js";
import f from "../../../rc-util/es/utils/get.js";
import s from "../../../rc-util/es/utils/set.js";
import { toArray as g } from "./typeUtil.js";
function j(t) {
  return g(t);
}
function d(t, e) {
  var r = {};
  return e.forEach(function(n) {
    var o = f(t, n);
    r = s(r, n, o);
  }), r;
}
function N(t, e) {
  var r = arguments.length > 2 && arguments[2] !== void 0 && arguments[2];
  return t && t.some(function(n) {
    return l(e, n, r);
  });
}
function l(t, e) {
  return !(!t || !e) && !(!(arguments.length > 2 && arguments[2] !== void 0 && arguments[2]) && t.length !== e.length) && e.every(function(r, n) {
    return t[n] === r;
  });
}
function P(t, e) {
  if (t === e) return !0;
  if (!t && e || t && !e || !t || !e || u(t) !== "object" || u(e) !== "object") return !1;
  var r = Object.keys(t), n = Object.keys(e), o = new Set([].concat(r, n));
  return a(o).every(function(i) {
    var c = t[i], m = e[i];
    return typeof c == "function" && typeof m == "function" || c === m;
  });
}
function V(t) {
  var e = arguments.length <= 1 ? void 0 : arguments[1];
  return e && e.target && u(e.target) === "object" && t in e.target ? e.target[t] : e;
}
function k(t, e, r) {
  var n = t.length;
  if (e < 0 || e >= n || r < 0 || r >= n) return t;
  var o = t[e], i = e - r;
  return i > 0 ? [].concat(a(t.slice(0, r)), [o], a(t.slice(r, e)), a(t.slice(e + 1, n))) : i < 0 ? [].concat(a(t.slice(0, e)), a(t.slice(e + 1, r + 1)), [o], a(t.slice(r + 1, n))) : t;
}
export {
  d as cloneByNamePathList,
  N as containsNamePath,
  V as defaultGetValueFromEvent,
  j as getNamePath,
  f as getValue,
  P as isSimilar,
  l as matchNamePath,
  k as move,
  s as setValue
};
