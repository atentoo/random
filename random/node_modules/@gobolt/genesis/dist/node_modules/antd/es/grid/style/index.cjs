"use strict";Object.defineProperty(exports,Symbol.toStringTag,{value:"Module"}),require("../../../../@ant-design/cssinjs/es/extractStyle.cjs"),require("../../../../@ant-design/cssinjs/es/hooks/useCacheToken.cjs"),require("react"),require("../../../../@ant-design/cssinjs/es/StyleContext.cjs");const f=require("../../../../@ant-design/cssinjs/es/util/index.cjs");require("../../../../@ant-design/cssinjs/es/hooks/useCompatibleInsertionEffect.cjs"),require("../../../../@ant-design/cssinjs/es/hooks/useEffectCleanupRegister.cjs"),require("../../../../@ant-design/cssinjs/es/hooks/useHMR.cjs"),require("../../../../rc-util/es/warning.cjs"),require("../../../../@ant-design/cssinjs/es/theme/createTheme.cjs"),require("../../../../@ant-design/cssinjs/es/theme/ThemeCache.cjs"),require("../../../../@ant-design/cssinjs/es/transformers/legacyLogicalProperties.cjs"),require("../../../../rc-util/es/hooks/useLayoutEffect.cjs"),require("../../../../rc-util/es/ref.cjs");const m=require("../../../../@ant-design/cssinjs-utils/es/util/statistic.cjs");require("../../../../@ant-design/cssinjs-utils/es/_util/hooks/useUniqueMemo.cjs");const p=require("../../theme/util/genStyleUtils.cjs"),y=r=>{const{componentCls:o}=r;return{[o]:{position:"relative",maxWidth:"100%",minHeight:1}}},u=(r,o)=>((s,n)=>{const{prefixCls:a,componentCls:t,gridColumns:l}=s,i={};for(let e=l;e>=0;e--)e===0?(i[`${t}${n}-${e}`]={display:"none"},i[`${t}-push-${e}`]={insetInlineStart:"auto"},i[`${t}-pull-${e}`]={insetInlineEnd:"auto"},i[`${t}${n}-push-${e}`]={insetInlineStart:"auto"},i[`${t}${n}-pull-${e}`]={insetInlineEnd:"auto"},i[`${t}${n}-offset-${e}`]={marginInlineStart:0},i[`${t}${n}-order-${e}`]={order:0}):(i[`${t}${n}-${e}`]=[{"--ant-display":"block",display:"block"},{display:"var(--ant-display)",flex:`0 0 ${e/l*100}%`,maxWidth:e/l*100+"%"}],i[`${t}${n}-push-${e}`]={insetInlineStart:e/l*100+"%"},i[`${t}${n}-pull-${e}`]={insetInlineEnd:e/l*100+"%"},i[`${t}${n}-offset-${e}`]={marginInlineStart:e/l*100+"%"},i[`${t}${n}-order-${e}`]={order:e});return i[`${t}${n}-flex`]={flex:`var(--${a}${n}-flex)`},i})(r,o),$=()=>({}),d=()=>({}),g=p.genStyleHooks("Grid",r=>{const{componentCls:o}=r;return{[o]:{display:"flex",flexFlow:"row wrap",minWidth:0,"&::before, &::after":{display:"flex"},"&-no-wrap":{flexWrap:"nowrap"},"&-start":{justifyContent:"flex-start"},"&-center":{justifyContent:"center"},"&-end":{justifyContent:"flex-end"},"&-space-between":{justifyContent:"space-between"},"&-space-around":{justifyContent:"space-around"},"&-space-evenly":{justifyContent:"space-evenly"},"&-top":{alignItems:"flex-start"},"&-middle":{alignItems:"center"},"&-bottom":{alignItems:"flex-end"}}}},$),c=r=>({xs:r.screenXSMin,sm:r.screenSMMin,md:r.screenMDMin,lg:r.screenLGMin,xl:r.screenXLMin,xxl:r.screenXXLMin}),x=p.genStyleHooks("Grid",r=>{const o=m.merge(r,{gridColumns:24}),s=c(o);return delete s.xs,[y(o),u(o,""),u(o,"-xs"),Object.keys(s).map(n=>((a,t,l)=>({[`@media (min-width: ${f.unit(t)})`]:Object.assign({},u(a,l))}))(o,s[n],`-${n}`)).reduce((n,a)=>Object.assign(Object.assign({},n),a),{})]},d);exports.getMediaSize=c,exports.prepareColComponentToken=d,exports.prepareRowComponentToken=$,exports.useColStyle=x,exports.useRowStyle=g;
