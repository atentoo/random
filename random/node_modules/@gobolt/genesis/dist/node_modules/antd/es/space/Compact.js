import * as i from "react";
import C from "../../../../_virtual/index.js";
import j from "../../../rc-util/es/Children/toArray.js";
import "../config-provider/index.js";
import N from "../config-provider/hooks/useSize.js";
import P from "./style/index.js";
import { ConfigContext as k } from "../config-provider/context.js";
var v = function(t, o) {
  var e = {};
  for (var r in t) Object.prototype.hasOwnProperty.call(t, r) && o.indexOf(r) < 0 && (e[r] = t[r]);
  if (t != null && typeof Object.getOwnPropertySymbols == "function") {
    var c = 0;
    for (r = Object.getOwnPropertySymbols(t); c < r.length; c++) o.indexOf(r[c]) < 0 && Object.prototype.propertyIsEnumerable.call(t, r[c]) && (e[r[c]] = t[r[c]]);
  }
  return e;
};
const p = i.createContext(null), _ = (t, o) => {
  const e = i.useContext(p), r = i.useMemo(() => {
    if (!e) return "";
    const { compactDirection: c, isFirstItem: u, isLastItem: f } = e, l = c === "vertical" ? "-vertical-" : "-";
    return C(`${t}-compact${l}item`, { [`${t}-compact${l}first-item`]: u, [`${t}-compact${l}last-item`]: f, [`${t}-compact${l}item-rtl`]: o === "rtl" });
  }, [t, o, e]);
  return { compactSize: e == null ? void 0 : e.compactSize, compactDirection: e == null ? void 0 : e.compactDirection, compactItemClassnames: r };
}, q = (t) => {
  const { children: o } = t;
  return i.createElement(p.Provider, { value: null }, o);
}, z = (t) => {
  const { children: o } = t, e = v(t, ["children"]);
  return i.createElement(p.Provider, { value: i.useMemo(() => e, [e]) }, o);
}, A = (t) => {
  const { getPrefixCls: o, direction: e } = i.useContext(k), { size: r, direction: c, block: u, prefixCls: f, className: l, rootClassName: x, children: $ } = t, y = v(t, ["size", "direction", "block", "prefixCls", "className", "rootClassName", "children"]), b = N((a) => r ?? a), m = o("space-compact", f), [I, O] = P(m), h = C(m, O, { [`${m}-rtl`]: e === "rtl", [`${m}-block`]: u, [`${m}-vertical`]: c === "vertical" }, l, x), n = i.useContext(p), s = j($), g = i.useMemo(() => s.map((a, d) => {
    const S = (a == null ? void 0 : a.key) || `${m}-item-${d}`;
    return i.createElement(z, { key: S, compactSize: b, compactDirection: c, isFirstItem: d === 0 && (!n || (n == null ? void 0 : n.isFirstItem)), isLastItem: d === s.length - 1 && (!n || (n == null ? void 0 : n.isLastItem)) }, a);
  }), [r, s, n]);
  return s.length === 0 ? null : I(i.createElement("div", Object.assign({ className: h }, y), g));
};
export {
  q as NoCompactStyle,
  p as SpaceCompactItemContext,
  A as default,
  _ as useCompactItemContext
};
