import * as l from "react";
import c from "../../../../_virtual/index.js";
import ie from "../../../rc-util/es/omit.js";
import { devUseWarning as ce } from "../_util/warning.js";
import "../config-provider/index.js";
import de from "../config-provider/hooks/useSize.js";
import me from "../skeleton/Skeleton.js";
import be from "../tabs/index.js";
import ye from "./Grid.js";
import ve from "./style/index.js";
import pe from "../form/hooks/useVariants.js";
import { ConfigContext as ue } from "../config-provider/context.js";
var T = function(r, d) {
  var n = {};
  for (var s in r) Object.prototype.hasOwnProperty.call(r, s) && d.indexOf(s) < 0 && (n[s] = r[s]);
  if (r != null && typeof Object.getOwnPropertySymbols == "function") {
    var o = 0;
    for (s = Object.getOwnPropertySymbols(r); o < s.length; o++) d.indexOf(s[o]) < 0 && Object.prototype.propertyIsEnumerable.call(r, s[o]) && (n[s[o]] = r[s[o]]);
  }
  return n;
};
const fe = (r) => {
  const { actionClasses: d, actions: n = [], actionStyle: s } = r;
  return l.createElement("ul", { className: d, style: s }, n.map((o, g) => {
    const v = `action-${g}`;
    return l.createElement("li", { style: { width: 100 / n.length + "%" }, key: v }, l.createElement("span", null, o));
  }));
}, Ke = l.forwardRef((r, d) => {
  const { prefixCls: n, className: s, rootClassName: o, style: g, extra: v, headStyle: A = {}, bodyStyle: z = {}, title: h, loading: N, bordered: B, variant: _, size: L, type: C, cover: $, actions: O, tabList: u, children: f, activeTabKey: j, defaultActiveTabKey: k, tabBarExtraContent: D, hoverable: I, tabProps: M = {}, classNames: x, styles: S } = r, R = T(r, ["prefixCls", "className", "rootClassName", "style", "extra", "headStyle", "bodyStyle", "title", "loading", "bordered", "variant", "size", "type", "cover", "actions", "tabList", "children", "activeTabKey", "defaultActiveTabKey", "tabBarExtraContent", "hoverable", "tabProps", "classNames", "styles"]), { getPrefixCls: U, direction: V, card: i } = l.useContext(ue), [W] = pe("card", _, B);
  if (process.env.NODE_ENV !== "production") {
    const a = ce("Card");
    [["headStyle", "styles.header"], ["bodyStyle", "styles.body"], ["bordered", "variant"]].forEach((e) => {
      let [y, E] = e;
      a.deprecated(!(y in r), y, E);
    });
  }
  const m = (a) => {
    var e;
    return c((e = i == null ? void 0 : i.classNames) === null || e === void 0 ? void 0 : e[a], x == null ? void 0 : x[a]);
  }, b = (a) => {
    var e;
    return Object.assign(Object.assign({}, (e = i == null ? void 0 : i.styles) === null || e === void 0 ? void 0 : e[a]), S == null ? void 0 : S[a]);
  }, q = l.useMemo(() => {
    let a = !1;
    return l.Children.forEach(f, (e) => {
      (e == null ? void 0 : e.type) === ye && (a = !0);
    }), a;
  }, [f]), t = U("card", n), [F, G, H] = ve(t), J = l.createElement(me, { loading: !0, active: !0, paragraph: { rows: 4 }, title: !1 }, f), w = j !== void 0, Q = Object.assign(Object.assign({}, M), { [w ? "activeKey" : "defaultActiveKey"]: w ? j : k, tabBarExtraContent: D });
  let K;
  const p = de(L), X = p && p !== "default" ? p : "large", P = u ? l.createElement(be, Object.assign({ size: X }, Q, { className: `${t}-head-tabs`, onChange: (a) => {
    var e;
    (e = r.onTabChange) === null || e === void 0 || e.call(r, a);
  }, items: u.map((a) => {
    var { tab: e } = a, y = T(a, ["tab"]);
    return Object.assign({ label: e }, y);
  }) })) : null;
  if (h || v || P) {
    const a = c(`${t}-head`, m("header")), e = c(`${t}-head-title`, m("title")), y = c(`${t}-extra`, m("extra")), E = Object.assign(Object.assign({}, A), b("header"));
    K = l.createElement("div", { className: a, style: E }, l.createElement("div", { className: `${t}-head-wrapper` }, h && l.createElement("div", { className: e, style: b("title") }, h), v && l.createElement("div", { className: y, style: b("extra") }, v)), P);
  }
  const Y = c(`${t}-cover`, m("cover")), Z = $ ? l.createElement("div", { className: Y, style: b("cover") }, $) : null, ee = c(`${t}-body`, m("body")), te = Object.assign(Object.assign({}, z), b("body")), ae = l.createElement("div", { className: ee, style: te }, N ? J : f), le = c(`${t}-actions`, m("actions")), re = O != null && O.length ? l.createElement(fe, { actionClasses: le, actionStyle: b("actions"), actions: O }) : null, se = ie(R, ["onTabChange"]), oe = c(t, i == null ? void 0 : i.className, { [`${t}-loading`]: N, [`${t}-bordered`]: W !== "borderless", [`${t}-hoverable`]: I, [`${t}-contain-grid`]: q, [`${t}-contain-tabs`]: u == null ? void 0 : u.length, [`${t}-${p}`]: p, [`${t}-type-${C}`]: !!C, [`${t}-rtl`]: V === "rtl" }, s, o, G, H), ne = Object.assign(Object.assign({}, i == null ? void 0 : i.style), g);
  return F(l.createElement("div", Object.assign({ ref: d }, se, { className: oe, style: ne }), K, Z, ae, re));
});
export {
  Ke as default
};
