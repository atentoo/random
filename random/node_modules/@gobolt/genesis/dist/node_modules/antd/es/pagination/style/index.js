import "../../../../@ant-design/cssinjs/es/extractStyle.js";
import "../../../../@ant-design/cssinjs/es/hooks/useCacheToken.js";
import "react";
import "../../../../@ant-design/cssinjs/es/StyleContext.js";
import { unit as o } from "../../../../@ant-design/cssinjs/es/util/index.js";
import "../../../../@ant-design/cssinjs/es/hooks/useCompatibleInsertionEffect.js";
import "../../../../@ant-design/cssinjs/es/hooks/useEffectCleanupRegister.js";
import "../../../../@ant-design/cssinjs/es/hooks/useHMR.js";
import "../../../../rc-util/es/warning.js";
import "../../../../@ant-design/cssinjs/es/theme/createTheme.js";
import "../../../../@ant-design/cssinjs/es/theme/ThemeCache.js";
import "../../../../@ant-design/cssinjs/es/transformers/legacyLogicalProperties.js";
import { genBasicInputStyle as t, genInputSmallStyle as r } from "../../input/style/index.js";
import { genBaseOutlinedStyle as l, genDisabledStyle as a } from "../../input/style/variants.js";
import { resetComponent as c, genFocusOutline as e, genFocusStyle as m } from "../../style/index.js";
import "../../../../rc-util/es/hooks/useLayoutEffect.js";
import "../../../../rc-util/es/ref.js";
import { merge as s } from "../../../../@ant-design/cssinjs-utils/es/util/statistic.js";
import "../../../../@ant-design/cssinjs-utils/es/_util/hooks/useUniqueMemo.js";
import { genStyleHooks as g } from "../../theme/util/genStyleUtils.js";
import { initInputToken as d, initComponentToken as p } from "../../input/style/token.js";
const u = (i) => {
  const { componentCls: n } = i;
  return { [`${n}-disabled`]: { "&, &:hover": { cursor: "not-allowed", [`${n}-item-link`]: { color: i.colorTextDisabled, cursor: "not-allowed" } }, "&:focus-visible": { cursor: "not-allowed", [`${n}-item-link`]: { color: i.colorTextDisabled, cursor: "not-allowed" } } }, [`&${n}-disabled`]: { cursor: "not-allowed", [`${n}-item`]: { cursor: "not-allowed", "&:hover, &:active": { backgroundColor: "transparent" }, a: { color: i.colorTextDisabled, backgroundColor: "transparent", border: "none", cursor: "not-allowed" }, "&-active": { borderColor: i.colorBorder, backgroundColor: i.itemActiveBgDisabled, "&:hover, &:active": { backgroundColor: i.itemActiveBgDisabled }, a: { color: i.itemActiveColorDisabled } } }, [`${n}-item-link`]: { color: i.colorTextDisabled, cursor: "not-allowed", "&:hover, &:active": { backgroundColor: "transparent" }, [`${n}-simple&`]: { backgroundColor: "transparent", "&:hover, &:active": { backgroundColor: "transparent" } } }, [`${n}-simple-pager`]: { color: i.colorTextDisabled }, [`${n}-jump-prev, ${n}-jump-next`]: { [`${n}-item-link-icon`]: { opacity: 0 }, [`${n}-item-ellipsis`]: { opacity: 1 } } }, [`&${n}-simple`]: { [`${n}-prev, ${n}-next`]: { [`&${n}-disabled ${n}-item-link`]: { "&:hover, &:active": { backgroundColor: "transparent" } } } } };
}, b = (i) => {
  const { componentCls: n } = i;
  return { [`&${n}-mini ${n}-total-text, &${n}-mini ${n}-simple-pager`]: { height: i.itemSizeSM, lineHeight: o(i.itemSizeSM) }, [`&${n}-mini ${n}-item`]: { minWidth: i.itemSizeSM, height: i.itemSizeSM, margin: 0, lineHeight: o(i.calc(i.itemSizeSM).sub(2).equal()) }, [`&${n}-mini:not(${n}-disabled) ${n}-item:not(${n}-item-active)`]: { backgroundColor: "transparent", borderColor: "transparent", "&:hover": { backgroundColor: i.colorBgTextHover }, "&:active": { backgroundColor: i.colorBgTextActive } }, [`&${n}-mini ${n}-prev, &${n}-mini ${n}-next`]: { minWidth: i.itemSizeSM, height: i.itemSizeSM, margin: 0, lineHeight: o(i.itemSizeSM) }, [`&${n}-mini:not(${n}-disabled)`]: { [`${n}-prev, ${n}-next`]: { [`&:hover ${n}-item-link`]: { backgroundColor: i.colorBgTextHover }, [`&:active ${n}-item-link`]: { backgroundColor: i.colorBgTextActive }, [`&${n}-disabled:hover ${n}-item-link`]: { backgroundColor: "transparent" } } }, [`
    &${n}-mini ${n}-prev ${n}-item-link,
    &${n}-mini ${n}-next ${n}-item-link
    `]: { backgroundColor: "transparent", borderColor: "transparent", "&::after": { height: i.itemSizeSM, lineHeight: o(i.itemSizeSM) } }, [`&${n}-mini ${n}-jump-prev, &${n}-mini ${n}-jump-next`]: { height: i.itemSizeSM, marginInlineEnd: 0, lineHeight: o(i.itemSizeSM) }, [`&${n}-mini ${n}-options`]: { marginInlineStart: i.paginationMiniOptionsMarginInlineStart, "&-size-changer": { top: i.miniOptionsSizeChangerTop }, "&-quick-jumper": { height: i.itemSizeSM, lineHeight: o(i.itemSizeSM), input: Object.assign(Object.assign({}, r(i)), { width: i.paginationMiniQuickJumperInputWidth, height: i.controlHeightSM }) } } };
}, S = (i) => {
  const { componentCls: n } = i;
  return { [`
    &${n}-simple ${n}-prev,
    &${n}-simple ${n}-next
    `]: { height: i.itemSizeSM, lineHeight: o(i.itemSizeSM), verticalAlign: "top", [`${n}-item-link`]: { height: i.itemSizeSM, backgroundColor: "transparent", border: 0, "&:hover": { backgroundColor: i.colorBgTextHover }, "&:active": { backgroundColor: i.colorBgTextActive }, "&::after": { height: i.itemSizeSM, lineHeight: o(i.itemSizeSM) } } }, [`&${n}-simple ${n}-simple-pager`]: { display: "inline-block", height: i.itemSizeSM, marginInlineEnd: i.marginXS, input: { boxSizing: "border-box", height: "100%", padding: `0 ${o(i.paginationItemPaddingInline)}`, textAlign: "center", backgroundColor: i.itemInputBg, border: `${o(i.lineWidth)} ${i.lineType} ${i.colorBorder}`, borderRadius: i.borderRadius, outline: "none", transition: `border-color ${i.motionDurationMid}`, color: "inherit", "&:hover": { borderColor: i.colorPrimary }, "&:focus": { borderColor: i.colorPrimaryHover, boxShadow: `${o(i.inputOutlineOffset)} 0 ${o(i.controlOutlineWidth)} ${i.controlOutline}` }, "&[disabled]": { color: i.colorTextDisabled, backgroundColor: i.colorBgContainerDisabled, borderColor: i.colorBorder, cursor: "not-allowed" } } } };
}, $ = (i) => {
  const { componentCls: n } = i;
  return { [`${n}-jump-prev, ${n}-jump-next`]: { outline: 0, [`${n}-item-container`]: { position: "relative", [`${n}-item-link-icon`]: { color: i.colorPrimary, fontSize: i.fontSizeSM, opacity: 0, transition: `all ${i.motionDurationMid}`, "&-svg": { top: 0, insetInlineEnd: 0, bottom: 0, insetInlineStart: 0, margin: "auto" } }, [`${n}-item-ellipsis`]: { position: "absolute", top: 0, insetInlineEnd: 0, bottom: 0, insetInlineStart: 0, display: "block", margin: "auto", color: i.colorTextDisabled, letterSpacing: i.paginationEllipsisLetterSpacing, textAlign: "center", textIndent: i.paginationEllipsisTextIndent, opacity: 1, transition: `all ${i.motionDurationMid}` } }, "&:hover": { [`${n}-item-link-icon`]: { opacity: 1 }, [`${n}-item-ellipsis`]: { opacity: 0 } } }, [`
    ${n}-prev,
    ${n}-jump-prev,
    ${n}-jump-next
    `]: { marginInlineEnd: i.marginXS }, [`
    ${n}-prev,
    ${n}-next,
    ${n}-jump-prev,
    ${n}-jump-next
    `]: { display: "inline-block", minWidth: i.itemSize, height: i.itemSize, color: i.colorText, fontFamily: i.fontFamily, lineHeight: o(i.itemSize), textAlign: "center", verticalAlign: "middle", listStyle: "none", borderRadius: i.borderRadius, cursor: "pointer", transition: `all ${i.motionDurationMid}` }, [`${n}-prev, ${n}-next`]: { outline: 0, button: { color: i.colorText, cursor: "pointer", userSelect: "none" }, [`${n}-item-link`]: { display: "block", width: "100%", height: "100%", padding: 0, fontSize: i.fontSizeSM, textAlign: "center", backgroundColor: "transparent", border: `${o(i.lineWidth)} ${i.lineType} transparent`, borderRadius: i.borderRadius, outline: "none", transition: `all ${i.motionDurationMid}` }, [`&:hover ${n}-item-link`]: { backgroundColor: i.colorBgTextHover }, [`&:active ${n}-item-link`]: { backgroundColor: i.colorBgTextActive }, [`&${n}-disabled:hover`]: { [`${n}-item-link`]: { backgroundColor: "transparent" } } }, [`${n}-slash`]: { marginInlineEnd: i.paginationSlashMarginInlineEnd, marginInlineStart: i.paginationSlashMarginInlineStart }, [`${n}-options`]: { display: "inline-block", marginInlineStart: i.margin, verticalAlign: "middle", "&-size-changer": { display: "inline-block", width: "auto" }, "&-quick-jumper": { display: "inline-block", height: i.controlHeight, marginInlineStart: i.marginXS, lineHeight: o(i.controlHeight), verticalAlign: "top", input: Object.assign(Object.assign(Object.assign({}, t(i)), l(i, { borderColor: i.colorBorder, hoverBorderColor: i.colorPrimaryHover, activeBorderColor: i.colorPrimary, activeShadow: i.activeShadow })), { "&[disabled]": Object.assign({}, a(i)), width: i.calc(i.controlHeightLG).mul(1.25).equal(), height: i.controlHeight, boxSizing: "border-box", margin: 0, marginInlineStart: i.marginXS, marginInlineEnd: i.marginXS }) } } };
}, h = (i) => {
  const { componentCls: n } = i;
  return { [`${n}-item`]: { display: "inline-block", minWidth: i.itemSize, height: i.itemSize, marginInlineEnd: i.marginXS, fontFamily: i.fontFamily, lineHeight: o(i.calc(i.itemSize).sub(2).equal()), textAlign: "center", verticalAlign: "middle", listStyle: "none", backgroundColor: i.itemBg, border: `${o(i.lineWidth)} ${i.lineType} transparent`, borderRadius: i.borderRadius, outline: 0, cursor: "pointer", userSelect: "none", a: { display: "block", padding: `0 ${o(i.paginationItemPaddingInline)}`, color: i.colorText, "&:hover": { textDecoration: "none" } }, [`&:not(${n}-item-active)`]: { "&:hover": { transition: `all ${i.motionDurationMid}`, backgroundColor: i.colorBgTextHover }, "&:active": { backgroundColor: i.colorBgTextActive } }, "&-active": { fontWeight: i.fontWeightStrong, backgroundColor: i.itemActiveBg, borderColor: i.colorPrimary, a: { color: i.colorPrimary }, "&:hover": { borderColor: i.colorPrimaryHover }, "&:hover a": { color: i.colorPrimaryHover } } } };
}, v = (i) => {
  const { componentCls: n } = i;
  return { [n]: Object.assign(Object.assign(Object.assign(Object.assign(Object.assign(Object.assign(Object.assign(Object.assign({}, c(i)), { display: "flex", "&-start": { justifyContent: "start" }, "&-center": { justifyContent: "center" }, "&-end": { justifyContent: "end" }, "ul, ol": { margin: 0, padding: 0, listStyle: "none" }, "&::after": { display: "block", clear: "both", height: 0, overflow: "hidden", visibility: "hidden", content: '""' }, [`${n}-total-text`]: { display: "inline-block", height: i.itemSize, marginInlineEnd: i.marginXS, lineHeight: o(i.calc(i.itemSize).sub(2).equal()), verticalAlign: "middle" } }), h(i)), $(i)), S(i)), b(i)), u(i)), { [`@media only screen and (max-width: ${i.screenLG}px)`]: { [`${n}-item`]: { "&-after-jump-prev, &-before-jump-next": { display: "none" } } }, [`@media only screen and (max-width: ${i.screenSM}px)`]: { [`${n}-options`]: { display: "none" } } }), [`&${i.componentCls}-rtl`]: { direction: "rtl" } };
}, k = (i) => {
  const { componentCls: n } = i;
  return { [`${n}:not(${n}-disabled)`]: { [`${n}-item`]: Object.assign({}, m(i)), [`${n}-jump-prev, ${n}-jump-next`]: { "&:focus-visible": Object.assign({ [`${n}-item-link-icon`]: { opacity: 1 }, [`${n}-item-ellipsis`]: { opacity: 0 } }, e(i)) }, [`${n}-prev, ${n}-next`]: { [`&:focus-visible ${n}-item-link`]: Object.assign({}, e(i)) } } };
}, C = (i) => Object.assign({ itemBg: i.colorBgContainer, itemSize: i.controlHeight, itemSizeSM: i.controlHeightSM, itemActiveBg: i.colorBgContainer, itemLinkBg: i.colorBgContainer, itemActiveColorDisabled: i.colorTextDisabled, itemActiveBgDisabled: i.controlItemBgActiveDisabled, itemInputBg: i.colorBgContainer, miniOptionsSizeChangerTop: 0 }, p(i)), y = (i) => s(i, { inputOutlineOffset: 0, paginationMiniOptionsMarginInlineStart: i.calc(i.marginXXS).div(2).equal(), paginationMiniQuickJumperInputWidth: i.calc(i.controlHeightLG).mul(1.1).equal(), paginationItemPaddingInline: i.calc(i.marginXXS).mul(1.5).equal(), paginationEllipsisLetterSpacing: i.calc(i.marginXXS).div(2).equal(), paginationSlashMarginInlineStart: i.marginSM, paginationSlashMarginInlineEnd: i.marginSM, paginationEllipsisTextIndent: "0.13em" }, d(i)), G = g("Pagination", (i) => {
  const n = y(i);
  return [v(n), k(n)];
}, C);
export {
  G as default,
  C as prepareComponentToken,
  y as prepareToken
};
