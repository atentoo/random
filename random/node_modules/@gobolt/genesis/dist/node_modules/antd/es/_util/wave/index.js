import a, { useContext as u, useRef as v } from "react";
import E from "../../../../../_virtual/index.js";
import b from "../../../../rc-util/es/Dom/isVisible.js";
import { supportRef as g, composeRef as N, getNodeRef as x } from "../../../../rc-util/es/ref.js";
import "../../config-provider/index.js";
import { cloneElement as C } from "../reactNode.js";
import R from "./style.js";
import k from "./useWave.js";
import { ConfigContext as y } from "../../config-provider/context.js";
const A = (l) => {
  const { children: t, disabled: r, component: m } = l, { getPrefixCls: c } = u(y), o = v(null), s = c("wave"), [, f] = R(s), d = k(o, E(s, f), m);
  if (a.useEffect(() => {
    const e = o.current;
    if (!e || e.nodeType !== 1 || r) return;
    const n = (i) => {
      !b(i.target) || !e.getAttribute || e.getAttribute("disabled") || e.disabled || e.className.includes("disabled") || e.className.includes("-leave") || d(i);
    };
    return e.addEventListener("click", n, !0), () => {
      e.removeEventListener("click", n, !0);
    };
  }, [r]), !a.isValidElement(t)) return t ?? null;
  const p = g(t) ? N(x(t), o) : o;
  return C(t, { ref: p });
};
process.env.NODE_ENV !== "production" && (A.displayName = "Wave");
export {
  A as default
};
