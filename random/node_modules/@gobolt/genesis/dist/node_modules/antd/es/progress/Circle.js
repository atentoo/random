import * as i from "react";
import W from "../../../../_virtual/index.js";
import "../../../rc-progress/es/Line.js";
import w from "../../../rc-progress/es/Circle/index.js";
import D from "../tooltip/index.js";
import { getSize as L, getPercentage as M, getStrokeColor as O } from "./utils.js";
const B = (e) => {
  const { prefixCls: s, trailColor: g = null, strokeLinecap: h = "round", gapPosition: C, gapDegree: t, width: f = 120, type: l, children: a, success: k, size: u = f, steps: c } = e, [o, b] = L(u, "circle");
  let { strokeWidth: r } = e;
  r === void 0 && (r = Math.max(((S) => 3 / S * 100)(o), 6));
  const v = { width: o, height: b, fontSize: 0.15 * o + 6 }, x = i.useMemo(() => t || t === 0 ? t : l === "dashboard" ? 75 : void 0, [t, l]), n = M(e), j = C || l === "dashboard" && "bottom" || void 0, y = Object.prototype.toString.call(e.strokeColor) === "[object Object]", p = O({ success: k, strokeColor: e.strokeColor }), z = W(`${s}-inner`, { [`${s}-circle-gradient`]: y }), E = i.createElement(w, { steps: c, percent: c ? n[1] : n, strokeWidth: r, trailWidth: r, strokeColor: c ? p[1] : p, strokeLinecap: h, trailColor: g, prefixCls: s, gapDegree: x, gapPosition: j }), m = o <= 20, d = i.createElement("div", { className: z, style: v }, E, !m && a);
  return m ? i.createElement(D, { title: a }, d) : d;
};
export {
  B as default
};
