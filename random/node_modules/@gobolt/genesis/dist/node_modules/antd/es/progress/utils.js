import { presetPrimaryColors as d } from "../../../@ant-design/colors/es/presets.js";
function a(r) {
  return !r || r < 0 ? 0 : r > 100 ? 100 : r;
}
function g(r) {
  let { success: t, successPercent: n } = r, s = n;
  return t && "progress" in t && (s = t.progress), t && "percent" in t && (s = t.percent), s;
}
const f = (r) => {
  let { percent: t, success: n, successPercent: s } = r;
  const c = a(g({ success: n, successPercent: s }));
  return [c, a(a(t) - c)];
}, v = (r) => {
  let { success: t = {}, strokeColor: n } = r;
  const { strokeColor: s } = t;
  return [s || d.green, n || null];
}, h = (r, t, n) => {
  var s, c, l, i;
  let o = -1, e = -1;
  if (t === "step") {
    const u = n.steps, p = n.strokeWidth;
    typeof r == "string" || r === void 0 ? (o = r === "small" ? 2 : 14, e = p ?? 8) : typeof r == "number" ? [o, e] = [r, r] : [o = 14, e = 8] = Array.isArray(r) ? r : [r.width, r.height], o *= u;
  } else if (t === "line") {
    const u = n == null ? void 0 : n.strokeWidth;
    typeof r == "string" || r === void 0 ? e = u || (r === "small" ? 6 : 8) : typeof r == "number" ? [o, e] = [r, r] : [o = -1, e = 8] = Array.isArray(r) ? r : [r.width, r.height];
  } else t !== "circle" && t !== "dashboard" || (typeof r == "string" || r === void 0 ? [o, e] = r === "small" ? [60, 60] : [120, 120] : typeof r == "number" ? [o, e] = [r, r] : Array.isArray(r) && (o = (c = (s = r[0]) !== null && s !== void 0 ? s : r[1]) !== null && c !== void 0 ? c : 120, e = (i = (l = r[0]) !== null && l !== void 0 ? l : r[1]) !== null && i !== void 0 ? i : 120));
  return [o, e];
};
export {
  f as getPercentage,
  h as getSize,
  v as getStrokeColor,
  g as getSuccessPercent,
  a as validProgress
};
