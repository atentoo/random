const r = (e, n) => "key" in e && e.key !== void 0 && e.key !== null ? e.key : e.dataIndex ? Array.isArray(e.dataIndex) ? e.dataIndex.join(".") : e.dataIndex : n;
function a(e, n) {
  return n ? `${n}-${e}` : `${e}`;
}
const t = (e, n) => typeof e == "function" ? e(n) : e, d = (e, n) => {
  const o = t(e, n);
  return Object.prototype.toString.call(o) === "[object Object]" ? "" : o;
};
export {
  r as getColumnKey,
  a as getColumnPos,
  t as renderColumnTitle,
  d as safeColumnTitle
};
