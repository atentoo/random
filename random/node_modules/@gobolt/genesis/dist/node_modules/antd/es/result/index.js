import * as e from "react";
import b from "../../../@ant-design/icons/es/icons/CheckCircleFilled.js";
import y from "../../../@ant-design/icons/es/icons/CloseCircleFilled.js";
import D from "../../../@ant-design/icons/es/icons/ExclamationCircleFilled.js";
import O from "../../../@ant-design/icons/es/icons/WarningFilled.js";
import f from "../../../../_virtual/index.js";
import { devUseWarning as I } from "../_util/warning.js";
import "../config-provider/index.js";
import M from "./noFound.js";
import P from "./serverError.js";
import h from "./style/index.js";
import j from "./unauthorized.js";
import { ConfigContext as T } from "../config-provider/context.js";
const k = { success: b, error: y, info: D, warning: O }, a = { 404: M, 500: P, 403: j }, A = Object.keys(a), G = (n) => {
  let { prefixCls: r, icon: t, status: i } = n;
  const o = f(`${r}-icon`);
  if (process.env.NODE_ENV !== "production") {
    const l = I("Result");
    process.env.NODE_ENV !== "production" && l(!(typeof t == "string" && t.length > 2), "breaking", `\`icon\` is using ReactNode instead of string naming in v4. Please check \`${t}\` at https://ant.design/components/icon`);
  }
  if (A.includes(`${i}`)) {
    const l = a[i];
    return e.createElement("div", { className: `${o} ${r}-image` }, e.createElement(l, null));
  }
  const p = e.createElement(k[i]);
  return t === null || t === !1 ? null : e.createElement("div", { className: o }, t || p);
}, S = (n) => {
  let { prefixCls: r, extra: t } = n;
  return t ? e.createElement("div", { className: `${r}-extra` }, t) : null;
}, m = (n) => {
  let { prefixCls: r, className: t, rootClassName: i, subTitle: o, title: p, style: l, children: E, status: u = "info", icon: d, extra: N } = n;
  const { getPrefixCls: x, direction: g, result: c } = e.useContext(T), s = x("result", r), [v, $, C] = h(s), _ = f(s, `${s}-${u}`, t, c == null ? void 0 : c.className, i, { [`${s}-rtl`]: g === "rtl" }, $, C), R = Object.assign(Object.assign({}, c == null ? void 0 : c.style), l);
  return v(e.createElement("div", { className: _, style: R }, e.createElement(G, { prefixCls: s, status: u, icon: d }), e.createElement("div", { className: `${s}-title` }, p), o && e.createElement("div", { className: `${s}-subtitle` }, o), e.createElement(S, { prefixCls: s, extra: N }), E && e.createElement("div", { className: `${s}-content` }, E)));
};
m.PRESENTED_IMAGE_403 = a[403], m.PRESENTED_IMAGE_404 = a[404], m.PRESENTED_IMAGE_500 = a[500], process.env.NODE_ENV !== "production" && (m.displayName = "Result");
export {
  a as ExceptionMap,
  k as IconMap,
  m as default
};
