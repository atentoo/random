const z = (n) => {
  const { fontSize: r, lineHeight: a, lineWidth: p, controlHeight: e, controlHeightSM: c, controlHeightLG: o, paddingXXS: t, controlPaddingHorizontal: d, zIndexPopupBase: m, colorText: h, fontWeightStrong: I, controlItemBgActive: B, controlItemBgHover: s, colorBgContainer: g, colorFillSecondary: u, colorBgContainerDisabled: H, colorTextDisabled: S, colorPrimaryHover: C, colorPrimary: M, controlOutline: x } = n, i = 2 * t, l = 2 * p, P = Math.min(e - i, e - l), v = Math.min(c - i, c - l), f = Math.min(o - i, o - l);
  return { INTERNAL_FIXED_ITEM_MARGIN: Math.floor(t / 2), zIndexPopup: m + 50, optionSelectedColor: h, optionSelectedFontWeight: I, optionSelectedBg: B, optionActiveBg: s, optionPadding: `${(e - r * a) / 2}px ${d}px`, optionFontSize: r, optionLineHeight: a, optionHeight: e, selectorBg: g, clearBg: g, singleItemHeightLG: o, multipleItemBg: u, multipleItemBorderColor: "transparent", multipleItemHeight: P, multipleItemHeightSM: v, multipleItemHeightLG: f, multipleSelectorBgDisabled: H, multipleItemColorDisabled: S, multipleItemBorderColorDisabled: "transparent", showArrowPaddingInlineEnd: Math.ceil(1.25 * n.fontSize), hoverBorderColor: C, activeBorderColor: M, activeOutlineColor: x, selectAffixPadding: t };
};
export {
  z as prepareComponentToken
};
