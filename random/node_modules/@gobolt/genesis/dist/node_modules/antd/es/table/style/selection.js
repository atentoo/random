import "../../../../@ant-design/cssinjs/es/extractStyle.js";
import "../../../../@ant-design/cssinjs/es/hooks/useCacheToken.js";
import "react";
import "../../../../@ant-design/cssinjs/es/StyleContext.js";
import { unit as $ } from "../../../../@ant-design/cssinjs/es/util/index.js";
import "../../../../@ant-design/cssinjs/es/hooks/useCompatibleInsertionEffect.js";
import "../../../../@ant-design/cssinjs/es/hooks/useEffectCleanupRegister.js";
import "../../../../@ant-design/cssinjs/es/hooks/useHMR.js";
import "../../../../rc-util/es/warning.js";
import "../../../../@ant-design/cssinjs/es/theme/createTheme.js";
import "../../../../@ant-design/cssinjs/es/theme/ThemeCache.js";
import "../../../../@ant-design/cssinjs/es/transformers/legacyLogicalProperties.js";
const H = (t) => {
  const { componentCls: e, antCls: d, iconCls: a, fontSizeIcon: l, padding: i, paddingXS: r, headerIconColor: c, headerIconHoverColor: p, tableSelectionColumnWidth: n, tableSelectedRowBg: m, tableSelectedRowHoverBg: s, tableRowHoverBg: u, tablePaddingHorizontal: g, calc: o } = t;
  return { [`${e}-wrapper`]: { [`${e}-selection-col`]: { width: n, [`&${e}-selection-col-with-dropdown`]: { width: o(n).add(l).add(o(i).div(4)).equal() } }, [`${e}-bordered ${e}-selection-col`]: { width: o(n).add(o(r).mul(2)).equal(), [`&${e}-selection-col-with-dropdown`]: { width: o(n).add(l).add(o(i).div(4)).add(o(r).mul(2)).equal() } }, [`
        table tr th${e}-selection-column,
        table tr td${e}-selection-column,
        ${e}-selection-column
      `]: { paddingInlineEnd: t.paddingXS, paddingInlineStart: t.paddingXS, textAlign: "center", [`${d}-radio-wrapper`]: { marginInlineEnd: 0 } }, [`table tr th${e}-selection-column${e}-cell-fix-left`]: { zIndex: o(t.zIndexTableFixed).add(1).equal({ unit: !1 }) }, [`table tr th${e}-selection-column::after`]: { backgroundColor: "transparent !important" }, [`${e}-selection`]: { position: "relative", display: "inline-flex", flexDirection: "column" }, [`${e}-selection-extra`]: { position: "absolute", top: 0, zIndex: 1, cursor: "pointer", transition: `all ${t.motionDurationSlow}`, marginInlineStart: "100%", paddingInlineStart: $(o(g).div(4).equal()), [a]: { color: c, fontSize: l, verticalAlign: "baseline", "&:hover": { color: p } } }, [`${e}-tbody`]: { [`${e}-row`]: { [`&${e}-row-selected`]: { [`> ${e}-cell`]: { background: m, "&-row-hover": { background: s } } }, [`> ${e}-cell-row-hover`]: { background: u } } } } };
};
export {
  H as default
};
