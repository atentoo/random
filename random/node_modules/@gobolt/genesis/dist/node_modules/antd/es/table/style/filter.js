import "../../../../@ant-design/cssinjs/es/extractStyle.js";
import "../../../../@ant-design/cssinjs/es/hooks/useCacheToken.js";
import "react";
import "../../../../@ant-design/cssinjs/es/StyleContext.js";
import { unit as o } from "../../../../@ant-design/cssinjs/es/util/index.js";
import "../../../../@ant-design/cssinjs/es/hooks/useCompatibleInsertionEffect.js";
import "../../../../@ant-design/cssinjs/es/hooks/useEffectCleanupRegister.js";
import "../../../../@ant-design/cssinjs/es/hooks/useHMR.js";
import "../../../../rc-util/es/warning.js";
import "../../../../@ant-design/cssinjs/es/theme/createTheme.js";
import "../../../../@ant-design/cssinjs/es/theme/ThemeCache.js";
import "../../../../@ant-design/cssinjs/es/transformers/legacyLogicalProperties.js";
import { resetComponent as R } from "../../style/index.js";
const K = (a) => {
  const { componentCls: d, antCls: t, iconCls: b, tableFilterDropdownWidth: u, tableFilterDropdownSearchWidth: $, paddingXXS: n, paddingXS: e, colorText: h, lineWidth: p, lineType: w, tableBorderColor: f, headerIconColor: x, fontSizeSM: c, tablePaddingHorizontal: v, borderRadius: m, motionDurationSlow: S, colorTextDescription: k, colorPrimary: C, tableHeaderFilterActiveBg: y, colorTextDisabled: s, tableFilterDropdownBg: B, tableFilterDropdownHeight: D, controlItemBgHover: I, controlItemBgActive: F, boxShadowSecondary: H, filterDropdownMenuBg: T, calc: l } = a, j = `${t}-dropdown`, r = `${d}-filter-dropdown`, i = `${t}-tree`, g = `${o(p)} ${w} ${f}`;
  return [{ [`${d}-wrapper`]: { [`${d}-filter-column`]: { display: "flex", justifyContent: "space-between" }, [`${d}-filter-trigger`]: { position: "relative", display: "flex", alignItems: "center", marginBlock: l(n).mul(-1).equal(), marginInline: `${o(n)} ${o(l(v).div(2).mul(-1).equal())}`, padding: `0 ${o(n)}`, color: x, fontSize: c, borderRadius: m, cursor: "pointer", transition: `all ${S}`, "&:hover": { color: k, background: y }, "&.active": { color: C } } } }, { [`${t}-dropdown`]: { [r]: Object.assign(Object.assign({}, R(a)), { minWidth: u, backgroundColor: B, borderRadius: m, boxShadow: H, overflow: "hidden", [`${j}-menu`]: { maxHeight: D, overflowX: "hidden", border: 0, boxShadow: "none", borderRadius: "unset", backgroundColor: T, "&:empty::after": { display: "block", padding: `${o(e)} 0`, color: s, fontSize: c, textAlign: "center", content: '"Not Found"' } }, [`${r}-tree`]: { paddingBlock: `${o(e)} 0`, paddingInline: e, [i]: { padding: 0 }, [`${i}-treenode ${i}-node-content-wrapper:hover`]: { backgroundColor: I }, [`${i}-treenode-checkbox-checked ${i}-node-content-wrapper`]: { "&, &:hover": { backgroundColor: F } } }, [`${r}-search`]: { padding: e, borderBottom: g, "&-input": { input: { minWidth: $ }, [b]: { color: s } } }, [`${r}-checkall`]: { width: "100%", marginBottom: n, marginInlineStart: n }, [`${r}-btns`]: { display: "flex", justifyContent: "space-between", padding: `${o(l(e).sub(p).equal())} ${o(e)}`, overflow: "hidden", borderTop: g } }) } }, { [`${t}-dropdown ${r}, ${r}-submenu`]: { [`${t}-checkbox-wrapper + span`]: { paddingInlineStart: e, color: h }, "> ul": { maxHeight: "calc(100vh - 130px)", overflowX: "hidden", overflowY: "auto" } } }];
};
export {
  K as default
};
