import "../../../../@ant-design/cssinjs/es/extractStyle.js";
import "../../../../@ant-design/cssinjs/es/hooks/useCacheToken.js";
import "react";
import "../../../../@ant-design/cssinjs/es/StyleContext.js";
import { unit as o } from "../../../../@ant-design/cssinjs/es/util/index.js";
import "../../../../@ant-design/cssinjs/es/hooks/useCompatibleInsertionEffect.js";
import "../../../../@ant-design/cssinjs/es/hooks/useEffectCleanupRegister.js";
import "../../../../@ant-design/cssinjs/es/hooks/useHMR.js";
import "../../../../rc-util/es/warning.js";
import "../../../../@ant-design/cssinjs/es/theme/createTheme.js";
import "../../../../@ant-design/cssinjs/es/theme/ThemeCache.js";
import "../../../../@ant-design/cssinjs/es/transformers/legacyLogicalProperties.js";
import { operationUnit as S } from "../../style/index.js";
const O = (a) => {
  const { componentCls: e, antCls: c, motionDurationSlow: s, lineWidth: n, paddingXS: m, lineType: b, tableBorderColor: f, tableExpandIconBg: g, tableExpandColumnWidth: u, borderRadius: x, tablePaddingVertical: d, tablePaddingHorizontal: l, tableExpandedRowBg: $, paddingXXS: h, expandIconMarginTop: w, expandIconSize: r, expandIconHalfInner: p, expandIconScale: I, calc: i } = a, v = `${o(n)} ${b} ${f}`, t = i(h).sub(n).equal();
  return { [`${e}-wrapper`]: { [`${e}-expand-icon-col`]: { width: u }, [`${e}-row-expand-icon-cell`]: { textAlign: "center", [`${e}-row-expand-icon`]: { display: "inline-flex", float: "none", verticalAlign: "sub" } }, [`${e}-row-indent`]: { height: 1, float: "left" }, [`${e}-row-expand-icon`]: Object.assign(Object.assign({}, S(a)), { position: "relative", float: "left", width: r, height: r, color: "inherit", lineHeight: o(r), background: g, border: v, borderRadius: x, transform: `scale(${I})`, "&:focus, &:hover, &:active": { borderColor: "currentcolor" }, "&::before, &::after": { position: "absolute", background: "currentcolor", transition: `transform ${s} ease-out`, content: '""' }, "&::before": { top: p, insetInlineEnd: t, insetInlineStart: t, height: n }, "&::after": { top: t, bottom: t, insetInlineStart: p, width: n, transform: "rotate(90deg)" }, "&-collapsed::before": { transform: "rotate(-180deg)" }, "&-collapsed::after": { transform: "rotate(0deg)" }, "&-spaced": { "&::before, &::after": { display: "none", content: "none" }, background: "transparent", border: 0, visibility: "hidden" } }), [`${e}-row-indent + ${e}-row-expand-icon`]: { marginTop: w, marginInlineEnd: m }, [`tr${e}-expanded-row`]: { "&, &:hover": { "> th, > td": { background: $ } }, [`${c}-descriptions-view`]: { display: "flex", table: { flex: "auto", width: "100%" } } }, [`${e}-expanded-row-fixed`]: { position: "relative", margin: `${o(i(d).mul(-1).equal())} ${o(i(l).mul(-1).equal())}`, padding: `${o(d)} ${o(l)}` } } };
};
export {
  O as default
};
