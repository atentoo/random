import d from "../../../../@babel/runtime/helpers/esm/toConsumableArray.js";
import { fillFieldNames as a } from "../../../../rc-tree/es/utils/treeUtil.js";
function f(c, s, i) {
  const { key: e, children: t } = i;
  c.forEach(function(r) {
    const o = r[e], n = r[t];
    s(o, r) !== !1 && f(n || [], s, i);
  });
}
function h(c) {
  let { treeData: s, expandedKeys: i, startKey: e, endKey: t, fieldNames: r } = c;
  const o = [];
  let n = 0;
  return e && e === t ? [e] : !e || !t ? [] : (f(s, (u) => {
    if (n === 2) return !1;
    if (/* @__PURE__ */ function(l) {
      return l === e || l === t;
    }(u)) {
      if (o.push(u), n === 0) n = 1;
      else if (n === 1) return n = 2, !1;
    } else n === 1 && o.push(u);
    return i.includes(u);
  }, a(r)), o);
}
function m(c, s, i) {
  const e = d(s), t = [];
  return f(c, (r, o) => {
    const n = e.indexOf(r);
    return n !== -1 && (t.push(o), e.splice(n, 1)), !!e.length;
  }, a(i)), t;
}
export {
  h as calcRangeKeys,
  m as convertDirectoryKeysToNodes
};
