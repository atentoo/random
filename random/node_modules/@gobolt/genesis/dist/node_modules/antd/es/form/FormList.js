import * as s from "react";
import "../../../rc-field-form/es/index.js";
import { devUseWarning as l } from "../_util/warning.js";
import "../config-provider/index.js";
import { FormItemPrefixContext as u } from "./context.js";
import { ConfigContext as y } from "../config-provider/context.js";
import O from "../../../rc-field-form/es/List.js";
var g = function(r, n) {
  var o = {};
  for (var e in r) Object.prototype.hasOwnProperty.call(r, e) && n.indexOf(e) < 0 && (o[e] = r[e]);
  if (r != null && typeof Object.getOwnPropertySymbols == "function") {
    var t = 0;
    for (e = Object.getOwnPropertySymbols(r); t < e.length; t++) n.indexOf(e[t]) < 0 && Object.prototype.propertyIsEnumerable.call(r, e[t]) && (o[e[t]] = r[e[t]]);
  }
  return o;
};
const E = (r) => {
  var { prefixCls: n, children: o } = r, e = g(r, ["prefixCls", "children"]);
  if (process.env.NODE_ENV !== "production") {
    const i = l("Form.List");
    process.env.NODE_ENV !== "production" && i(typeof e.name == "number" || (Array.isArray(e.name) ? !!e.name.length : !!e.name), "usage", "Miss `name` prop.");
  }
  const { getPrefixCls: t } = s.useContext(y), a = t("form", n), f = s.useMemo(() => ({ prefixCls: a, status: "error" }), [a]);
  return s.createElement(O, Object.assign({}, e), (i, c, m) => s.createElement(u.Provider, { value: f }, o(i.map((p) => Object.assign(Object.assign({}, p), { fieldKey: p.key })), c, { errors: m.errors, warnings: m.warnings })));
};
export {
  E as default
};
