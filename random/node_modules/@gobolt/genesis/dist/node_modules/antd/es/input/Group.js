import * as s from "react";
import { useContext as n, useMemo as v } from "react";
import x from "../../../../_virtual/index.js";
import { devUseWarning as C } from "../_util/warning.js";
import "../config-provider/index.js";
import { FormItemInputContext as m } from "../form/context.js";
import E from "./style/index.js";
import { ConfigContext as I } from "../config-provider/context.js";
const b = (e) => {
  const { getPrefixCls: t, direction: a } = n(I), { prefixCls: p, className: i } = e, o = t("input-group", p), u = t("input"), [l, f, c] = E(u), d = x(o, c, { [`${o}-lg`]: e.size === "large", [`${o}-sm`]: e.size === "small", [`${o}-compact`]: e.compact, [`${o}-rtl`]: a === "rtl" }, f, i), r = n(m), g = v(() => Object.assign(Object.assign({}, r), { isFormItemInput: !1 }), [r]);
  return process.env.NODE_ENV !== "production" && C("Input.Group").deprecated(!1, "Input.Group", "Space.Compact"), l(s.createElement("span", { className: d, style: e.style, onMouseEnter: e.onMouseEnter, onMouseLeave: e.onMouseLeave, onFocus: e.onFocus, onBlur: e.onBlur }, s.createElement(m.Provider, { value: g }, e.children)));
};
export {
  b as default
};
