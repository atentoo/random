import m from "../../../../@babel/runtime/helpers/esm/toConsumableArray.js";
import * as s from "react";
import me from "../../../../../_virtual/index.js";
import "../../../../rc-field-form/es/index.js";
import pe from "../../../../rc-util/es/hooks/useState.js";
import { supportRef as ce } from "../../../../rc-util/es/ref.js";
import { cloneElement as fe } from "../../_util/reactNode.js";
import { devUseWarning as ge } from "../../_util/warning.js";
import "../../config-provider/index.js";
import he from "../../config-provider/hooks/useCSSVarCls.js";
import { FormContext as ve, NoStyleItemContext as ye } from "../context.js";
import be from "../hooks/useChildren.js";
import Ee from "../hooks/useFormItemStatus.js";
import Oe from "../hooks/useFrameState.js";
import Ne from "../hooks/useItemRef.js";
import we from "../style/index.js";
import { toArray as k, getFieldId as xe } from "../util.js";
import Ce from "./ItemHolder.js";
import Ve from "./StatusProvider.js";
import { ConfigContext as _e } from "../../config-provider/context.js";
import je from "../../../../rc-field-form/es/FieldContext.js";
import Fe from "../../../../rc-field-form/es/ListContext.js";
import Ie from "../../../../rc-field-form/es/Field.js";
const Se = s.memo((n) => {
  let { children: i } = n;
  return i;
}, (n, i) => function(p, h) {
  const l = Object.keys(p), F = Object.keys(h);
  return l.length === F.length && l.every((f) => {
    const E = p[f], x = h[f];
    return E === x || typeof E == "function" || typeof x == "function";
  });
}(n.control, i.control) && n.update === i.update && n.childProps.length === i.childProps.length && n.childProps.every((p, h) => p === i.childProps[h])), De = function(n) {
  const { name: i, noStyle: p, className: h, dependencies: l, prefixCls: F, shouldUpdate: f, rules: E, children: x, required: q, label: M, messageVariables: R, trigger: T = "onChange", validateTrigger: U, hidden: ee, help: I, layout: te } = n, { getPrefixCls: re } = s.useContext(_e), { name: ne } = s.useContext(ve), o = be(x), C = typeof o == "function", L = s.useContext(ye), { validateTrigger: oe } = s.useContext(je), $ = U !== void 0 ? U : oe, v = i != null, V = re("form", F), K = he(V), [W, ae, se] = we(V, K), c = ge("Form.Item");
  process.env.NODE_ENV !== "production" && process.env.NODE_ENV !== "production" && c(i !== null, "usage", "`null` is passed as `name` property");
  const Y = s.useContext(Fe), z = s.useRef(null), [B, ie] = Oe({}), [y, le] = pe(() => ({ errors: [], warnings: [], touched: !1, validating: !1, name: [], validated: !1 })), ue = (e, a) => {
    ie((r) => {
      const u = Object.assign({}, r), d = [].concat(m(e.name.slice(0, -1)), m(a)).join("__SPLIT__");
      return e.destroy ? delete u[d] : u[d] = e, u;
    });
  }, [O, S] = s.useMemo(() => {
    const e = m(y.errors), a = m(y.warnings);
    return Object.values(B).forEach((r) => {
      e.push.apply(e, m(r.errors || [])), a.push.apply(a, m(r.warnings || []));
    }), [e, a];
  }, [B, y.errors, y.warnings]), de = Ne();
  function G(e, a, r) {
    return p && !ee ? s.createElement(Ve, { prefixCls: V, hasFeedback: n.hasFeedback, validateStatus: n.validateStatus, meta: y, errors: O, warnings: S, noStyle: !0 }, e) : s.createElement(Ce, Object.assign({ key: "row" }, n, { className: me(h, se, K, ae), prefixCls: V, fieldId: a, isRequired: r, errors: O, warnings: S, meta: y, onSubItemMetaChange: ue, layout: te }), e);
  }
  if (!v && !C && !l) return W(G(o));
  let N = {};
  return typeof M == "string" ? N.label = M : i && (N.label = String(i)), R && (N = Object.assign(Object.assign({}, N), R)), W(s.createElement(Ie, Object.assign({}, n, { messageVariables: N, trigger: T, validateTrigger: $, onMetaChange: (e) => {
    const a = Y == null ? void 0 : Y.getKey(e.name);
    if (le(e.destroy ? { errors: [], warnings: [], touched: !1, validating: !1, name: [], validated: !1 } : e, !0), p && I !== !1 && L) {
      let r = e.name;
      if (e.destroy) r = z.current || r;
      else if (a !== void 0) {
        const [u, d] = a;
        r = [u].concat(m(d)), z.current = r;
      }
      L(e, r);
    }
  } }), (e, a, r) => {
    const u = k(i).length && a ? a.name : [], d = xe(u, ne), H = q !== void 0 ? q : !!(E != null && E.some((t) => {
      if (t && typeof t == "object" && t.required && !t.warningOnly) return !0;
      if (typeof t == "function") {
        const b = t(r);
        return (b == null ? void 0 : b.required) && !(b != null && b.warningOnly);
      }
      return !1;
    })), _ = Object.assign({}, e);
    let w = null;
    if (process.env.NODE_ENV !== "production" && c(!(f && l), "usage", "`shouldUpdate` and `dependencies` shouldn't be used together. See https://u.ant.design/form-deps."), Array.isArray(o) && v) process.env.NODE_ENV !== "production" && c(!1, "usage", "A `Form.Item` with a `name` prop must have a single child element. For information on how to render more complex form items, see https://u.ant.design/complex-form-item."), w = o;
    else if (C && (!f && !l || v)) process.env.NODE_ENV !== "production" && c(!(!f && !l), "usage", "A `Form.Item` with a render function must have either `shouldUpdate` or `dependencies`."), process.env.NODE_ENV !== "production" && c(!v, "usage", "A `Form.Item` with a render function cannot be a field, and thus cannot have a `name` prop.");
    else if (!l || C || v) if (s.isValidElement(o)) {
      process.env.NODE_ENV !== "production" && c(o.props.defaultValue === void 0, "usage", "`defaultValue` will not work on controlled Field. You should use `initialValues` of Form instead.");
      const t = Object.assign(Object.assign({}, o.props), _);
      if (t.id || (t.id = d), I || O.length > 0 || S.length > 0 || n.extra) {
        const g = [];
        (I || O.length > 0) && g.push(`${d}_help`), n.extra && g.push(`${d}_extra`), t["aria-describedby"] = g.join(" ");
      }
      O.length > 0 && (t["aria-invalid"] = "true"), H && (t["aria-required"] = "true"), ce(o) && (t.ref = de(u, o)), new Set([].concat(m(k(T)), m(k($)))).forEach((g) => {
        t[g] = function() {
          for (var J, Q, D, X, A, Z = arguments.length, P = new Array(Z), j = 0; j < Z; j++) P[j] = arguments[j];
          (D = _[g]) === null || D === void 0 || (J = D).call.apply(J, [_].concat(P)), (A = (X = o.props)[g]) === null || A === void 0 || (Q = A).call.apply(Q, [X].concat(P));
        };
      });
      const b = [t["aria-required"], t["aria-invalid"], t["aria-describedby"]];
      w = s.createElement(Se, { control: _, update: o, childProps: b }, fe(o, t));
    } else C && (f || l) && !v ? w = o(r) : (process.env.NODE_ENV !== "production" && c(!u.length || !!p, "usage", "`name` is only used for validate React element. If you are using Form.Item as layout display, please remove `name` instead."), w = o);
    else process.env.NODE_ENV !== "production" && c(!1, "usage", "Must set `name` or use a render function when `dependencies` is set.");
    return G(w, d, H);
  }));
};
De.useStatus = Ee;
export {
  De as default
};
