import "../../../../@ant-design/cssinjs/es/extractStyle.js";
import "../../../../@ant-design/cssinjs/es/hooks/useCacheToken.js";
import "react";
import "../../../../@ant-design/cssinjs/es/StyleContext.js";
import { unit as o } from "../../../../@ant-design/cssinjs/es/util/index.js";
import "../../../../@ant-design/cssinjs/es/hooks/useCompatibleInsertionEffect.js";
import "../../../../@ant-design/cssinjs/es/hooks/useEffectCleanupRegister.js";
import "../../../../@ant-design/cssinjs/es/hooks/useHMR.js";
import "../../../../rc-util/es/warning.js";
import "../../../../@ant-design/cssinjs/es/theme/createTheme.js";
import "../../../../@ant-design/cssinjs/es/theme/ThemeCache.js";
import "../../../../@ant-design/cssinjs/es/transformers/legacyLogicalProperties.js";
const g = (e) => {
  let { componentCls: t, menuArrowOffset: r, calc: m } = e;
  return { [`${t}-rtl`]: { direction: "rtl" }, [`${t}-submenu-rtl`]: { transformOrigin: "100% 0" }, [`${t}-rtl${t}-vertical,
    ${t}-submenu-rtl ${t}-vertical`]: { [`${t}-submenu-arrow`]: { "&::before": { transform: `rotate(-45deg) translateY(${o(m(r).mul(-1).equal())})` }, "&::after": { transform: `rotate(45deg) translateY(${o(r)})` } } } };
};
export {
  g as default
};
