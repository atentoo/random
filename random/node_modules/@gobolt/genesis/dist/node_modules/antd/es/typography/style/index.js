import { operationUnit as n } from "../../style/index.js";
import "../../../../@ant-design/cssinjs/es/extractStyle.js";
import "../../../../@ant-design/cssinjs/es/hooks/useCacheToken.js";
import "react";
import "../../../../@ant-design/cssinjs/es/StyleContext.js";
import "../../../../@ant-design/cssinjs/es/theme/createTheme.js";
import "../../../../rc-util/es/warning.js";
import "../../../../@ant-design/cssinjs/es/theme/ThemeCache.js";
import "../../../../@ant-design/cssinjs/es/hooks/useCompatibleInsertionEffect.js";
import "../../../../@ant-design/cssinjs/es/hooks/useEffectCleanupRegister.js";
import "../../../../@ant-design/cssinjs/es/hooks/useHMR.js";
import "../../../../@ant-design/cssinjs/es/transformers/legacyLogicalProperties.js";
import "../../../../rc-util/es/hooks/useLayoutEffect.js";
import "../../../../rc-util/es/ref.js";
import "../../../../@ant-design/cssinjs-utils/es/util/statistic.js";
import "../../../../@ant-design/cssinjs-utils/es/_util/hooks/useUniqueMemo.js";
import { genStyleHooks as i } from "../../theme/util/genStyleUtils.js";
import { getTitleStyles as e, getResetStyles as s, getLinkStyles as a, getEditableStyles as l, getCopyableStyles as c, getEllipsisStyles as p } from "./mixins.js";
const g = (o) => {
  const { componentCls: t, titleMarginTop: r } = o;
  return { [t]: Object.assign(Object.assign(Object.assign(Object.assign(Object.assign(Object.assign(Object.assign(Object.assign(Object.assign({ color: o.colorText, wordBreak: "break-word", lineHeight: o.lineHeight, [`&${t}-secondary`]: { color: o.colorTextDescription }, [`&${t}-success`]: { color: o.colorSuccess }, [`&${t}-warning`]: { color: o.colorWarning }, [`&${t}-danger`]: { color: o.colorError, "a&:active, a&:focus": { color: o.colorErrorActive }, "a&:hover": { color: o.colorErrorHover } }, [`&${t}-disabled`]: { color: o.colorTextDisabled, cursor: "not-allowed", userSelect: "none" }, "\n        div&,\n        p\n      ": { marginBottom: "1em" } }, e(o)), { [`
      & + h1${t},
      & + h2${t},
      & + h3${t},
      & + h4${t},
      & + h5${t}
      `]: { marginTop: r }, "\n      div,\n      ul,\n      li,\n      p,\n      h1,\n      h2,\n      h3,\n      h4,\n      h5": { "\n        + h1,\n        + h2,\n        + h3,\n        + h4,\n        + h5\n        ": { marginTop: r } } }), s(o)), a(o)), { [`
        ${t}-expand,
        ${t}-collapse,
        ${t}-edit,
        ${t}-copy
      `]: Object.assign(Object.assign({}, n(o)), { marginInlineStart: o.marginXXS }) }), l(o)), c(o)), p()), { "&-rtl": { direction: "rtl" } }) };
}, m = () => ({ titleMarginTop: "1.2em", titleMarginBottom: "0.5em" }), C = i("Typography", (o) => [g(o)], m);
export {
  C as default,
  m as prepareComponentToken
};
