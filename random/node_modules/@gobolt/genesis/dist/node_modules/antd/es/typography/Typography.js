import * as c from "react";
import x from "../../../../_virtual/index.js";
import { composeRef as E } from "../../../rc-util/es/ref.js";
import { devUseWarning as R } from "../_util/warning.js";
import { useComponentConfig as w } from "../config-provider/context.js";
import P from "./style/index.js";
var _ = function(t, o) {
  var n = {};
  for (var e in t) Object.prototype.hasOwnProperty.call(t, e) && o.indexOf(e) < 0 && (n[e] = t[e]);
  if (t != null && typeof Object.getOwnPropertySymbols == "function") {
    var r = 0;
    for (e = Object.getOwnPropertySymbols(t); r < e.length; r++) o.indexOf(e[r]) < 0 && Object.prototype.propertyIsEnumerable.call(t, e[r]) && (n[e[r]] = t[e[r]]);
  }
  return n;
};
const D = c.forwardRef((t, o) => {
  const { prefixCls: n, component: e = "article", className: r, rootClassName: l, setContentRef: s, children: i, direction: p, style: f } = t, m = _(t, ["prefixCls", "component", "className", "rootClassName", "setContentRef", "children", "direction", "style"]), { getPrefixCls: y, direction: d, className: O, style: g } = w("typography"), u = p ?? d, N = s ? E(o, s) : o, a = y("typography", n);
  process.env.NODE_ENV !== "production" && R("Typography").deprecated(!s, "setContentRef", "ref");
  const [b, C, h] = P(a), j = x(a, O, { [`${a}-rtl`]: u === "rtl" }, r, l, C, h), v = Object.assign(Object.assign({}, g), f);
  return b(c.createElement(e, Object.assign({ className: j, style: v, ref: N }, m), i));
});
process.env.NODE_ENV !== "production" && (D.displayName = "Typography");
export {
  D as default
};
