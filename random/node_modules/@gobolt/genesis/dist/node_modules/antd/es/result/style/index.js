import "../../../../@ant-design/cssinjs/es/extractStyle.js";
import "../../../../@ant-design/cssinjs/es/hooks/useCacheToken.js";
import "react";
import "../../../../@ant-design/cssinjs/es/StyleContext.js";
import { unit as i } from "../../../../@ant-design/cssinjs/es/util/index.js";
import "../../../../@ant-design/cssinjs/es/hooks/useCompatibleInsertionEffect.js";
import "../../../../@ant-design/cssinjs/es/hooks/useEffectCleanupRegister.js";
import "../../../../@ant-design/cssinjs/es/hooks/useHMR.js";
import "../../../../rc-util/es/warning.js";
import "../../../../@ant-design/cssinjs/es/theme/createTheme.js";
import "../../../../@ant-design/cssinjs/es/theme/ThemeCache.js";
import "../../../../@ant-design/cssinjs/es/transformers/legacyLogicalProperties.js";
import "../../../../rc-util/es/hooks/useLayoutEffect.js";
import "../../../../rc-util/es/ref.js";
import { merge as s } from "../../../../@ant-design/cssinjs-utils/es/util/statistic.js";
import "../../../../@ant-design/cssinjs-utils/es/_util/hooks/useUniqueMemo.js";
import { genStyleHooks as p } from "../../theme/util/genStyleUtils.js";
const $ = (o) => {
  const { componentCls: t, lineHeightHeading3: n, iconCls: e, padding: l, paddingXL: c, paddingXS: a, paddingLG: r, marginXS: g, lineHeight: m } = o;
  return { [t]: { padding: `${i(o.calc(r).mul(2).equal())} ${i(c)}`, "&-rtl": { direction: "rtl" } }, [`${t} ${t}-image`]: { width: o.imageWidth, height: o.imageHeight, margin: "auto" }, [`${t} ${t}-icon`]: { marginBottom: r, textAlign: "center", [`& > ${e}`]: { fontSize: o.iconFontSize } }, [`${t} ${t}-title`]: { color: o.colorTextHeading, fontSize: o.titleFontSize, lineHeight: n, marginBlock: g, textAlign: "center" }, [`${t} ${t}-subtitle`]: { color: o.colorTextDescription, fontSize: o.subtitleFontSize, lineHeight: m, textAlign: "center" }, [`${t} ${t}-content`]: { marginTop: r, padding: `${i(r)} ${i(o.calc(l).mul(2.5).equal())}`, backgroundColor: o.colorFillAlter }, [`${t} ${t}-extra`]: { margin: o.extraMargin, textAlign: "center", "& > *": { marginInlineEnd: a, "&:last-child": { marginInlineEnd: 0 } } } };
}, u = (o) => {
  const { componentCls: t, iconCls: n } = o;
  return { [`${t}-success ${t}-icon > ${n}`]: { color: o.resultSuccessIconColor }, [`${t}-error ${t}-icon > ${n}`]: { color: o.resultErrorIconColor }, [`${t}-info ${t}-icon > ${n}`]: { color: o.resultInfoIconColor }, [`${t}-warning ${t}-icon > ${n}`]: { color: o.resultWarningIconColor } };
}, d = (o) => ((t) => [$(t), u(t)])(o), S = (o) => ({ titleFontSize: o.fontSizeHeading3, subtitleFontSize: o.fontSize, iconFontSize: 3 * o.fontSizeHeading3, extraMargin: `${o.paddingLG}px 0 0 0` }), X = p("Result", (o) => {
  const t = o.colorInfo, n = o.colorError, e = o.colorSuccess, l = o.colorWarning, c = s(o, { resultInfoIconColor: t, resultErrorIconColor: n, resultSuccessIconColor: e, resultWarningIconColor: l, imageWidth: 250, imageHeight: 295 });
  return [d(c)];
}, S);
export {
  X as default,
  S as prepareComponentToken
};
