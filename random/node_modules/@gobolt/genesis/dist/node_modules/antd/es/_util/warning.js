import * as d from "react";
import { warningOnce as u, resetWarned as l } from "../../../rc-util/es/warning.js";
function i() {
}
let n = null;
function E() {
  n = null, l();
}
let p = i;
process.env.NODE_ENV !== "production" && (p = (e, a, t) => {
  u(e, `[antd: ${a}] ${t}`), process.env.NODE_ENV === "test" && E();
});
const N = d.createContext({}), g = process.env.NODE_ENV !== "production" ? (e) => {
  const { strict: a } = d.useContext(N), t = (s, c, r) => {
    if (!s) if (a === !1 && c === "deprecated") {
      const o = n;
      n || (n = {}), n[e] = n[e] || [], n[e].includes(r || "") || n[e].push(r || ""), o || console.warn("[antd] There exists deprecated usage in your code:", n);
    } else process.env.NODE_ENV !== "production" && p(s, e, r);
  };
  return t.deprecated = (s, c, r, o) => {
    t(s, "deprecated", `\`${c}\` is deprecated. Please use \`${r}\` instead.${o ? ` ${o}` : ""}`);
  }, t;
} : () => {
  const e = () => {
  };
  return e.deprecated = i, e;
};
export {
  N as WarningContext,
  p as default,
  g as devUseWarning,
  i as noop,
  E as resetWarned
};
