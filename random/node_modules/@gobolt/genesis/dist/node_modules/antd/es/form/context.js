import * as e from "react";
import "../../../rc-field-form/es/index.js";
import c from "../../../rc-util/es/omit.js";
import { FormProvider as l } from "../../../rc-field-form/es/FormContext.js";
const p = e.createContext({ labelAlign: "right", vertical: !1, itemRef: () => {
} }), u = e.createContext(null), F = (r) => {
  const o = c(r, ["prefixCls"]);
  return e.createElement(l, Object.assign({}, o));
}, I = e.createContext({ prefixCls: "" }), n = e.createContext({});
process.env.NODE_ENV !== "production" && (n.displayName = "FormItemInputContext");
const f = (r) => {
  let { children: o, status: s, override: a } = r;
  const i = e.useContext(n), m = e.useMemo(() => {
    const t = Object.assign({}, i);
    return a && delete t.isFormItemInput, s && (delete t.status, delete t.hasFeedback, delete t.feedbackIcon), t;
  }, [s, a, i]);
  return e.createElement(n.Provider, { value: m }, o);
}, v = e.createContext(void 0);
export {
  p as FormContext,
  n as FormItemInputContext,
  I as FormItemPrefixContext,
  F as FormProvider,
  f as NoFormStyle,
  u as NoStyleItemContext,
  v as VariantContext
};
