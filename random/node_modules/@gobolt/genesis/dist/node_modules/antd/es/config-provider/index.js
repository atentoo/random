import * as e from "react";
import "../../../@ant-design/cssinjs/es/extractStyle.js";
import "../../../@ant-design/cssinjs/es/hooks/useCacheToken.js";
import nt from "../../../@ant-design/cssinjs/es/StyleContext.js";
import z from "../../../@ant-design/cssinjs/es/theme/createTheme.js";
import "../../../rc-util/es/warning.js";
import "../../../@ant-design/cssinjs/es/theme/ThemeCache.js";
import "../../../@ant-design/cssinjs/es/hooks/useCompatibleInsertionEffect.js";
import "../../../@ant-design/cssinjs/es/hooks/useEffectCleanupRegister.js";
import "../../../@ant-design/cssinjs/es/hooks/useHMR.js";
import "../../../@ant-design/cssinjs/es/transformers/legacyLogicalProperties.js";
import at from "../../../@ant-design/icons/es/components/Context.js";
import st from "../../../rc-util/es/hooks/useMemo.js";
import { merge as ct } from "../../../rc-util/es/utils/set.js";
import W, { devUseWarning as lt, WarningContext as pt } from "../_util/warning.js";
import mt from "../form/validateMessagesContext.js";
import dt, { ANT_MARK as ut } from "../locale/index.js";
import ft from "../locale/context.js";
import gt from "../locale/en_US.js";
import { DesignTokenContext as vt } from "../theme/context.js";
import Ct from "../theme/themes/seed.js";
import { ConfigContext as k, defaultIconPrefixCls as bt, defaultPrefixCls as ht } from "./context.js";
import { ConfigConsumer as go, Variants as vo } from "./context.js";
import { registerTheme as xt } from "./cssVariables.js";
import { DisabledContextProvider as Pt } from "./DisabledContext.js";
import yt from "./hooks/useConfig.js";
import Ot from "./hooks/useTheme.js";
import Et from "./MotionWrapper.js";
import kt from "./PropWarning.js";
import B, { SizeContextProvider as wt } from "./SizeContext.js";
import jt from "../theme/util/useResetIconStyle.js";
import "../../../rc-util/es/hooks/useLayoutEffect.js";
import "../../../rc-util/es/ref.js";
import "../../../@ant-design/cssinjs-utils/es/util/statistic.js";
import "../../../@ant-design/cssinjs-utils/es/_util/hooks/useUniqueMemo.js";
import St from "../theme/themes/default/theme.js";
var Nt = function(r, c) {
  var m = {};
  for (var o in r) Object.prototype.hasOwnProperty.call(r, o) && c.indexOf(o) < 0 && (m[o] = r[o]);
  if (r != null && typeof Object.getOwnPropertySymbols == "function") {
    var l = 0;
    for (o = Object.getOwnPropertySymbols(r); l < o.length; l++) c.indexOf(o[l]) < 0 && Object.prototype.propertyIsEnumerable.call(r, o[l]) && (m[o[l]] = r[o[l]]);
  }
  return m;
};
let T = !1;
process.env.NODE_ENV;
const It = ["getTargetContainer", "getPopupContainer", "renderEmpty", "input", "pagination", "form", "select", "button"];
let F;
const Mt = (r) => {
  const { children: c, csp: m, autoInsertSpaceInButton: o, alert: l, anchor: P, form: d, locale: y, componentSize: w, direction: R, space: G, splitter: K, virtual: L, dropdownMatchSelectWidth: j, popupMatchSelectWidth: S, popupOverflow: $, legacyLocale: U, parentContext: u, iconPrefixCls: q, theme: N, componentDisabled: I, segmented: H, statistic: J, spin: Q, calendar: X, carousel: Y, cascader: Z, collapse: ee, typography: te, checkbox: oe, descriptions: re, divider: ie, drawer: ne, skeleton: ae, steps: se, image: ce, layout: le, list: pe, mentions: me, modal: de, progress: ue, result: fe, slider: ge, breadcrumb: ve, menu: Ce, pagination: be, input: he, textArea: xe, empty: Pe, badge: ye, radio: Oe, rate: Ee, switch: ke, transfer: we, avatar: je, message: Se, tag: Ne, table: Ie, card: Me, tabs: _e, timeline: Ve, timePicker: Ae, upload: De, notification: ze, tree: We, colorPicker: Be, datePicker: Te, rangePicker: Fe, flex: Re, wave: Ge, dropdown: Ke, warning: Le, tour: $e, tooltip: Ue, popover: qe, popconfirm: He, floatButtonGroup: Je, variant: Qe, inputNumber: Xe, treeSelect: Ye } = r, M = e.useCallback((t, n) => {
    const { prefixCls: a } = r;
    if (n) return n;
    const s = a || u.getPrefixCls("");
    return t ? `${s}-${t}` : s;
  }, [u.getPrefixCls, r.prefixCls]), C = q || u.iconPrefixCls || bt, b = m || u.csp;
  jt(C, b);
  const h = Ot(N, u.theme, { prefixCls: M("") });
  process.env.NODE_ENV !== "production" && (T = T || !!h);
  const O = { csp: b, autoInsertSpaceInButton: o, alert: l, anchor: P, locale: y || U, direction: R, space: G, splitter: K, virtual: L, popupMatchSelectWidth: S ?? j, popupOverflow: $, getPrefixCls: M, iconPrefixCls: C, theme: h, segmented: H, statistic: J, spin: Q, calendar: X, carousel: Y, cascader: Z, collapse: ee, typography: te, checkbox: oe, descriptions: re, divider: ie, drawer: ne, skeleton: ae, steps: se, image: ce, input: he, textArea: xe, layout: le, list: pe, mentions: me, modal: de, progress: ue, result: fe, slider: ge, breadcrumb: ve, menu: Ce, pagination: be, empty: Pe, badge: ye, radio: Oe, rate: Ee, switch: ke, transfer: we, avatar: je, message: Se, tag: Ne, table: Ie, card: Me, tabs: _e, timeline: Ve, timePicker: Ae, upload: De, notification: ze, tree: We, colorPicker: Be, datePicker: Te, rangePicker: Fe, flex: Re, wave: Ge, dropdown: Ke, warning: Le, tour: $e, tooltip: Ue, popover: qe, popconfirm: He, floatButtonGroup: Je, variant: Qe, inputNumber: Xe, treeSelect: Ye };
  process.env.NODE_ENV !== "production" && lt("ConfigProvider")(!("autoInsertSpaceInButton" in r), "deprecated", "`autoInsertSpaceInButton` is deprecated. Please use `{ button: { autoInsertSpace: boolean }}` instead.");
  const f = Object.assign({}, u);
  Object.keys(O).forEach((t) => {
    O[t] !== void 0 && (f[t] = O[t]);
  }), It.forEach((t) => {
    const n = r[t];
    n && (f[t] = n);
  }), o !== void 0 && (f.button = Object.assign({ autoInsertSpace: o }, f.button));
  const g = st(() => f, f, (t, n) => {
    const a = Object.keys(t), s = Object.keys(n);
    return a.length !== s.length || a.some((x) => t[x] !== n[x]);
  }), { layer: _ } = e.useContext(nt), Ze = e.useMemo(() => ({ prefixCls: C, csp: b, layer: _ ? "antd" : void 0 }), [C, b, _]);
  let i = e.createElement(e.Fragment, null, e.createElement(kt, { dropdownMatchSelectWidth: j }), c);
  const V = e.useMemo(() => {
    var t, n, a, s;
    return ct(((t = gt.Form) === null || t === void 0 ? void 0 : t.defaultValidateMessages) || {}, ((a = (n = g.locale) === null || n === void 0 ? void 0 : n.Form) === null || a === void 0 ? void 0 : a.defaultValidateMessages) || {}, ((s = g.form) === null || s === void 0 ? void 0 : s.validateMessages) || {}, (d == null ? void 0 : d.validateMessages) || {});
  }, [g, d == null ? void 0 : d.validateMessages]);
  Object.keys(V).length > 0 && (i = e.createElement(mt.Provider, { value: V }, i)), y && (i = e.createElement(dt, { locale: y, _ANT_MARK__: ut }, i)), i = e.createElement(at.Provider, { value: Ze }, i), w && (i = e.createElement(wt, { size: w }, i)), i = e.createElement(Et, null, i);
  const et = e.useMemo(() => {
    const t = h || {}, { algorithm: n, token: a, components: s, cssVar: x } = t, tt = Nt(t, ["algorithm", "token", "components", "cssVar"]), A = n && (!Array.isArray(n) || n.length > 0) ? z(n) : St, E = {};
    Object.entries(s || {}).forEach((ot) => {
      let [rt, it] = ot;
      const p = Object.assign({}, it);
      "algorithm" in p && (p.algorithm === !0 ? p.theme = A : (Array.isArray(p.algorithm) || typeof p.algorithm == "function") && (p.theme = z(p.algorithm)), delete p.algorithm), E[rt] = p;
    });
    const D = Object.assign(Object.assign({}, Ct), a);
    return Object.assign(Object.assign({}, tt), { theme: A, token: D, components: E, override: Object.assign({ override: D }, E), cssVar: x });
  }, [h]);
  return N && (i = e.createElement(vt.Provider, { value: et }, i)), g.warning && (i = e.createElement(pt.Provider, { value: g.warning }, i)), I !== void 0 && (i = e.createElement(Pt, { disabled: I }, i)), e.createElement(k.Provider, { value: g }, i);
}, v = (r) => {
  const c = e.useContext(k), m = e.useContext(ft);
  return e.createElement(Mt, Object.assign({ parentContext: c, legacyLocale: m }, r));
};
v.ConfigContext = k, v.SizeContext = B, v.config = (r) => {
  const { prefixCls: c, iconPrefixCls: m, theme: o, holderRender: l } = r;
  c !== void 0 && (F = c), o && function(P) {
    return Object.keys(P).some((d) => d.endsWith("Color"));
  }(o) && (process.env.NODE_ENV !== "production" && W(!1, "ConfigProvider", "`config` of css variable theme is not work in v5. Please use new `theme` config instead."), xt(F || ht, o));
}, v.useConfig = yt, Object.defineProperty(v, "SizeContext", { get: () => (process.env.NODE_ENV !== "production" && W(!1, "ConfigProvider", "ConfigProvider.SizeContext is deprecated. Please use `ConfigProvider.useConfig().componentSize` instead."), B) }), process.env.NODE_ENV !== "production" && (v.displayName = "ConfigProvider");
export {
  go as ConfigConsumer,
  k as ConfigContext,
  vo as Variants,
  v as default,
  bt as defaultIconPrefixCls,
  ht as defaultPrefixCls
};
