import * as n from "react";
import C from "../../../@ant-design/icons/es/icons/DownOutlined.js";
import { devUseWarning as I } from "../_util/warning.js";
import "../config-provider/index.js";
import _ from "../dropdown/dropdown.js";
import B from "./BreadcrumbSeparator.js";
import { renderItem as P } from "./useItemRender.js";
import { ConfigContext as k } from "../config-provider/context.js";
var c = function(t, a) {
  var l = {};
  for (var e in t) Object.prototype.hasOwnProperty.call(t, e) && a.indexOf(e) < 0 && (l[e] = t[e]);
  if (t != null && typeof Object.getOwnPropertySymbols == "function") {
    var r = 0;
    for (e = Object.getOwnPropertySymbols(t); r < e.length; r++) a.indexOf(e[r]) < 0 && Object.prototype.propertyIsEnumerable.call(t, e[r]) && (l[e[r]] = t[e[r]]);
  }
  return l;
};
const w = (t) => {
  const { prefixCls: a, separator: l = "/", children: e, menu: r, overlay: o, dropdownProps: s, href: v } = t;
  process.env.NODE_ENV !== "production" && I("Breadcrumb.Item").deprecated(!("overlay" in t), "overlay", "menu");
  const p = ((f) => {
    if (r || o) {
      const i = Object.assign({}, s);
      if (r) {
        const u = r || {}, { items: b } = u, E = c(u, ["items"]);
        i.menu = Object.assign(Object.assign({}, E), { items: b == null ? void 0 : b.map((d, h) => {
          var { key: y, title: j, label: O, path: g } = d, x = c(d, ["key", "title", "label", "path"]);
          let m = O ?? j;
          return g && (m = n.createElement("a", { href: `${v}${g}` }, m)), Object.assign(Object.assign({}, x), { key: y ?? h, label: m });
        }) });
      } else o && (i.overlay = o);
      return n.createElement(_, Object.assign({ placement: "bottom" }, i), n.createElement("span", { className: `${a}-overlay-link` }, f, n.createElement(C, null)));
    }
    return f;
  })(e);
  return p != null ? n.createElement(n.Fragment, null, n.createElement("li", null, p), l && n.createElement(B, null, l)) : null;
}, N = (t) => {
  const { prefixCls: a, children: l, href: e } = t, r = c(t, ["prefixCls", "children", "href"]), { getPrefixCls: o } = n.useContext(k), s = o("breadcrumb", a);
  return n.createElement(w, Object.assign({}, r, { prefixCls: s }), P(s, r, l, e));
};
N.__ANT_BREADCRUMB_ITEM = !0;
export {
  w as InternalBreadcrumbItem,
  N as default
};
