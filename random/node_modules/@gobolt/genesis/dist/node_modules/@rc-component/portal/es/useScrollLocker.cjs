"use strict";const a=require("../../../@babel/runtime/helpers/esm/slicedToArray.cjs"),l=require("react"),o=require("../../../rc-util/es/Dom/dynamicCSS.cjs"),f=require("../../../rc-util/es/hooks/useLayoutEffect.cjs"),d=require("../../../rc-util/es/getScrollBarSize.cjs"),s=require("./util.cjs");function S(e){const r=Object.create(null,{[Symbol.toStringTag]:{value:"Module"}});if(e){for(const n in e)if(n!=="default"){const t=Object.getOwnPropertyDescriptor(e,n);Object.defineProperty(r,n,t.get?t:{enumerable:!0,get:()=>e[n]})}}return r.default=e,Object.freeze(r)}const b=S(l);var g="rc-util-locker-".concat(Date.now()),c=0;module.exports=function(e){var r=!!e,n=b.useState(function(){return c+=1,"".concat(g,"_").concat(c)}),t=a(n,1)[0];f.default(function(){if(r){var i=d.getTargetScrollBarSize(document.body).width,u=s.isBodyOverflowing();o.updateCSS(`
html body {
  overflow-y: hidden;
  `.concat(u?"width: calc(100% - ".concat(i,"px);"):"",`
}`),t)}else o.removeCSS(t);return function(){o.removeCSS(t)}},[r,t])};
