import i from "../../../@babel/runtime/helpers/esm/extends.js";
import x from "../../../@babel/runtime/helpers/esm/defineProperty.js";
import N from "../../../@babel/runtime/helpers/esm/slicedToArray.js";
import r, { forwardRef as q, useMemo as B } from "react";
import { ColorPickerPrefixCls as M, defaultColor as T } from "./util.js";
import A from "../../../../_virtual/index.js";
import { Color as R } from "./color.js";
import z from "./components/ColorBlock.js";
import G from "./components/Picker.js";
import I from "./hooks/useColorState.js";
import J from "./hooks/useComponent.js";
var K = [{ color: "rgb(255, 0, 0)", percent: 0 }, { color: "rgb(255, 255, 0)", percent: 17 }, { color: "rgb(0, 255, 0)", percent: 33 }, { color: "rgb(0, 255, 255)", percent: 50 }, { color: "rgb(0, 0, 255)", percent: 67 }, { color: "rgb(255, 0, 255)", percent: 83 }, { color: "rgb(255, 0, 0)", percent: 100 }], L = q(function(o, w) {
  var p = o.value, H = o.defaultValue, m = o.prefixCls, a = m === void 0 ? M : m, s = o.onChange, n = o.onChangeComplete, P = o.className, k = o.style, u = o.panelRender, f = o.disabledAlpha, d = f !== void 0 && f, g = o.disabled, C = g !== void 0 && g, S = o.components, V = J(S), h = N(V, 1)[0], D = I(H || T, p), b = N(D, 2), t = b[0], F = b[1], O = B(function() {
    return t.setA(1).toRgbString();
  }, [t]), l = function(e, j) {
    p || F(e), s == null || s(e, j);
  }, v = function(e) {
    return new R(t.setHue(e));
  }, E = function(e) {
    return new R(t.setA(e / 100));
  }, _ = A("".concat(a, "-panel"), P, x({}, "".concat(a, "-panel-disabled"), C)), c = { prefixCls: a, disabled: C, color: t }, y = r.createElement(r.Fragment, null, r.createElement(G, i({ onChange: l }, c, { onChangeComplete: n })), r.createElement("div", { className: "".concat(a, "-slider-container") }, r.createElement("div", { className: A("".concat(a, "-slider-group"), x({}, "".concat(a, "-slider-group-disabled-alpha"), d)) }, r.createElement(h, i({}, c, { type: "hue", colors: K, min: 0, max: 359, value: t.getHue(), onChange: function(e) {
    l(v(e), { type: "hue", value: e });
  }, onChangeComplete: function(e) {
    n && n(v(e));
  } })), !d && r.createElement(h, i({}, c, { type: "alpha", colors: [{ percent: 0, color: "rgba(255, 0, 4, 0)" }, { percent: 100, color: O }], min: 0, max: 100, value: 100 * t.a, onChange: function(e) {
    l(E(e), { type: "alpha", value: e });
  }, onChangeComplete: function(e) {
    n && n(E(e));
  } }))), r.createElement(z, { color: t.toRgbString(), prefixCls: a })));
  return r.createElement("div", { className: _, style: k, ref: w }, typeof u == "function" ? u(y) : y);
});
process.env.NODE_ENV !== "production" && (L.displayName = "ColorPicker");
export {
  L as default
};
