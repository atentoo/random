import b from "../../../../@babel/runtime/helpers/esm/slicedToArray.js";
import t, { useRef as c } from "react";
import v from "../hooks/useColorDrag.js";
import { calculateColor as x, calcOffset as E } from "../util.js";
import R from "../../../../rc-util/es/hooks/useEvent.js";
import "../../../../rc-util/es/hooks/useLayoutEffect.js";
import "../../../../rc-util/es/ref.js";
import "../../../../rc-util/es/warning.js";
import k from "./Handler.js";
import D from "./Palette.js";
import y from "./Transform.js";
var z = function(r) {
  var e = r.color, g = r.onChange, o = r.prefixCls, l = r.onChangeComplete, p = r.disabled, a = c(), n = c(), i = c(e), d = R(function(h) {
    var u = x({ offset: h, targetRef: n, containerRef: a, color: e });
    i.current = u, g(u);
  }), C = v({ color: e, containerRef: a, targetRef: n, calculate: function() {
    return E(e);
  }, onDragChange: d, onDragChangeComplete: function() {
    return l == null ? void 0 : l(i.current);
  }, disabledDrag: p }), f = b(C, 2), m = f[0], s = f[1];
  return t.createElement("div", { ref: a, className: "".concat(o, "-select"), onMouseDown: s, onTouchStart: s }, t.createElement(D, { prefixCls: o }, t.createElement(y, { x: m.x, y: m.y, ref: n }, t.createElement(k, { color: e.toRgbString(), prefixCls: o })), t.createElement("div", { className: "".concat(o, "-saturation"), style: { backgroundColor: "hsl(".concat(e.toHsb().h, ",100%, 50%)"), backgroundImage: "linear-gradient(0deg, #000, transparent),linear-gradient(90deg, #fff, hsla(0, 0%, 100%, 0))" } })));
};
export {
  z as default
};
