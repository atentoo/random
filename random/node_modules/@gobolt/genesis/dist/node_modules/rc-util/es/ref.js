import a from "../../@babel/runtime/helpers/esm/typeof.js";
import { isValidElement as c, version as s } from "react";
import { reactIsExports as u } from "../../../_virtual/index3.js";
import l from "./hooks/useMemo.js";
import m from "./React/isFragment.js";
var y = Number(s.split(".")[0]), v = function(r, n) {
  typeof r == "function" ? r(n) : a(r) === "object" && r && "current" in r && (r.current = n);
}, d = function() {
  for (var r = arguments.length, n = new Array(r), e = 0; e < r; e++) n[e] = arguments[e];
  var t = n.filter(Boolean);
  return t.length <= 1 ? t[0] : function(o) {
    n.forEach(function(f) {
      v(f, o);
    });
  };
}, b = function() {
  for (var r = arguments.length, n = new Array(r), e = 0; e < r; e++) n[e] = arguments[e];
  return l(function() {
    return d.apply(void 0, n);
  }, n, function(t, o) {
    return t.length !== o.length || t.every(function(f, p) {
      return f !== o[p];
    });
  });
}, g = function(r) {
  var n, e;
  if (!r) return !1;
  if (i(r) && y >= 19) return !0;
  var t = u.isMemo(r) ? r.type.type : r.type;
  return !!(typeof t != "function" || (n = t.prototype) !== null && n !== void 0 && n.render || t.$$typeof === u.ForwardRef) && !!(typeof r != "function" || (e = r.prototype) !== null && e !== void 0 && e.render || r.$$typeof === u.ForwardRef);
};
function i(r) {
  return c(r) && !m(r);
}
var N = function(r) {
  return i(r) && g(r);
}, x = function(r) {
  if (r && i(r)) {
    var n = r;
    return n.props.propertyIsEnumerable("ref") ? n.props.ref : n.ref;
  }
  return null;
};
export {
  d as composeRef,
  v as fillRef,
  x as getNodeRef,
  N as supportNodeRef,
  g as supportRef,
  b as useComposeRef
};
