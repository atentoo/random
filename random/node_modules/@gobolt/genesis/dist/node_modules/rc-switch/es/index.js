import K from "../../@babel/runtime/helpers/esm/extends.js";
import C from "../../@babel/runtime/helpers/esm/defineProperty.js";
import R from "../../@babel/runtime/helpers/esm/slicedToArray.js";
import T from "../../@babel/runtime/helpers/esm/objectWithoutProperties.js";
import * as a from "react";
import j from "../../../_virtual/index.js";
import F from "../../rc-util/es/hooks/useMergedState.js";
import k from "../../rc-util/es/KeyCode.js";
var G = ["prefixCls", "className", "checked", "defaultChecked", "disabled", "loadingIcon", "checkedChildren", "unCheckedChildren", "onClick", "onChange", "onKeyDown"], H = a.forwardRef(function(e, s) {
  var o, m = e.prefixCls, c = m === void 0 ? "rc-switch" : m, w = e.className, g = e.checked, v = e.defaultChecked, t = e.disabled, N = e.loadingIcon, b = e.checkedChildren, y = e.unCheckedChildren, h = e.onClick, f = e.onChange, u = e.onKeyDown, E = T(e, G), x = F(!1, { value: g, defaultValue: v }), p = R(x, 2), r = p[0], D = p[1];
  function i(n, l) {
    var d = r;
    return t || (D(d = n), f == null || f(d, l)), d;
  }
  var I = j(c, w, (C(o = {}, "".concat(c, "-checked"), r), C(o, "".concat(c, "-disabled"), t), o));
  return a.createElement("button", K({}, E, { type: "button", role: "switch", "aria-checked": r, disabled: t, className: I, ref: s, onKeyDown: function(n) {
    n.which === k.LEFT ? i(!1, n) : n.which === k.RIGHT && i(!0, n), u == null || u(n);
  }, onClick: function(n) {
    var l = i(!r, n);
    h == null || h(l, n);
  } }), N, a.createElement("span", { className: "".concat(c, "-inner") }, a.createElement("span", { className: "".concat(c, "-inner-checked") }, b), a.createElement("span", { className: "".concat(c, "-inner-unchecked") }, y)));
});
H.displayName = "Switch";
export {
  H as default
};
