import I from "../../../@babel/runtime/helpers/esm/extends.js";
import H from "../../../@babel/runtime/helpers/esm/slicedToArray.js";
import o from "../../../rc-util/es/KeyCode.js";
import * as i from "react";
import { useRef as s } from "react";
import K from "../hooks/useLock.js";
import { isValidateOpenKey as P } from "../utils/keyUtil.js";
import V from "./MultipleSelector.js";
import W from "./SingleSelector.js";
var A = function(t, x) {
  var n = s(null), p = s(!1), l = t.prefixCls, f = t.open, u = t.mode, S = t.showSearch, N = t.tokenWithEnter, T = t.disabled, d = t.prefix, w = t.autoClearSearchValue, v = t.onSearch, g = t.onSearchSubmit, m = t.onToggleOpen, b = t.onInputKeyDown, O = t.onInputBlur, y = t.domRef;
  i.useImperativeHandle(x, function() {
    return { focus: function(e) {
      n.current.focus(e);
    }, blur: function() {
      n.current.blur();
    } };
  });
  var C = K(0), E = H(C, 2), R = E[0], M = E[1], c = s(null), h = function(e) {
    v(e, !0, p.current) !== !1 && m(!0);
  }, D = { inputRef: n, onInputKeyDown: function(e) {
    var r = e.which, a = n.current instanceof HTMLTextAreaElement;
    a || !f || r !== o.UP && r !== o.DOWN || e.preventDefault(), b && b(e), r !== o.ENTER || u !== "tags" || p.current || f || g == null || g(e.target.value), a && !f && ~[o.UP, o.DOWN, o.LEFT, o.RIGHT].indexOf(r) || P(r) && m(!0);
  }, onInputMouseDown: function() {
    M(!0);
  }, onInputChange: function(e) {
    var r = e.target.value;
    if (N && c.current && /[\r\n]/.test(c.current)) {
      var a = c.current.replace(/[\r\n]+$/, "").replace(/\r\n/g, " ").replace(/[\r\n]/g, " ");
      r = r.replace(a, c.current);
    }
    c.current = null, h(r);
  }, onInputPaste: function(e) {
    var r = e.clipboardData, a = r == null ? void 0 : r.getData("text");
    c.current = a || "";
  }, onInputCompositionStart: function() {
    p.current = !0;
  }, onInputCompositionEnd: function(e) {
    p.current = !1, u !== "combobox" && h(e.target.value);
  }, onInputBlur: O }, k = u === "multiple" || u === "tags" ? i.createElement(V, I({}, t, D)) : i.createElement(W, I({}, t, D));
  return i.createElement("div", { ref: y, className: "".concat(l, "-selector"), onClick: function(e) {
    e.target !== n.current && (document.body.style.msTouchAction !== void 0 ? setTimeout(function() {
      n.current.focus();
    }) : n.current.focus());
  }, onMouseDown: function(e) {
    var r = R();
    e.target === n.current || r || u === "combobox" && T || e.preventDefault(), (u === "combobox" || S && r) && f || (f && w !== !1 && v("", !0, !1), m());
  } }, d && i.createElement("div", { className: "".concat(l, "-prefix") }, d), k);
}, B = i.forwardRef(A);
process.env.NODE_ENV !== "production" && (B.displayName = "Selector");
export {
  B as default
};
