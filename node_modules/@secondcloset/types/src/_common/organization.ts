import { BaseImage } from "./image";
import { BaseAddress } from "./address";
import { BaseUser } from "./user";
import { Carrier } from "../fulfillment";
import { Facility } from "./facility";

export type OrganizationStatus = "active" | "paused" | "churned";

export type OrganizationConfigKey =
  | "default_fulfilled_from"
  | "auto_fulfill_orders"
  | "freightcom_api_username"
  | "freightcom_api_password"
  | "preferred_return_facility"
  | "disable_partial_fulfillment"
  | "use_default_facility_for_partial_fallback";

export interface OrganizationConfig {
  key: OrganizationConfigKey;
  value: string;
}

export type OrganizationShippingConfigKey =
  | "whitelist_carrier"
  | "blacklist_carrier";

export interface OrganizationShippingConfig {
  key: OrganizationShippingConfigKey;
  value: string[];
}

export interface Permission {
  id: string;
  name: string;
}

export interface OrganizationAddress extends BaseAddress {
  building_type: string;
  care_of: string;
  elevator_access: boolean;
  is_primary: boolean;
  partner_name: string;
}

export interface GeofilterConstraint {
  country: string;
  provinces: GeofilterConstraintProvince[];
}

export interface GeofilterConstraintProvince {
  id?: string;
  country: string;
  province: string;
  _destroy?: boolean;
}

export interface SCServiceTier {
  threshold?: boolean;
  room_of_choice?: boolean;
  white_glove?: boolean;
  to_the_door?: boolean;
}

export interface BaseOrganization {
  created_at: string;
  email: string;
  id: string;
  name: string;
  packing_notes: string;
  phone_number: string;
  logo?: BaseImage;
  status?: OrganizationStatus;
}

export interface Organization extends BaseOrganization {
  addresses: OrganizationAddress[];
  carriers: Carrier[];
  users: BaseUser[];
  recommended_shipping_methods?: {
    parcel: boolean;
    freight: boolean;
    sc_last_mile: boolean;
    sc_service_tier?: SCServiceTier;
  };
  configurations_attributes: OrganizationConfig[];
  shipping_configurations_attributes?: OrganizationShippingConfig[];
  permissions: Permission[];
  geofilter_constraints?: GeofilterConstraint[];
  facility_service_areas?: FacilityServiceArea[];
  default_fulfilled_from?: {
    facility: Facility<"V2">;
    organization_regions: Region;
  }[];
  employer_identification_number?: string;
  business_name?: string;
}

export interface Region {
  id?: string;
  region_code: string;
  region_name: string;
  country_code: string;
  country_name: string;
}
export interface FacilityServiceArea {
  facility: Facility<"V2">;
  default_regions: Region[];
  organization_regions: Region[];
}
