import { jsxs as b, jsx as i } from "react/jsx-runtime";
import { useState as n, useRef as h, useEffect as g } from "react";
import { TYPOGRAPHY_VARIANT as D } from "../../constants/index.js";
import y from "./states/RadioChecked.js";
import R from "./states/RadioCheckedHover.js";
import $ from "./states/RadioCheckedFocussed.js";
import I from "./states/RadioCheckedDisabled.js";
import j from "./states/RadioUnchecked.js";
import C from "./states/RadioUncheckedHover.js";
import E from "./states/RadioUncheckedFocussed.js";
import k from "./states/RadioUncheckedDisabled.js";
import w from "styled-components";
import A from "../Typography/Typography.js";
const T = w.div`
  outline: none;
  display: flex;
  align-items: center;
  gap: 6px;
  cursor: ${({ $isDisabled: o }) => o ? "not-allowed" : "pointer"};
  pointer-events: ${({ $isDisabled: o }) => o ? "none" : "auto"};
  position: relative;
`, V = ({ id: o, label: a, selectedId: s, onChange: u, isDisabled: e }) => {
  const [l, x] = n(!1), [m, d] = n(!1), [t, p] = n(!1), f = h(null);
  g(() => {
    x(s === o);
  }, [s, o]);
  const c = () => {
    e || u(o);
  };
  return b(T, { ref: f, $isDisabled: e, onFocus: (r) => {
    e || r.target !== f.current || p(!0);
  }, onBlur: () => {
    e || p(!1);
  }, onMouseEnter: () => !e && d(!0), onMouseLeave: () => d(!1), onClick: c, onKeyDown: (r) => {
    e || r.key !== "Enter" && r.key !== " " || (r.preventDefault(), c());
  }, tabIndex: e ? -1 : 0, role: "radio", "aria-checked": l, "aria-disabled": e, children: [i("div", { style: { display: "flex", alignItems: "center", justifyContent: "center", width: 26, height: 26, pointerEvents: "none" }, children: i(l ? e ? I : t || t ? $ : m ? R : y : t ? E : m ? C : e ? k : j, {}) }), a && i(A, { variant: D.label1, isText: !0, children: a })] });
};
export {
  T as RadioWrapper,
  V as default
};
