import { GenesisTheme } from '../../styles/theme/genesis-theme.types';
import { TYPE, STATE } from '../../constants';
interface TypographyStyledProps {
    theme: GenesisTheme;
    $themeType?: keyof typeof TYPE;
    variant?: string;
    state?: keyof typeof STATE;
    breakpoint?: string;
    color?: string;
    $isFullWidth?: boolean;
}
export declare const Headline: import('styled-components/dist/types').IStyledComponentBase<"web", import('styled-components/dist/types').Substitute<Omit<import('antd/es/typography/Title').TitleProps & import('react').RefAttributes<HTMLElement>, "ref"> & {
    ref?: import('react').Ref<HTMLElement>;
}, TypographyStyledProps>> & string & Omit<import('react').ForwardRefExoticComponent<import('antd/es/typography/Title').TitleProps & import('react').RefAttributes<HTMLElement>>, keyof import('react').Component<any, {}, any>>;
export declare const Paragraph: import('styled-components/dist/types').IStyledComponentBase<"web", import('styled-components/dist/types').Substitute<Omit<import('antd/es/typography/Paragraph').ParagraphProps & import('react').RefAttributes<HTMLElement>, "ref"> & {
    ref?: import('react').Ref<HTMLElement>;
}, TypographyStyledProps>> & string & Omit<import('react').ForwardRefExoticComponent<import('antd/es/typography/Paragraph').ParagraphProps & import('react').RefAttributes<HTMLElement>>, keyof import('react').Component<any, {}, any>>;
export declare const Text: import('styled-components/dist/types').IStyledComponentBase<"web", import('styled-components/dist/types').Substitute<Omit<import('antd/es/typography/Text').TextProps & import('react').RefAttributes<HTMLSpanElement>, "ref"> & {
    ref?: import('react').Ref<HTMLSpanElement>;
}, TypographyStyledProps>> & string & Omit<import('react').ForwardRefExoticComponent<import('antd/es/typography/Text').TextProps & import('react').RefAttributes<HTMLSpanElement>>, keyof import('react').Component<any, {}, any>>;
export {};
