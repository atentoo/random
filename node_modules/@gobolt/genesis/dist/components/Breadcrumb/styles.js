import r from "styled-components";
import e from "../../node_modules/antd/es/breadcrumb/Breadcrumb.js";
const t = ({ colors: n, typography: a }, o = "wide") => `
  &.ant-breadcrumb {
    font-size: ${a[o].body1.fontSize};
    
    .ant-breadcrumb-link,
    span[class*="ant-breadcrumb-link"] > a {
      color: ${n.interactive.link.active};
      transition: color 0.2s ease-in-out;
      text-decoration: underline;
      background: none !important;
    }
      
    ol > li:last-child {
      .ant-breadcrumb-link,
      span[class*="ant-breadcrumb-link"],
      span[class*="ant-breadcrumb-link"] > span,
      span[class*="ant-breadcrumb-link"] > a {
        text-decoration: none !important;
        color: ${n.onsurface["copy-light"]} !important;
        cursor: default !important;
        pointer-events: none;
      }
    }
 
    .ant-breadcrumb-separator {
      color: ${n.interactive.link.active};
    }

    .ant-dropdown-menu-item,
    .ant-dropdown-menu-item:hover {
      background: none !important;
    }

    .ant-dropdown-trigger > svg {
      display: none;
    }

    span[role="img"] {
      display: none;
    }

    .ant-dropdown-trigger:hover {
      background: none !important;
    }
  }
`, c = r.div`
  ${({ $isDisabled: n }) => n && `
      cursor: not-allowed;
      .ant-breadcrumb {
        pointer-events: none;
        opacity: 0.5;
      }
    `}
  opacity: ${({ $isDisabled: n }) => n ? 0.5 : 1};
`, d = r(e)`
  ${({ theme: n, breakpoint: a }) => n && t(n, a)}
`;
export {
  d as Breadcrumb,
  c as BreadcrumbWrapper,
  d as default,
  t as getGenesisClass
};
