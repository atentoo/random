import { ButtonProps as AntButtonProps } from 'antd/es/button';
import { GenesisTheme } from '../../styles/theme/genesis-theme.types';
interface StyledButtonProps extends Omit<AntButtonProps, "type" | "size"> {
    theme?: GenesisTheme;
    $themeType?: "primary" | "secondary" | "tertiary" | "destructive" | "utility" | "icon";
    $state?: "active" | "hover" | "pressed" | "focus" | "disabled" | "selected";
    children?: React.ReactNode;
    $isIconButton?: boolean;
    size?: "small" | "normal" | "large";
}
export declare const Button: import('styled-components/dist/types').IStyledComponentBase<"web", import('styled-components/dist/types').Substitute<Omit<AntButtonProps & import('react').RefAttributes<HTMLAnchorElement | HTMLButtonElement>, "ref"> & {
    ref?: import('react').Ref<HTMLAnchorElement | HTMLButtonElement>;
}, StyledButtonProps>> & string & Omit<import('react').ForwardRefExoticComponent<AntButtonProps & import('react').RefAttributes<HTMLAnchorElement | HTMLButtonElement>> & {
    Group: import('react').FC<import('antd/es/button').ButtonGroupProps>;
}, keyof import('react').Component<any, {}, any>>;
export {};
