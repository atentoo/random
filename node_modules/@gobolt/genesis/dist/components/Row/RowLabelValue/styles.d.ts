interface StyledRowLabelValueProps {
    $isFullWidth?: boolean;
}
export declare const getGenesisRowLabelValueClass: ({ components }: {
    components: any;
}, $isFullWidth?: boolean) => string;
export declare const RowLabelValue: import('styled-components/dist/types').IStyledComponentBase<"web", import('styled-components/dist/types').Substitute<import('react').DetailedHTMLProps<import('react').HTMLAttributes<HTMLDivElement>, HTMLDivElement>, StyledRowLabelValueProps>> & string;
export declare const Skeleton: import('styled-components/dist/types').IStyledComponentBase<"web", import('styled-components').FastOmit<import('antd').SkeletonProps, never>> & string & Omit<import('react').FC<import('antd').SkeletonProps> & {
    Button: import('react').FC<import('antd/es/skeleton/Button').SkeletonButtonProps>;
    Avatar: import('react').FC<import('antd/es/skeleton/Avatar').AvatarProps>;
    Input: import('react').FC<import('antd/es/skeleton/Input').SkeletonInputProps>;
    Image: import('react').FC<import('antd/es/skeleton/Image').SkeletonImageProps>;
    Node: import('react').FC<import('antd/es/skeleton/Node').SkeletonNodeProps>;
}, keyof import('react').Component<any, {}, any>>;
export {};
