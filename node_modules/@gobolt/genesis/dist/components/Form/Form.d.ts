import { default as React } from 'react';
import { FormProps as AntFormProps, FormInstance } from 'antd';
import { TYPE, STATE } from '@gobolt/genesis/constants/index';
import * as S from "@gobolt/genesis/components/Form/styles";
export interface FormProps extends AntFormProps {
    children?: React.ReactNode;
    type?: keyof typeof TYPE;
    state?: keyof typeof STATE;
}
export declare const FormItem: (<Values = any>(props: import('antd').FormItemProps<Values>) => React.ReactElement) & {
    useStatus: () => {
        status?: import('antd/es/form/FormItem').ValidateStatus;
        errors: React.ReactNode[];
        warnings: React.ReactNode[];
    };
};
interface GenesisFormProps extends FormProps {
    form?: FormInstance;
}
interface FormType extends React.FC<GenesisFormProps> {
    Item: typeof S.Form.Item;
    useForm: typeof S.Form.useForm;
}
declare const Form: FormType;
export default Form;
