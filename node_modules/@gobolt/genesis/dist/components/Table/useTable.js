import { useState as t, useEffect as w, useCallback as g } from "react";
const T = (a) => ({ disabled: !1, name: a.id }), R = (a) => {
  const [i, u] = t(!0), { columns: n, filters: d = null, fetchUrl: f = "/table/data", fetchOptions: r = { method: "POST", headers: { "Content-Type": "application/json" }, body: JSON.stringify(d) }, selectionType: h = "checkbox", simulateDelay: c = 0, disableRowSelection: S = T } = a, [C, m] = t([]), [b, l] = t({ dataSource: [], columns: [], error: null }), [p, y] = t([]);
  return w(() => {
    const o = async () => {
      try {
        const e = await fetch(f, r), s = (await e.json()).data || [];
        m(s), l({ dataSource: s, columns: n, error: null });
      } catch (e) {
        console.error("Error fetching table data:", e), l({ dataSource: [], columns: n, error: e instanceof Error ? e : new Error(String(e)) });
      } finally {
        u(!1);
      }
    };
    c > 0 ? setTimeout(o, c) : o();
  }, [r]), { ...b, isLoading: i, rowSelection: { type: h, onChange: g((o, e) => {
    console.log("Row Selected:", o, e), y(e);
  }, []), getCheckboxProps: S }, selectedRows: p };
};
export {
  R as useTable
};
