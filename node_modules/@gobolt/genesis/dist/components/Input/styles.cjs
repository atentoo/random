"use strict";Object.defineProperty(exports,Symbol.toStringTag,{value:"Module"});const $=require("styled-components"),s=require("../../constants/index.cjs"),C=require("../../node_modules/antd/es/input/index.cjs"),h=({colors:r,borderRadius:e,components:t},o,d,a,b)=>{const i=((n,f,u)=>{const x={color:n.inputs.onsurface.active,borderColor:n[s.TYPE.secondary].active.borderColor,ringColor:n[f].focussed.ringColor},g={color:n.status.success.default,borderColor:n.status.success.default,ringColor:n.status.success.ringColor};var p;return{filled:x,error:{color:n.status.error.default,borderColor:n.status.error.default,ringColor:n.status.error.ringColor},success:g,themeState:u!==s.STATE.error&&u!==s.STATE.success&&u!==s.STATE.filled?{color:n.inputs.onsurface.active,backgroundColor:n.inputs.surface.active,borderColor:n.inputs.surface.border,ringColor:n[f][u].ringColor}:null}[p=u,[s.STATE.filled,s.STATE.error,s.STATE.success].includes(p)?p:"themeState"]})(r,o,d);return`
    &.ant-input {
        font-family: 'Inter', sans-serif;
        color: ${i.color};
        border-color: ${i.borderColor};
    }

    &.ant-input-outlined {
      border: 1px solid ${i.borderColor};

      &:hover {
        border-color: ${i.borderColor};
      }

      &:focus {
        border-color: black;
        box-shadow: none;
      }
    }

    .ant-input-group & {
      &:focus-within {
        outline: none;
        color: ${i.color};
        box-shadow: none;
        border-color: ${r[o].focussed.borderColor};
      }
    }

    .ant-input-group:focus-within {
      outline: none;
      box-shadow: 0 0 0 1px #fff, 0 0 0 3px ${r[o].focussed.ringColor};
      border-radius: ${e.BorderRadiusMd}px;
      transition: box-shadow 0.2s ease-in-out;

      /* Hide focus styles on inner input when parent is focused */
      .ant-input:focus-within {
        box-shadow: none;
        border-radius: 0;
        border-radius: ${l=a,c=b,c&&!l?`${e.BorderRadiusMd}px 0px 0px ${e.BorderRadiusMd}px`:l&&!c?`0px ${e.BorderRadiusMd}px ${e.BorderRadiusMd}px 0px`:"0px"};
        border-color: #ddd;
      }
    }

    /* Remove inner input focus styles when in a group */
    .ant-input-group .ant-input:focus,
    .ant-input-group .ant-input:focus-visible,
    .ant-input-group .ant-input:focus-within {
      outline: none;
      box-shadow: none;
      border-color: ${r[o].focussed.borderColor};
    }

    /* Single focus ring on group */
    .ant-input-group:focus-within {
      outline: none;
      box-shadow: 0 0 0 1px #fff, 0 0 0 3px ${r[o].focussed.ringColor};
      border-radius: ${e.BorderRadiusMd}px;
      transition: box-shadow 0.2s ease-in-out;
    }

    /* Remove focus styles for standalone inputs */
    &:not(.ant-input-group):focus-visible {
      outline: none;
      color: ${i.color};
      box-shadow: 0 0 0 1px #fff, 0 0 0 3px ${r[o].focussed.ringColor};
      border-radius: ${e.BorderRadiusMd}px;
      border-color: ${r[o].focussed.borderColor};
      transition: box-shadow 0.2s ease-in-out;
    }

    &:not(.ant-input-group .ant-input):focus-visible {
      outline: none;
      color: ${i.color};
      box-shadow: 0 0 0 1px #fff, 0 0 0 3px ${r[o].focussed.ringColor};
      border-radius: ${e.BorderRadiusMd}px;
      border-color: ${r[o].focussed.borderColor};
      transition: box-shadow 0.2s ease-in-out;
    }

    &.ant-input-group-wrapper {
      .ant-input-group-addon {
        padding-left: ${t.input.suffixPrefixHorPadding};
        padding-right: ${t.input.suffixPrefixHorPadding};
        padding-top: ${t.input.suffixPrefixVerPadding};
        padding-bottom: ${t.input.suffixPrefixVerPadding};
      }
    }
  `;var l,c},w=$(C)`
  ${({theme:r,state:e,type:t=s.TYPE.primary,...o})=>{const d=!!o.addonBefore,a=!!o.addonAfter;return h(r,t,e,d,a)}}
`;exports.Input=w;
