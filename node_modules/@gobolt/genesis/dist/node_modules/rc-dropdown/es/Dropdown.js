import K from "../../@babel/runtime/helpers/esm/extends.js";
import Q from "../../@babel/runtime/helpers/esm/defineProperty.js";
import U from "../../@babel/runtime/helpers/esm/slicedToArray.js";
import X from "../../@babel/runtime/helpers/esm/objectWithoutProperties.js";
import Y from "../../@rc-component/trigger/es/index.js";
import E from "../../../_virtual/index.js";
import { composeRef as Z, supportRef as _, getNodeRef as $ } from "../../rc-util/es/ref.js";
import o from "react";
import ee from "./hooks/useAccessibility.js";
import oe from "./Overlay.js";
import ie from "./placements.js";
var ne = ["arrow", "prefixCls", "transitionName", "animation", "align", "placement", "placements", "getPopupContainer", "showAction", "hideAction", "overlayClassName", "overlayStyle", "visible", "trigger", "autoFocus", "overlay", "children", "onVisibleChange"];
function re(e, M) {
  var t, s = e.arrow, m = s !== void 0 && s, c = e.prefixCls, i = c === void 0 ? "rc-dropdown" : c, O = e.transitionName, S = e.animation, k = e.align, u = e.placement, F = u === void 0 ? "bottomLeft" : u, f = e.placements, T = f === void 0 ? ie : f, W = e.getPopupContainer, D = e.showAction, H = e.hideAction, I = e.overlayClassName, L = e.overlayStyle, j = e.visible, d = e.trigger, g = d === void 0 ? ["hover"] : d, q = e.autoFocus, h = e.overlay, n = e.children, C = e.onVisibleChange, z = X(e, ne), B = o.useState(), y = U(B, 2), G = y[0], b = y[1], a = "visible" in e ? j : G, w = o.useRef(null), N = o.useRef(null), R = o.useRef(null);
  o.useImperativeHandle(M, function() {
    return w.current;
  });
  var A = function(r) {
    b(r), C == null || C(r);
  };
  ee({ visible: a, triggerRef: R, onVisibleChange: A, autoFocus: q, overlayRef: N });
  var l, P, v, x = function() {
    return o.createElement(oe, { ref: N, overlay: h, prefixCls: i, arrow: m });
  }, J = o.cloneElement(n, { className: E((t = n.props) === null || t === void 0 ? void 0 : t.className, a && (l = e.openClassName, l !== void 0 ? l : "".concat(i, "-open"))), ref: _(n) ? Z(R, $(n)) : void 0 }), p = H;
  return p || g.indexOf("contextMenu") === -1 || (p = ["click"]), o.createElement(Y, K({ builtinPlacements: T }, z, { prefixCls: i, ref: w, popupClassName: E(I, Q({}, "".concat(i, "-show-arrow"), m)), popupStyle: L, action: g, showAction: D, hideAction: p, popupPlacement: F, popupAlign: k, popupTransitionName: O, popupAnimation: S, popupVisible: a, stretch: (P = e.minOverlayWidthMatchTrigger, v = e.alignPoint, ("minOverlayWidthMatchTrigger" in e ? P : !v) ? "minWidth" : ""), popup: typeof h == "function" ? x : x(), onPopupVisibleChange: A, onPopupClick: function(r) {
    var V = e.onOverlayClick;
    b(!1), V && V(r);
  }, getPopupContainer: W }), J);
}
const he = o.forwardRef(re);
export {
  he as default
};
