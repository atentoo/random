import v from "../../../@babel/runtime/helpers/esm/slicedToArray.js";
import { useRef as u, useState as p, useEffect as f } from "react";
function h(i) {
  var r = u(i), t = p({}), e = v(t, 2)[1], n = u(null), c = u([]);
  return f(function() {
    return function() {
      n.current = null;
    };
  }, []), [r.current, function(a) {
    c.current.push(a);
    var o = Promise.resolve();
    n.current = o, o.then(function() {
      if (n.current === o) {
        var l = c.current, s = r.current;
        c.current = [], l.forEach(function(m) {
          r.current = m(r.current);
        }), n.current = null, s !== r.current && e({});
      }
    });
  }];
}
function T(i) {
  var r = u(null), t = u();
  function e() {
    window.clearTimeout(t.current);
  }
  return f(function() {
    return e;
  }, []), [function(n) {
    r.current = n, e(), t.current = window.setTimeout(function() {
      r.current = null, t.current = void 0;
    }, 100);
  }, function() {
    return r.current;
  }];
}
export {
  h as useLayoutState,
  T as useTimeoutLock
};
