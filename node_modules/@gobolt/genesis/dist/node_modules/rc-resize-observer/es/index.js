import m from "../../@babel/runtime/helpers/esm/extends.js";
import * as c from "react";
import p from "../../rc-util/es/Children/toArray.js";
import { warning as t } from "../../rc-util/es/warning.js";
import f from "./SingleObserver/index.js";
import { Collection as d } from "./Collection.js";
import "./utils/observerUtil.js";
function v(i, l) {
  var e = i.children, r = typeof e == "function" ? [e] : p(e);
  return process.env.NODE_ENV !== "production" && (r.length > 1 ? t(!1, "Find more than one child node with `children` in ResizeObserver. Please use ResizeObserver.Collection instead.") : r.length === 0 && t(!1, "`children` of ResizeObserver is empty. Nothing is in observe.")), r.map(function(o, n) {
    var a = (o == null ? void 0 : o.key) || "".concat("rc-observer-key", "-").concat(n);
    return c.createElement(f, m({}, i, { key: a, ref: n === 0 ? l : void 0 }), o);
  });
}
var s = c.forwardRef(v);
process.env.NODE_ENV !== "production" && (s.displayName = "ResizeObserver"), s.Collection = d;
export {
  s as default
};
