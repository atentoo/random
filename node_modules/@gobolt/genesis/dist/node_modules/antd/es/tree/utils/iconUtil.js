import * as e from "react";
import u from "../../../../@ant-design/icons/es/icons/CaretDownFilled.js";
import E from "../../../../@ant-design/icons/es/icons/FileOutlined.js";
import $ from "../../../../@ant-design/icons/es/icons/LoadingOutlined.js";
import g from "../../../../@ant-design/icons/es/icons/MinusSquareOutlined.js";
import y from "../../../../@ant-design/icons/es/icons/PlusSquareOutlined.js";
import m from "../../../../../_virtual/index.js";
import { cloneElement as f } from "../../_util/reactNode.js";
const v = (p) => {
  const { prefixCls: t, switcherIcon: r, treeNodeProps: c, showLine: i, switcherLoadingIcon: a } = p, { isLeaf: h, expanded: w, loading: d } = c;
  if (d) return e.isValidElement(a) ? a : e.createElement($, { className: `${t}-switcher-loading-icon` });
  let o;
  if (i && typeof i == "object" && (o = i.showLeafIcon), h) {
    if (!i) return null;
    if (typeof o != "boolean" && o) {
      const n = typeof o == "function" ? o(c) : o, N = `${t}-switcher-line-custom-icon`;
      return e.isValidElement(n) ? f(n, { className: m(n.props.className || "", N) }) : n;
    }
    return o ? e.createElement(E, { className: `${t}-switcher-line-icon` }) : e.createElement("span", { className: `${t}-switcher-leaf-line` });
  }
  const l = `${t}-switcher-icon`, s = typeof r == "function" ? r(c) : r;
  return e.isValidElement(s) ? f(s, { className: m(s.props.className || "", l) }) : s !== void 0 ? s : i ? w ? e.createElement(g, { className: `${t}-switcher-line-icon` }) : e.createElement(y, { className: `${t}-switcher-line-icon` }) : e.createElement(u, { className: l });
};
export {
  v as default
};
