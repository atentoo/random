const a = (r) => {
  let { treeCls: e, treeNodeCls: t, directoryNodeSelectedBg: n, directoryNodeSelectedColor: o, motionDurationMid: c, borderRadius: d, controlItemBgHover: i } = r;
  return { [`${e}${e}-directory ${t}`]: { [`${e}-node-content-wrapper`]: { position: "static", [`> *:not(${e}-drop-indicator)`]: { position: "relative" }, "&:hover": { background: "transparent" }, "&:before": { position: "absolute", inset: 0, transition: `background-color ${c}`, content: '""', borderRadius: d }, "&:hover:before": { background: i } }, [`${e}-switcher, ${e}-checkbox, ${e}-draggable-icon`]: { zIndex: 1 }, "&-selected": { [`${e}-switcher, ${e}-draggable-icon`]: { color: o }, [`${e}-node-content-wrapper`]: { color: o, background: "transparent", "&:before, &:hover:before": { background: n } } } } };
};
export {
  a as genDirectoryStyle
};
