import * as c from "react";
import B from "../../../@ant-design/icons/es/icons/ExclamationCircleFilled.js";
import v from "../../../../_virtual/index.js";
import F from "../../../rc-util/es/hooks/useMergedState.js";
import R from "../../../rc-util/es/omit.js";
import { useComponentConfig as U } from "../config-provider/context.js";
import W from "../popover/index.js";
import Y, { Overlay as q } from "./PurePanel.js";
import z from "./style/index.js";
var A = function(e, a) {
  var r = {};
  for (var o in e) Object.prototype.hasOwnProperty.call(e, o) && a.indexOf(o) < 0 && (r[o] = e[o]);
  if (e != null && typeof Object.getOwnPropertySymbols == "function") {
    var n = 0;
    for (o = Object.getOwnPropertySymbols(e); n < o.length; n++) a.indexOf(o[n]) < 0 && Object.prototype.propertyIsEnumerable.call(e, o[n]) && (r[o[n]] = e[o[n]]);
  }
  return r;
};
const b = c.forwardRef((e, a) => {
  var r, o;
  const { prefixCls: n, placement: g = "top", trigger: O = "click", okType: C = "primary", icon: j = c.createElement(B, null), children: N, overlayClassName: h, onOpenChange: f, onVisibleChange: d, overlayStyle: x, styles: i, classNames: s } = e, E = A(e, ["prefixCls", "placement", "trigger", "okType", "icon", "children", "overlayClassName", "onOpenChange", "onVisibleChange", "overlayStyle", "styles", "classNames"]), { getPrefixCls: P, className: V, style: k, classNames: y, styles: u } = U("popconfirm"), [w, S] = F(!1, { value: (r = e.open) !== null && r !== void 0 ? r : e.visible, defaultValue: (o = e.defaultOpen) !== null && o !== void 0 ? o : e.defaultVisible }), p = (l, t) => {
    S(l, !0), d == null || d(l), f == null || f(l, t);
  }, m = P("popconfirm", n), _ = v(m, V, h, y.root, s == null ? void 0 : s.root), T = v(y.body, s == null ? void 0 : s.body), [D] = z(m);
  return D(c.createElement(W, Object.assign({}, R(E, ["title"]), { trigger: O, placement: g, onOpenChange: (l, t) => {
    const { disabled: I = !1 } = e;
    I || p(l, t);
  }, open: w, ref: a, classNames: { root: _, body: T }, styles: { root: Object.assign(Object.assign(Object.assign(Object.assign({}, u.root), k), x), i == null ? void 0 : i.root), body: Object.assign(Object.assign({}, u.body), i == null ? void 0 : i.body) }, content: c.createElement(q, Object.assign({ okType: C, icon: j }, e, { prefixCls: m, close: (l) => {
    p(!1, l);
  }, onConfirm: (l) => {
    var t;
    return (t = e.onConfirm) === null || t === void 0 ? void 0 : t.call(void 0, l);
  }, onCancel: (l) => {
    var t;
    p(!1, l), (t = e.onCancel) === null || t === void 0 || t.call(void 0, l);
  } })), "data-popover-inject": !0 }), N));
});
b._InternalPanelDoNotUseOrYouWillBeFired = Y, process.env.NODE_ENV !== "production" && (b.displayName = "Popconfirm");
export {
  b as default
};
