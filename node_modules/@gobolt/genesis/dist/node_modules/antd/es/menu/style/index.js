import "../../../../@ant-design/cssinjs/es/extractStyle.js";
import "../../../../@ant-design/cssinjs/es/hooks/useCacheToken.js";
import "react";
import "../../../../@ant-design/cssinjs/es/StyleContext.js";
import { unit as c } from "../../../../@ant-design/cssinjs/es/util/index.js";
import "../../../../@ant-design/cssinjs/es/hooks/useCompatibleInsertionEffect.js";
import "../../../../@ant-design/cssinjs/es/hooks/useEffectCleanupRegister.js";
import "../../../../@ant-design/cssinjs/es/hooks/useHMR.js";
import "../../../../rc-util/es/warning.js";
import "../../../../@ant-design/cssinjs/es/theme/createTheme.js";
import "../../../../@ant-design/cssinjs/es/theme/ThemeCache.js";
import "../../../../@ant-design/cssinjs/es/transformers/legacyLogicalProperties.js";
import { FastColor as A } from "../../../../@ant-design/fast-color/es/FastColor.js";
import { clearFix as M, resetComponent as L, resetIcon as X } from "../../style/index.js";
import q from "../../style/motion/collapse.js";
import { initSlideMotion as y } from "../../style/motion/slide.js";
import { initZoomMotion as G } from "../../style/motion/zoom.js";
import "../../../../rc-util/es/hooks/useLayoutEffect.js";
import "../../../../rc-util/es/ref.js";
import { merge as O } from "../../../../@ant-design/cssinjs-utils/es/util/statistic.js";
import "../../../../@ant-design/cssinjs-utils/es/_util/hooks/useUniqueMemo.js";
import { genStyleHooks as P } from "../../theme/util/genStyleUtils.js";
import F from "./horizontal.js";
import Y from "./rtl.js";
import R from "./theme.js";
import Z from "./vertical.js";
const j = (o) => {
  const { componentCls: r, motionDurationSlow: e, motionDurationMid: a, motionEaseInOut: t, motionEaseOut: n, iconCls: i, iconSize: m, iconMarginInlineEnd: d } = o;
  return { [`${r}-item, ${r}-submenu-title`]: { position: "relative", display: "block", margin: 0, whiteSpace: "nowrap", cursor: "pointer", transition: [`border-color ${e}`, `background ${e}`, `padding calc(${e} + 0.1s) ${t}`].join(","), [`${r}-item-icon, ${i}`]: { minWidth: m, fontSize: m, transition: [`font-size ${a} ${n}`, `margin ${e} ${t}`, `color ${e}`].join(","), "+ span": { marginInlineStart: d, opacity: 1, transition: [`opacity ${e} ${t}`, `margin ${e}`, `color ${e}`].join(",") } }, [`${r}-item-icon`]: Object.assign({}, X()), [`&${r}-item-only-child`]: { [`> ${i}, > ${r}-item-icon`]: { marginInlineEnd: 0 } } }, [`${r}-item-disabled, ${r}-submenu-disabled`]: { background: "none !important", cursor: "not-allowed", "&::after": { borderColor: "transparent !important" }, a: { color: "inherit !important", cursor: "not-allowed", pointerEvents: "none" }, [`> ${r}-submenu-title`]: { color: "inherit !important", cursor: "not-allowed" } } };
}, W = (o) => {
  const { componentCls: r, motionDurationSlow: e, motionEaseInOut: a, borderRadius: t, menuArrowSize: n, menuArrowOffset: i } = o;
  return { [`${r}-submenu`]: { "&-expand-icon, &-arrow": { position: "absolute", top: "50%", insetInlineEnd: o.margin, width: n, color: "currentcolor", transform: "translateY(-50%)", transition: `transform ${e} ${a}, opacity ${e}` }, "&-arrow": { "&::before, &::after": { position: "absolute", width: o.calc(n).mul(0.6).equal(), height: o.calc(n).mul(0.15).equal(), backgroundColor: "currentcolor", borderRadius: t, transition: [`background ${e} ${a}`, `transform ${e} ${a}`, `top ${e} ${a}`, `color ${e} ${a}`].join(","), content: '""' }, "&::before": { transform: `rotate(45deg) translateY(${c(o.calc(i).mul(-1).equal())})` }, "&::after": { transform: `rotate(-45deg) translateY(${c(i)})` } } } };
}, J = (o) => {
  const { antCls: r, componentCls: e, fontSize: a, motionDurationSlow: t, motionDurationMid: n, motionEaseInOut: i, paddingXS: m, padding: d, colorSplit: u, lineWidth: s, zIndexPopup: p, borderRadiusLG: b, subMenuItemBorderRadius: B, menuArrowSize: S, menuArrowOffset: g, lineType: $, groupTitleLineHeight: I, groupTitleFontSize: v } = o;
  return [{ "": { [e]: Object.assign(Object.assign({}, M()), { "&-hidden": { display: "none" } }) }, [`${e}-submenu-hidden`]: { display: "none" } }, { [e]: Object.assign(Object.assign(Object.assign(Object.assign(Object.assign(Object.assign(Object.assign({}, L(o)), M()), { marginBottom: 0, paddingInlineStart: 0, fontSize: a, lineHeight: 0, listStyle: "none", outline: "none", transition: `width ${t} cubic-bezier(0.2, 0, 0, 1) 0s`, "ul, ol": { margin: 0, padding: 0, listStyle: "none" }, "&-overflow": { display: "flex", [`${e}-item`]: { flex: "none" } }, [`${e}-item, ${e}-submenu, ${e}-submenu-title`]: { borderRadius: o.itemBorderRadius }, [`${e}-item-group-title`]: { padding: `${c(m)} ${c(d)}`, fontSize: v, lineHeight: I, transition: `all ${t}` }, [`&-horizontal ${e}-submenu`]: { transition: [`border-color ${t} ${i}`, `background ${t} ${i}`].join(",") }, [`${e}-submenu, ${e}-submenu-inline`]: { transition: [`border-color ${t} ${i}`, `background ${t} ${i}`, `padding ${n} ${i}`].join(",") }, [`${e}-submenu ${e}-sub`]: { cursor: "initial", transition: [`background ${t} ${i}`, `padding ${t} ${i}`].join(",") }, [`${e}-title-content`]: { transition: `color ${t}`, "&-with-extra": { display: "inline-flex", alignItems: "center", width: "100%" }, [`> ${r}-typography-ellipsis-single-line`]: { display: "inline", verticalAlign: "unset" }, [`${e}-item-extra`]: { marginInlineStart: "auto", paddingInlineStart: o.padding } }, [`${e}-item a`]: { "&::before": { position: "absolute", inset: 0, backgroundColor: "transparent", content: '""' } }, [`${e}-item-divider`]: { overflow: "hidden", lineHeight: 0, borderColor: u, borderStyle: $, borderWidth: 0, borderTopWidth: s, marginBlock: s, padding: 0, "&-dashed": { borderStyle: "dashed" } } }), j(o)), { [`${e}-item-group`]: { [`${e}-item-group-list`]: { margin: 0, padding: 0, [`${e}-item, ${e}-submenu-title`]: { paddingInline: `${c(o.calc(a).mul(2).equal())} ${c(d)}` } } }, "&-submenu": { "&-popup": { position: "absolute", zIndex: p, borderRadius: b, boxShadow: "none", transformOrigin: "0 0", [`&${e}-submenu`]: { background: "transparent" }, "&::before": { position: "absolute", inset: 0, zIndex: -1, width: "100%", height: "100%", opacity: 0, content: '""' }, [`> ${e}`]: Object.assign(Object.assign(Object.assign({ borderRadius: b }, j(o)), W(o)), { [`${e}-item, ${e}-submenu > ${e}-submenu-title`]: { borderRadius: B }, [`${e}-submenu-title::after`]: { transition: `transform ${t} ${i}` } }) }, "\n          &-placement-leftTop,\n          &-placement-bottomRight,\n          ": { transformOrigin: "100% 0" }, "\n          &-placement-leftBottom,\n          &-placement-topRight,\n          ": { transformOrigin: "100% 100%" }, "\n          &-placement-rightBottom,\n          &-placement-topLeft,\n          ": { transformOrigin: "0 100%" }, "\n          &-placement-bottomLeft,\n          &-placement-rightTop,\n          ": { transformOrigin: "0 0" }, "\n          &-placement-leftTop,\n          &-placement-leftBottom\n          ": { paddingInlineEnd: o.paddingXS }, "\n          &-placement-rightTop,\n          &-placement-rightBottom\n          ": { paddingInlineStart: o.paddingXS }, "\n          &-placement-topRight,\n          &-placement-topLeft\n          ": { paddingBottom: o.paddingXS }, "\n          &-placement-bottomRight,\n          &-placement-bottomLeft\n          ": { paddingTop: o.paddingXS } } }), W(o)), { [`&-inline-collapsed ${e}-submenu-arrow,
        &-inline ${e}-submenu-arrow`]: { "&::before": { transform: `rotate(-45deg) translateX(${c(g)})` }, "&::after": { transform: `rotate(45deg) translateX(${c(o.calc(g).mul(-1).equal())})` } }, [`${e}-submenu-open${e}-submenu-inline > ${e}-submenu-title > ${e}-submenu-arrow`]: { transform: `translateY(${c(o.calc(S).mul(0.2).mul(-1).equal())})`, "&::after": { transform: `rotate(-45deg) translateX(${c(o.calc(g).mul(-1).equal())})` }, "&::before": { transform: `rotate(45deg) translateX(${c(g)})` } } }) }, { [`${r}-layout-header`]: { [e]: { lineHeight: "inherit" } } }];
}, K = (o) => {
  var r, e, a;
  const { colorPrimary: t, colorError: n, colorTextDisabled: i, colorErrorBg: m, colorText: d, colorTextDescription: u, colorBgContainer: s, colorFillAlter: p, colorFillContent: b, lineWidth: B, lineWidthBold: S, controlItemBgActive: g, colorBgTextHover: $, controlHeightLG: I, lineHeight: v, colorBgElevated: C, marginXXS: H, padding: k, fontSize: h, controlHeightSM: l, fontSizeLG: z, colorTextLightSolid: f, colorErrorHover: E } = o, T = (r = o.activeBarWidth) !== null && r !== void 0 ? r : 0, x = (e = o.activeBarBorderWidth) !== null && e !== void 0 ? e : B, D = (a = o.itemMarginInline) !== null && a !== void 0 ? a : o.marginXXS, w = new A(f).setA(0.65).toRgbString();
  return { dropdownWidth: 160, zIndexPopup: o.zIndexPopupBase + 50, radiusItem: o.borderRadiusLG, itemBorderRadius: o.borderRadiusLG, radiusSubMenuItem: o.borderRadiusSM, subMenuItemBorderRadius: o.borderRadiusSM, colorItemText: d, itemColor: d, colorItemTextHover: d, itemHoverColor: d, colorItemTextHoverHorizontal: t, horizontalItemHoverColor: t, colorGroupTitle: u, groupTitleColor: u, colorItemTextSelected: t, itemSelectedColor: t, subMenuItemSelectedColor: t, colorItemTextSelectedHorizontal: t, horizontalItemSelectedColor: t, colorItemBg: s, itemBg: s, colorItemBgHover: $, itemHoverBg: $, colorItemBgActive: b, itemActiveBg: g, colorSubItemBg: p, subMenuItemBg: p, colorItemBgSelected: g, itemSelectedBg: g, colorItemBgSelectedHorizontal: "transparent", horizontalItemSelectedBg: "transparent", colorActiveBarWidth: 0, activeBarWidth: T, colorActiveBarHeight: S, activeBarHeight: S, colorActiveBarBorderSize: B, activeBarBorderWidth: x, colorItemTextDisabled: i, itemDisabledColor: i, colorDangerItemText: n, dangerItemColor: n, colorDangerItemTextHover: n, dangerItemHoverColor: n, colorDangerItemTextSelected: n, dangerItemSelectedColor: n, colorDangerItemBgActive: m, dangerItemActiveBg: m, colorDangerItemBgSelected: m, dangerItemSelectedBg: m, itemMarginInline: D, horizontalItemBorderRadius: 0, horizontalItemHoverBg: "transparent", itemHeight: I, groupTitleLineHeight: v, collapsedWidth: 2 * I, popupBg: C, itemMarginBlock: H, itemPaddingInline: k, horizontalLineHeight: 1.15 * I + "px", iconSize: h, iconMarginInlineEnd: l - h, collapsedIconSize: z, groupTitleFontSize: h, darkItemDisabledColor: new A(f).setA(0.25).toRgbString(), darkItemColor: w, darkDangerItemColor: n, darkItemBg: "#001529", darkPopupBg: "#001529", darkSubMenuItemBg: "#000c17", darkItemSelectedColor: f, darkItemSelectedBg: t, darkDangerItemSelectedBg: n, darkItemHoverBg: "transparent", darkGroupTitleColor: w, darkItemHoverColor: f, darkDangerItemHoverColor: E, darkDangerItemSelectedColor: f, darkDangerItemActiveBg: n, itemWidth: T ? `calc(100% + ${x}px)` : `calc(100% - ${2 * D}px)` };
}, ve = function(o) {
  let r = arguments.length > 1 && arguments[1] !== void 0 ? arguments[1] : o;
  return P("Menu", (e) => {
    const { colorBgElevated: a, controlHeightLG: t, fontSize: n, darkItemColor: i, darkDangerItemColor: m, darkItemBg: d, darkSubMenuItemBg: u, darkItemSelectedColor: s, darkItemSelectedBg: p, darkDangerItemSelectedBg: b, darkItemHoverBg: B, darkGroupTitleColor: S, darkItemHoverColor: g, darkItemDisabledColor: $, darkDangerItemHoverColor: I, darkDangerItemSelectedColor: v, darkDangerItemActiveBg: C, popupBg: H, darkPopupBg: k } = e, h = e.calc(n).div(7).mul(5).equal(), l = O(e, { menuArrowSize: h, menuHorizontalHeight: e.calc(t).mul(1.15).equal(), menuArrowOffset: e.calc(h).mul(0.25).equal(), menuSubMenuBg: a, calc: e.calc, popupBg: H }), z = O(l, { itemColor: i, itemHoverColor: g, groupTitleColor: S, itemSelectedColor: s, subMenuItemSelectedColor: s, itemBg: d, popupBg: k, subMenuItemBg: u, itemActiveBg: "transparent", itemSelectedBg: p, activeBarHeight: 0, activeBarBorderWidth: 0, itemHoverBg: B, itemDisabledColor: $, dangerItemColor: m, dangerItemHoverColor: I, dangerItemSelectedColor: v, dangerItemActiveBg: C, dangerItemSelectedBg: b, menuSubMenuBg: u, horizontalItemSelectedColor: s, horizontalItemSelectedBg: p });
    return [J(l), F(l), Z(l), R(l, "light"), R(z, "dark"), Y(l), q(l), y(l, "slide-up"), y(l, "slide-down"), G(l, "zoom-big")];
  }, K, { deprecatedTokens: [["colorGroupTitle", "groupTitleColor"], ["radiusItem", "itemBorderRadius"], ["radiusSubMenuItem", "subMenuItemBorderRadius"], ["colorItemText", "itemColor"], ["colorItemTextHover", "itemHoverColor"], ["colorItemTextHoverHorizontal", "horizontalItemHoverColor"], ["colorItemTextSelected", "itemSelectedColor"], ["colorItemTextSelectedHorizontal", "horizontalItemSelectedColor"], ["colorItemTextDisabled", "itemDisabledColor"], ["colorDangerItemText", "dangerItemColor"], ["colorDangerItemTextHover", "dangerItemHoverColor"], ["colorDangerItemTextSelected", "dangerItemSelectedColor"], ["colorDangerItemBgActive", "dangerItemActiveBg"], ["colorDangerItemBgSelected", "dangerItemSelectedBg"], ["colorItemBg", "itemBg"], ["colorItemBgHover", "itemHoverBg"], ["colorSubItemBg", "subMenuItemBg"], ["colorItemBgActive", "itemActiveBg"], ["colorItemBgSelectedHorizontal", "horizontalItemSelectedBg"], ["colorActiveBarWidth", "activeBarWidth"], ["colorActiveBarHeight", "activeBarHeight"], ["colorActiveBarBorderSize", "activeBarBorderWidth"], ["colorItemBgSelected", "itemSelectedBg"]], injectStyle: !(arguments.length > 2 && arguments[2] !== void 0) || arguments[2], unitless: { groupTitleLineHeight: !0 } })(o, r);
};
export {
  ve as default,
  K as prepareComponentToken
};
