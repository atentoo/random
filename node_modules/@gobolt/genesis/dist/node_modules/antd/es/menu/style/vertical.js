import "../../../../@ant-design/cssinjs/es/extractStyle.js";
import "../../../../@ant-design/cssinjs/es/hooks/useCacheToken.js";
import "react";
import "../../../../@ant-design/cssinjs/es/StyleContext.js";
import { unit as n } from "../../../../@ant-design/cssinjs/es/util/index.js";
import "../../../../@ant-design/cssinjs/es/hooks/useCompatibleInsertionEffect.js";
import "../../../../@ant-design/cssinjs/es/hooks/useEffectCleanupRegister.js";
import "../../../../@ant-design/cssinjs/es/hooks/useHMR.js";
import "../../../../rc-util/es/warning.js";
import "../../../../@ant-design/cssinjs/es/theme/createTheme.js";
import "../../../../@ant-design/cssinjs/es/theme/ThemeCache.js";
import "../../../../@ant-design/cssinjs/es/transformers/legacyLogicalProperties.js";
import { textEllipsis as f } from "../../style/index.js";
const g = (e) => {
  const { componentCls: i, itemHeight: t, itemMarginInline: o, padding: l, menuArrowSize: r, marginXS: a, itemMarginBlock: d, itemWidth: m, itemPaddingInline: s } = e, u = e.calc(r).add(l).add(a).equal();
  return { [`${i}-item`]: { position: "relative", overflow: "hidden" }, [`${i}-item, ${i}-submenu-title`]: { height: t, lineHeight: n(t), paddingInline: s, overflow: "hidden", textOverflow: "ellipsis", marginInline: o, marginBlock: d, width: m }, [`> ${i}-item,
            > ${i}-submenu > ${i}-submenu-title`]: { height: t, lineHeight: n(t) }, [`${i}-item-group-list ${i}-submenu-title,
            ${i}-submenu-title`]: { paddingInlineEnd: u } };
}, q = (e) => {
  const { componentCls: i, iconCls: t, itemHeight: o, colorTextLightSolid: l, dropdownWidth: r, controlHeightLG: a, motionEaseOut: d, paddingXL: m, itemMarginInline: s, fontSizeLG: u, motionDurationFast: b, motionDurationSlow: p, paddingXS: h, boxShadowSecondary: w, collapsedWidth: S, collapsedIconSize: $ } = e, c = { height: o, lineHeight: n(o), listStylePosition: "inside", listStyleType: "disc" };
  return [{ [i]: { "&-inline, &-vertical": Object.assign({ [`&${i}-root`]: { boxShadow: "none" } }, g(e)) }, [`${i}-submenu-popup`]: { [`${i}-vertical`]: Object.assign(Object.assign({}, g(e)), { boxShadow: w }) } }, { [`${i}-submenu-popup ${i}-vertical${i}-sub`]: { minWidth: r, maxHeight: `calc(100vh - ${n(e.calc(a).mul(2.5).equal())})`, padding: "0", overflow: "hidden", borderInlineEnd: 0, "&:not([class*='-active'])": { overflowX: "hidden", overflowY: "auto" } } }, { [`${i}-inline`]: { width: "100%", [`&${i}-root`]: { [`${i}-item, ${i}-submenu-title`]: { display: "flex", alignItems: "center", transition: [`border-color ${p}`, `background ${p}`, `padding ${b} ${d}`].join(","), [`> ${i}-title-content`]: { flex: "auto", minWidth: 0, overflow: "hidden", textOverflow: "ellipsis" }, "> *": { flex: "none" } } }, [`${i}-sub${i}-inline`]: { padding: 0, border: 0, borderRadius: 0, boxShadow: "none", [`& > ${i}-submenu > ${i}-submenu-title`]: c, [`& ${i}-item-group-title`]: { paddingInlineStart: m } }, [`${i}-item`]: c } }, { [`${i}-inline-collapsed`]: { width: S, [`&${i}-root`]: { [`${i}-item, ${i}-submenu ${i}-submenu-title`]: { [`> ${i}-inline-collapsed-noicon`]: { fontSize: u, textAlign: "center" } } }, [`> ${i}-item,
          > ${i}-item-group > ${i}-item-group-list > ${i}-item,
          > ${i}-item-group > ${i}-item-group-list > ${i}-submenu > ${i}-submenu-title,
          > ${i}-submenu > ${i}-submenu-title`]: { insetInlineStart: 0, paddingInline: `calc(50% - ${n(e.calc($).div(2).equal())} - ${n(s)})`, textOverflow: "clip", [`
            ${i}-submenu-arrow,
            ${i}-submenu-expand-icon
          `]: { opacity: 0 }, [`${i}-item-icon, ${t}`]: { margin: 0, fontSize: $, lineHeight: n(o), "+ span": { display: "inline-block", opacity: 0 } } }, [`${i}-item-icon, ${t}`]: { display: "inline-block" }, "&-tooltip": { pointerEvents: "none", [`${i}-item-icon, ${t}`]: { display: "none" }, "a, a:hover": { color: l } }, [`${i}-item-group-title`]: Object.assign(Object.assign({}, f), { paddingInline: h }) } }];
};
export {
  q as default
};
