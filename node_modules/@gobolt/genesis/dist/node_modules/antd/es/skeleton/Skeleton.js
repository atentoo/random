import * as r from "react";
import B from "../../../../_virtual/index.js";
import { useComponentConfig as D } from "../config-provider/context.js";
import V from "./Avatar.js";
import _ from "./Button.js";
import F from "./Element.js";
import G from "./Image.js";
import H from "./Input.js";
import J from "./Node.js";
import K from "./Paragraph.js";
import L from "./style/index.js";
import M from "./Title.js";
function g(e) {
  return e && typeof e == "object" ? e : {};
}
const s = (e) => {
  const { prefixCls: v, loading: N, className: C, rootClassName: $, style: E, children: u, avatar: d = !1, title: b = !0, paragraph: j = !0, active: x, round: y } = e, { getPrefixCls: w, direction: k, className: z, style: I } = D("skeleton"), t = w("skeleton", v), [P, S, q] = L(t);
  if (N || !("loading" in e)) {
    const i = !!d, c = !!b, l = !!j;
    let O, h;
    if (i) {
      const m = Object.assign(Object.assign({ prefixCls: `${t}-avatar` }, /* @__PURE__ */ function(p, a) {
        return p && !a ? { size: "large", shape: "square" } : { size: "large", shape: "circle" };
      }(c, l)), g(d));
      O = r.createElement("div", { className: `${t}-header` }, r.createElement(F, Object.assign({}, m)));
    }
    if (c || l) {
      let m, p;
      if (c) {
        const a = Object.assign(Object.assign({ prefixCls: `${t}-title` }, /* @__PURE__ */ function(o, n) {
          return !o && n ? { width: "38%" } : o && n ? { width: "50%" } : {};
        }(i, l)), g(b));
        m = r.createElement(M, Object.assign({}, a));
      }
      if (l) {
        const a = Object.assign(Object.assign({ prefixCls: `${t}-paragraph` }, function(o, n) {
          const f = {};
          return o && n || (f.width = "61%"), f.rows = !o && n ? 3 : 2, f;
        }(i, c)), g(j));
        p = r.createElement(K, Object.assign({}, a));
      }
      h = r.createElement("div", { className: `${t}-content` }, m, p);
    }
    const A = B(t, { [`${t}-with-avatar`]: i, [`${t}-active`]: x, [`${t}-rtl`]: k === "rtl", [`${t}-round`]: y }, z, C, $, S, q);
    return P(r.createElement("div", { className: A, style: Object.assign(Object.assign({}, I), E) }, O, h));
  }
  return u ?? null;
};
s.Button = _, s.Avatar = V, s.Input = H, s.Image = G, s.Node = J, process.env.NODE_ENV !== "production" && (s.displayName = "Skeleton");
export {
  s as default
};
