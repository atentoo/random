import * as r from "react";
import M from "../../../@ant-design/icons/es/icons/EllipsisOutlined.js";
import Q from "../../../../_virtual/index.js";
import c from "../button/button.js";
import "../config-provider/index.js";
import V from "../space/index.js";
import { useCompactItemContext as W } from "../space/Compact.js";
import X from "./dropdown.js";
import { ConfigContext as Y } from "../config-provider/context.js";
var Z = function(e, a) {
  var n = {};
  for (var o in e) Object.prototype.hasOwnProperty.call(e, o) && a.indexOf(o) < 0 && (n[o] = e[o]);
  if (e != null && typeof Object.getOwnPropertySymbols == "function") {
    var t = 0;
    for (o = Object.getOwnPropertySymbols(e); t < o.length; t++) a.indexOf(o[t]) < 0 && Object.prototype.propertyIsEnumerable.call(e, o[t]) && (n[o[t]] = e[o[t]]);
  }
  return n;
};
const ee = (e) => {
  const { getPopupContainer: a, getPrefixCls: n, direction: o } = r.useContext(Y), { prefixCls: t, type: p = "default", danger: m, disabled: i, loading: d, onClick: y, htmlType: u, children: g, className: f, menu: C, arrow: b, autoFocus: O, overlay: v, trigger: h, align: w, open: P, onOpenChange: x, placement: E, getPopupContainer: N, href: D, icon: j = r.createElement(M, null), title: R, buttonsRender: S = (K) => K, mouseEnterDelay: T, mouseLeaveDelay: _, overlayClassName: k, overlayStyle: L, destroyPopupOnHide: F, dropdownRender: H } = e, I = Z(e, ["prefixCls", "type", "danger", "disabled", "loading", "onClick", "htmlType", "children", "className", "menu", "arrow", "autoFocus", "overlay", "trigger", "align", "open", "onOpenChange", "placement", "getPopupContainer", "href", "icon", "title", "buttonsRender", "mouseEnterDelay", "mouseLeaveDelay", "overlayClassName", "overlayStyle", "destroyPopupOnHide", "dropdownRender"]), s = n("dropdown", t), z = `${s}-button`, l = { menu: C, arrow: b, autoFocus: O, align: w, disabled: i, trigger: i ? [] : h, onOpenChange: x, getPopupContainer: N || a, mouseEnterDelay: T, mouseLeaveDelay: _, overlayClassName: k, overlayStyle: L, destroyPopupOnHide: F, dropdownRender: H }, { compactSize: B, compactItemClassnames: A } = W(s, o), U = Q(z, A, f);
  "overlay" in e && (l.overlay = v), "open" in e && (l.open = P), l.placement = "placement" in e ? E : o === "rtl" ? "bottomLeft" : "bottomRight";
  const $ = r.createElement(c, { type: p, danger: m, disabled: i, loading: d, onClick: y, htmlType: u, href: D, title: R }, g), q = r.createElement(c, { type: p, danger: m, icon: j }), [G, J] = S([$, q]);
  return r.createElement(V.Compact, Object.assign({ className: U, size: B, block: !0 }, I), G, r.createElement(X, Object.assign({}, l), J));
};
ee.__ANT_BUTTON = !0;
export {
  ee as default
};
