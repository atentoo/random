import "../../../../@ant-design/cssinjs/es/extractStyle.js";
import "../../../../@ant-design/cssinjs/es/hooks/useCacheToken.js";
import "react";
import "../../../../@ant-design/cssinjs/es/StyleContext.js";
import { unit as i } from "../../../../@ant-design/cssinjs/es/util/index.js";
import "../../../../@ant-design/cssinjs/es/hooks/useCompatibleInsertionEffect.js";
import "../../../../@ant-design/cssinjs/es/hooks/useEffectCleanupRegister.js";
import "../../../../@ant-design/cssinjs/es/hooks/useHMR.js";
import "../../../../rc-util/es/warning.js";
import "../../../../@ant-design/cssinjs/es/theme/createTheme.js";
import "../../../../@ant-design/cssinjs/es/theme/ThemeCache.js";
import "../../../../@ant-design/cssinjs/es/transformers/legacyLogicalProperties.js";
import { resetComponent as S, genFocusStyle as b } from "../../style/index.js";
import { initMoveMotion as v } from "../../style/motion/move.js";
import { slideDownOut as h, slideUpOut as x, slideDownIn as z, slideUpIn as k, initSlideMotion as w } from "../../style/motion/slide.js";
import { initZoomMotion as y } from "../../style/motion/zoom.js";
import I, { getArrowOffsetToken as C } from "../../style/placementArrow.js";
import { getArrowToken as R } from "../../style/roundedArrow.js";
import "../../../../rc-util/es/hooks/useLayoutEffect.js";
import "../../../../rc-util/es/ref.js";
import { merge as O } from "../../../../@ant-design/cssinjs-utils/es/util/statistic.js";
import "../../../../@ant-design/cssinjs-utils/es/_util/hooks/useUniqueMemo.js";
import { genStyleHooks as P } from "../../theme/util/genStyleUtils.js";
import D from "./status.js";
const H = (e) => {
  const { componentCls: n, menuCls: t, zIndexPopup: r, dropdownArrowDistance: s, sizePopupArrow: l, antCls: o, iconCls: a, motionDurationMid: d, paddingBlock: c, fontSize: g, dropdownEdgeChildPadding: f, colorTextDisabled: m, fontSizeIcon: u, controlPaddingHorizontal: $, colorBgElevated: p } = e;
  return [{ [n]: { position: "absolute", top: -9999, left: { _skip_check_: !0, value: -9999 }, zIndex: r, display: "block", "&::before": { position: "absolute", insetBlock: e.calc(l).div(2).sub(s).equal(), zIndex: -9999, opacity: 1e-4, content: '""' }, "&-menu-vertical": { maxHeight: "100vh", overflowY: "auto" }, [`&-trigger${o}-btn`]: { [`& > ${a}-down, & > ${o}-btn-icon > ${a}-down`]: { fontSize: u } }, [`${n}-wrap`]: { position: "relative", [`${o}-btn > ${a}-down`]: { fontSize: u }, [`${a}-down::before`]: { transition: `transform ${d}` } }, [`${n}-wrap-open`]: { [`${a}-down::before`]: { transform: "rotate(180deg)" } }, "\n        &-hidden,\n        &-menu-hidden,\n        &-menu-submenu-hidden\n      ": { display: "none" }, [`&${o}-slide-down-enter${o}-slide-down-enter-active${n}-placement-bottomLeft,
          &${o}-slide-down-appear${o}-slide-down-appear-active${n}-placement-bottomLeft,
          &${o}-slide-down-enter${o}-slide-down-enter-active${n}-placement-bottom,
          &${o}-slide-down-appear${o}-slide-down-appear-active${n}-placement-bottom,
          &${o}-slide-down-enter${o}-slide-down-enter-active${n}-placement-bottomRight,
          &${o}-slide-down-appear${o}-slide-down-appear-active${n}-placement-bottomRight`]: { animationName: k }, [`&${o}-slide-up-enter${o}-slide-up-enter-active${n}-placement-topLeft,
          &${o}-slide-up-appear${o}-slide-up-appear-active${n}-placement-topLeft,
          &${o}-slide-up-enter${o}-slide-up-enter-active${n}-placement-top,
          &${o}-slide-up-appear${o}-slide-up-appear-active${n}-placement-top,
          &${o}-slide-up-enter${o}-slide-up-enter-active${n}-placement-topRight,
          &${o}-slide-up-appear${o}-slide-up-appear-active${n}-placement-topRight`]: { animationName: z }, [`&${o}-slide-down-leave${o}-slide-down-leave-active${n}-placement-bottomLeft,
          &${o}-slide-down-leave${o}-slide-down-leave-active${n}-placement-bottom,
          &${o}-slide-down-leave${o}-slide-down-leave-active${n}-placement-bottomRight`]: { animationName: x }, [`&${o}-slide-up-leave${o}-slide-up-leave-active${n}-placement-topLeft,
          &${o}-slide-up-leave${o}-slide-up-leave-active${n}-placement-top,
          &${o}-slide-up-leave${o}-slide-up-leave-active${n}-placement-topRight`]: { animationName: h } } }, I(e, p, { arrowPlacement: { top: !0, bottom: !0 } }), { [`${n} ${t}`]: { position: "relative", margin: 0 }, [`${t}-submenu-popup`]: { position: "absolute", zIndex: r, background: "transparent", boxShadow: "none", transformOrigin: "0 0", "ul, li": { listStyle: "none", margin: 0 } }, [`${n}, ${n}-menu-submenu`]: Object.assign(Object.assign({}, S(e)), { [t]: Object.assign(Object.assign({ padding: f, listStyleType: "none", backgroundColor: p, backgroundClip: "padding-box", borderRadius: e.borderRadiusLG, outline: "none", boxShadow: e.boxShadowSecondary }, b(e)), { "&:empty": { padding: 0, boxShadow: "none" }, [`${t}-item-group-title`]: { padding: `${i(c)} ${i($)}`, color: e.colorTextDescription, transition: `all ${d}` }, [`${t}-item`]: { position: "relative", display: "flex", alignItems: "center" }, [`${t}-item-icon`]: { minWidth: g, marginInlineEnd: e.marginXS, fontSize: e.fontSizeSM }, [`${t}-title-content`]: { flex: "auto", "&-with-extra": { display: "inline-flex", alignItems: "center", width: "100%" }, "> a": { color: "inherit", transition: `all ${d}`, "&:hover": { color: "inherit" }, "&::after": { position: "absolute", inset: 0, content: '""' } }, [`${t}-item-extra`]: { paddingInlineStart: e.padding, marginInlineStart: "auto", fontSize: e.fontSizeSM, color: e.colorTextDescription } }, [`${t}-item, ${t}-submenu-title`]: Object.assign(Object.assign({ display: "flex", margin: 0, padding: `${i(c)} ${i($)}`, color: e.colorText, fontWeight: "normal", fontSize: g, lineHeight: e.lineHeight, cursor: "pointer", transition: `all ${d}`, borderRadius: e.borderRadiusSM, "&:hover, &-active": { backgroundColor: e.controlItemBgHover } }, b(e)), { "&-selected": { color: e.colorPrimary, backgroundColor: e.controlItemBgActive, "&:hover, &-active": { backgroundColor: e.controlItemBgActiveHover } }, "&-disabled": { color: m, cursor: "not-allowed", "&:hover": { color: m, backgroundColor: p, cursor: "not-allowed" }, a: { pointerEvents: "none" } }, "&-divider": { height: 1, margin: `${i(e.marginXXS)} 0`, overflow: "hidden", lineHeight: 0, backgroundColor: e.colorSplit }, [`${n}-menu-submenu-expand-icon`]: { position: "absolute", insetInlineEnd: e.paddingXS, [`${n}-menu-submenu-arrow-icon`]: { marginInlineEnd: "0 !important", color: e.colorTextDescription, fontSize: u, fontStyle: "normal" } } }), [`${t}-item-group-list`]: { margin: `0 ${i(e.marginXS)}`, padding: 0, listStyle: "none" }, [`${t}-submenu-title`]: { paddingInlineEnd: e.calc($).add(e.fontSizeSM).equal() }, [`${t}-submenu-vertical`]: { position: "relative" }, [`${t}-submenu${t}-submenu-disabled ${n}-menu-submenu-title`]: { [`&, ${n}-menu-submenu-arrow-icon`]: { color: m, backgroundColor: p, cursor: "not-allowed" } }, [`${t}-submenu-selected ${n}-menu-submenu-title`]: { color: e.colorPrimary } }) }) }, [w(e, "slide-up"), w(e, "slide-down"), v(e, "move-up"), v(e, "move-down"), y(e, "zoom-big")]];
}, j = (e) => Object.assign(Object.assign({ zIndexPopup: e.zIndexPopupBase + 50, paddingBlock: (e.controlHeight - e.fontSize * e.lineHeight) / 2 }, C({ contentRadius: e.borderRadiusLG, limitVerticalRadius: !0 })), R(e)), ie = P("Dropdown", (e) => {
  const { marginXXS: n, sizePopupArrow: t, paddingXXS: r, componentCls: s } = e, l = O(e, { menuCls: `${s}-menu`, dropdownArrowDistance: e.calc(t).div(2).add(n).equal(), dropdownEdgeChildPadding: r });
  return [H(l), D(l)];
}, j, { resetStyle: !1 });
export {
  ie as default,
  j as prepareComponentToken
};
