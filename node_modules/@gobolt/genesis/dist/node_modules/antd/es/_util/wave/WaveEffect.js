import * as t from "react";
import q from "../../../../../_virtual/index.js";
import z from "../../../../rc-motion/es/CSSMotion.js";
import "../../../../rc-motion/es/CSSMotionList.js";
import R from "../../../../rc-util/es/raf.js";
import { composeRef as U } from "../../../../rc-util/es/ref.js";
import { getReactRender as D } from "../../config-provider/UnstableContext.js";
import { TARGET_CLS as G } from "./interface.js";
import { getTargetWaveColor as H } from "./util.js";
function d(r) {
  return Number.isNaN(r) ? 0 : r;
}
const P = (r) => {
  const { className: u, target: e, component: c, registerUnmount: s } = r, f = t.useRef(null), a = t.useRef(null);
  t.useEffect(() => {
    a.current = s();
  }, []);
  const [p, h] = t.useState(null), [g, E] = t.useState([]), [y, S] = t.useState(0), [N, w] = t.useState(0), [x, C] = t.useState(0), [L, T] = t.useState(0), [W, k] = t.useState(!1), v = { left: y, top: N, width: x, height: L, borderRadius: g.map((n) => `${n}px`).join(" ") };
  function b() {
    const n = getComputedStyle(e);
    h(H(e));
    const o = n.position === "static", { borderLeftWidth: i, borderTopWidth: l } = n;
    S(o ? e.offsetLeft : d(-parseFloat(i))), w(o ? e.offsetTop : d(-parseFloat(l))), C(e.offsetWidth), T(e.offsetHeight);
    const { borderTopLeftRadius: m, borderTopRightRadius: A, borderBottomLeftRadius: B, borderBottomRightRadius: F } = n;
    E([m, A, F, B].map((O) => d(parseFloat(O))));
  }
  if (p && (v["--wave-color"] = p), t.useEffect(() => {
    if (e) {
      const n = R(() => {
        b(), k(!0);
      });
      let o;
      return typeof ResizeObserver < "u" && (o = new ResizeObserver(b), o.observe(e)), () => {
        R.cancel(n), o == null || o.disconnect();
      };
    }
  }, []), !W) return null;
  const j = (c === "Checkbox" || c === "Radio") && (e == null ? void 0 : e.classList.contains(G));
  return t.createElement(z, { visible: !0, motionAppear: !0, motionName: "wave-motion", motionDeadline: 5e3, onAppearEnd: (n, o) => {
    var i, l;
    if (o.deadline || o.propertyName === "opacity") {
      const m = (i = f.current) === null || i === void 0 ? void 0 : i.parentElement;
      (l = a.current) === null || l === void 0 || l.call(a).then(() => {
        m == null || m.remove();
      });
    }
    return !1;
  } }, (n, o) => {
    let { className: i } = n;
    return t.createElement("div", { ref: U(f, o), className: q(u, i, { "wave-quick": j }), style: v });
  });
}, X = (r, u) => {
  var e;
  const { component: c } = u;
  if (c === "Checkbox" && !(!((e = r.querySelector("input")) === null || e === void 0) && e.checked)) return;
  const s = document.createElement("div");
  s.style.position = "absolute", s.style.left = "0px", s.style.top = "0px", r == null || r.insertBefore(s, r == null ? void 0 : r.firstChild);
  const f = D();
  let a = null;
  a = f(t.createElement(P, Object.assign({}, u, { target: r, registerUnmount: function() {
    return a;
  } })), s);
};
export {
  X as default
};
