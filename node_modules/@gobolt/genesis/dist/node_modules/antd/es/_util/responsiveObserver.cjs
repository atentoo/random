"use strict";Object.defineProperties(exports,{__esModule:{value:!0},[Symbol.toStringTag]:{value:"Module"}});const $=require("react");require("../../../@ant-design/cssinjs/es/extractStyle.cjs"),require("../../../@ant-design/cssinjs/es/hooks/useCacheToken.cjs"),require("../../../@ant-design/cssinjs/es/StyleContext.cjs"),require("../../../@ant-design/cssinjs/es/theme/createTheme.cjs"),require("../../../rc-util/es/warning.cjs"),require("../../../@ant-design/cssinjs/es/theme/ThemeCache.cjs"),require("../../../@ant-design/cssinjs/es/hooks/useCompatibleInsertionEffect.cjs"),require("../../../@ant-design/cssinjs/es/hooks/useEffectCleanupRegister.cjs"),require("../../../@ant-design/cssinjs/es/hooks/useHMR.cjs"),require("../../../@ant-design/cssinjs/es/transformers/legacyLogicalProperties.cjs"),require("../../../rc-util/es/hooks/useLayoutEffect.cjs"),require("../../../rc-util/es/ref.cjs"),require("../../../@ant-design/cssinjs-utils/es/util/statistic.cjs"),require("../../../@ant-design/cssinjs-utils/es/_util/hooks/useUniqueMemo.cjs");const m=require("../theme/useToken.cjs"),d=["xxl","xl","lg","md","sm","xs"];exports.default=function(){const[,h]=m.default(),o=(e=>({xs:`(max-width: ${e.screenXSMax}px)`,sm:`(min-width: ${e.screenSM}px)`,md:`(min-width: ${e.screenMD}px)`,lg:`(min-width: ${e.screenLG}px)`,xl:`(min-width: ${e.screenXL}px)`,xxl:`(min-width: ${e.screenXXL}px)`}))((e=>{const r=e,n=[].concat(d).reverse();return n.forEach((s,t)=>{const i=s.toUpperCase(),u=`screen${i}Min`,c=`screen${i}`;if(!(r[u]<=r[c]))throw new Error(`${u}<=${c} fails : !(${r[u]}<=${r[c]})`);if(t<n.length-1){const a=`screen${i}Max`;if(!(r[c]<=r[a]))throw new Error(`${c}<=${a} fails : !(${r[c]}<=${r[a]})`);const l=`screen${n[t+1].toUpperCase()}Min`;if(!(r[a]<=r[l]))throw new Error(`${a}<=${l} fails : !(${r[a]}<=${r[l]})`)}}),e})(h));return $.useMemo(()=>{const e=new Map;let r=-1,n={};return{matchHandlers:{},dispatch:s=>(n=s,e.forEach(t=>t(n)),e.size>=1),subscribe(s){return e.size||this.register(),r+=1,e.set(r,s),s(n),r},unsubscribe(s){e.delete(s),e.size||this.unregister()},unregister(){Object.keys(o).forEach(s=>{const t=o[s],i=this.matchHandlers[t];i==null||i.mql.removeListener(i==null?void 0:i.listener)}),e.clear()},register(){Object.keys(o).forEach(s=>{const t=o[s],i=c=>{let{matches:a}=c;this.dispatch(Object.assign(Object.assign({},n),{[s]:a}))},u=window.matchMedia(t);u.addListener(i),this.matchHandlers[t]={mql:u,listener:i},i(u)})},responsiveMap:o}},[h])},exports.responsiveArray=d;
