import * as o from "react";
import E from "../../../../_virtual/index.js";
import M from "../../../rc-util/es/Children/toArray.js";
import { cloneElement as U } from "../_util/reactNode.js";
import { devUseWarning as W } from "../_util/warning.js";
import "../config-provider/index.js";
import q from "../config-provider/hooks/useCSSVarCls.js";
import B from "../popover/index.js";
import F from "./Avatar.js";
import N from "./AvatarContext.js";
import I from "./style/index.js";
import { ConfigContext as J } from "../config-provider/context.js";
const z = (r) => {
  const { size: t, shape: a } = o.useContext(N), i = o.useMemo(() => ({ size: r.size || t, shape: r.shape || a }), [r.size, r.shape, t, a]);
  return o.createElement(N.Provider, { value: i }, r.children);
}, ae = (r) => {
  var t, a, i, v;
  const { getPrefixCls: O, direction: b } = o.useContext(J), { prefixCls: k, className: S, rootClassName: $, style: f, maxCount: j, maxStyle: A, size: g, shape: P, maxPopoverPlacement: T, maxPopoverTrigger: G, children: D, max: e } = r;
  if (process.env.NODE_ENV !== "production") {
    const s = W("Avatar.Group");
    [["maxCount", "max={{ count: number }}"], ["maxStyle", "max={{ style: CSSProperties }}"], ["maxPopoverPlacement", "max={{ popover: PopoverProps }}"], ["maxPopoverTrigger", "max={{ popover: PopoverProps }}"]].forEach((p) => {
      let [n, x] = p;
      s.deprecated(!(n in r), n, x);
    });
  }
  const c = O("avatar", k), d = `${c}-group`, h = q(c), [y, H, V] = I(c, h), C = E(d, { [`${d}-rtl`]: b === "rtl" }, V, h, S, $, H), m = M(D).map((s, p) => U(s, { key: `avatar-key-${p}` })), l = (e == null ? void 0 : e.count) || j, u = m.length;
  if (l && l < u) {
    const s = m.slice(0, l), p = m.slice(l, u), n = (e == null ? void 0 : e.style) || A, x = ((t = e == null ? void 0 : e.popover) === null || t === void 0 ? void 0 : t.trigger) || G || "hover", _ = ((a = e == null ? void 0 : e.popover) === null || a === void 0 ? void 0 : a.placement) || T || "top", w = Object.assign(Object.assign({ content: p }, e == null ? void 0 : e.popover), { classNames: { root: E(`${d}-popover`, (v = (i = e == null ? void 0 : e.popover) === null || i === void 0 ? void 0 : i.classNames) === null || v === void 0 ? void 0 : v.root) }, placement: _, trigger: x });
    return s.push(o.createElement(B, Object.assign({ key: "avatar-popover-key", destroyTooltipOnHide: !0 }, w), o.createElement(F, { style: n }, "+" + (u - l)))), y(o.createElement(z, { shape: P, size: g }, o.createElement("div", { className: C, style: f }, s)));
  }
  return y(o.createElement(z, { shape: P, size: g }, o.createElement("div", { className: C, style: f }, m)));
};
export {
  ae as default
};
