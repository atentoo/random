import * as e from "react";
import L from "../../../../_virtual/index.js";
import q from "../../../rc-util/es/hooks/useLayoutEffect.js";
import "../../../rc-util/es/ref.js";
import I from "../../../rc-util/es/utils/get.js";
import z from "../../../rc-util/es/utils/set.js";
import "../../../rc-util/es/warning.js";
import A from "../grid/col.js";
import { FormContext as N, FormItemPrefixContext as D } from "./context.js";
import G from "./ErrorList.js";
import J from "./style/fallbackCmp.js";
var K = function(r, o) {
  var l = {};
  for (var t in r) Object.prototype.hasOwnProperty.call(r, t) && o.indexOf(t) < 0 && (l[t] = r[t]);
  if (r != null && typeof Object.getOwnPropertySymbols == "function") {
    var n = 0;
    for (t = Object.getOwnPropertySymbols(r); n < t.length; n++) o.indexOf(t[n]) < 0 && Object.prototype.propertyIsEnumerable.call(r, t[n]) && (l[t[n]] = r[t[n]]);
  }
  return l;
};
const ne = (r) => {
  const { prefixCls: o, status: l, labelCol: t, wrapperCol: n, children: P, errors: h, warnings: v, _internalItemRender: m, extra: c, help: _, fieldId: p, marginBottom: f, onErrorVisibleChanged: F, label: S } = r, s = `${o}-item`, a = e.useContext(N), E = e.useMemo(() => {
    let i = Object.assign({}, n || a.wrapperCol || {});
    return S === null && !t && !n && a.labelCol && [void 0, "xs", "sm", "md", "lg", "xl", "xxl"].forEach((x) => {
      const g = x ? [x] : [], w = I(a.labelCol, g), C = typeof w == "object" ? w : {}, $ = I(i, g);
      "span" in C && !("offset" in (typeof $ == "object" ? $ : {})) && C.span < 24 && (i = z(i, [].concat(g, ["offset"]), C.span));
    }), i;
  }, [n, a]), M = L(`${s}-control`, E.className), H = e.useMemo(() => {
    const { labelCol: i, wrapperCol: x } = a;
    return K(a, ["labelCol", "wrapperCol"]);
  }, [a]), u = e.useRef(null), [R, y] = e.useState(0);
  q(() => {
    c && u.current ? y(u.current.clientHeight) : y(0);
  }, [c]);
  const O = e.createElement("div", { className: `${s}-control-input` }, e.createElement("div", { className: `${s}-control-input-content` }, P)), V = e.useMemo(() => ({ prefixCls: o, status: l }), [o, l]), d = f !== null || h.length || v.length ? e.createElement(D.Provider, { value: V }, e.createElement(G, { fieldId: p, errors: h, warnings: v, help: _, helpStatus: l, className: `${s}-explain-connected`, onVisibleChanged: F })) : null, j = {};
  p && (j.id = `${p}_extra`);
  const b = c ? e.createElement("div", Object.assign({}, j, { className: `${s}-extra`, ref: u }), c) : null, k = d || b ? e.createElement("div", { className: `${s}-additional`, style: f ? { minHeight: f + R } : {} }, d, b) : null, B = m && m.mark === "pro_table_render" && m.render ? m.render(r, { input: O, errorList: d, extra: b }) : e.createElement(e.Fragment, null, O, k);
  return e.createElement(N.Provider, { value: H }, e.createElement(A, Object.assign({}, E, { className: M }), B), e.createElement(J, { prefixCls: o }));
};
export {
  ne as default
};
