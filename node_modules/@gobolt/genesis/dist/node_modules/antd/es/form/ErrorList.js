import k from "../../../@babel/runtime/helpers/esm/toConsumableArray.js";
import * as o from "react";
import $ from "../../../../_virtual/index.js";
import P from "../../../rc-motion/es/CSSMotion.js";
import _ from "../../../rc-motion/es/CSSMotionList.js";
import b from "../_util/motion.js";
import q from "../config-provider/hooks/useCSSVarCls.js";
import { FormItemPrefixContext as z } from "./context.js";
import E from "./hooks/useDebounce.js";
import A from "./style/index.js";
const N = [];
function l(n, m, a) {
  return { key: typeof n == "string" ? n : `${m}-${arguments.length > 3 && arguments[3] !== void 0 ? arguments[3] : 0}`, error: n, errorStatus: a };
}
const W = (n) => {
  let { help: m, helpStatus: a, errors: x = N, warnings: w = N, className: C, fieldId: c, onVisibleChanged: j } = n;
  const { prefixCls: t } = o.useContext(z), p = `${t}-item-explain`, f = q(t), [v, O, M] = A(t, f), S = o.useMemo(() => b(t), [t]), u = E(x), g = E(w), i = o.useMemo(() => m != null ? [l(m, "help", a)] : [].concat(k(u.map((r, e) => l(r, "error", "error", e))), k(g.map((r, e) => l(r, "warning", "warning", e)))), [m, a, u, g]), y = o.useMemo(() => {
    const r = {};
    return i.forEach((e) => {
      let { key: s } = e;
      r[s] = (r[s] || 0) + 1;
    }), i.map((e, s) => Object.assign(Object.assign({}, e), { key: r[e.key] > 1 ? `${e.key}-fallback-${s}` : e.key }));
  }, [i]), h = {};
  return c && (h.id = `${c}_help`), v(o.createElement(P, { motionDeadline: S.motionDeadline, motionName: `${t}-show-help`, visible: !!y.length, onVisibleChanged: j }, (r) => {
    const { className: e, style: s } = r;
    return o.createElement("div", Object.assign({}, h, { className: $(p, e, M, f, C, O), style: s }), o.createElement(_, Object.assign({ keys: y }, b(t), { motionName: `${t}-show-help-item`, component: !1 }), (D) => {
      const { key: I, error: V, errorStatus: d, className: F, style: L } = D;
      return o.createElement("div", { key: I, className: $(F, { [`${p}-${d}`]: d }), style: L }, V);
    }));
  }));
};
export {
  W as default
};
