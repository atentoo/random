import * as p from "react";
import d from "../../../../rc-util/es/raf.js";
import g from "../Input.js";
var O = function(t, s) {
  var r = {};
  for (var e in t) Object.prototype.hasOwnProperty.call(t, e) && s.indexOf(e) < 0 && (r[e] = t[e]);
  if (t != null && typeof Object.getOwnPropertySymbols == "function") {
    var n = 0;
    for (e = Object.getOwnPropertySymbols(t); n < e.length; n++) s.indexOf(e[n]) < 0 && Object.prototype.propertyIsEnumerable.call(t, e[n]) && (r[e[n]] = t[e[n]]);
  }
  return r;
};
const h = p.forwardRef((t, s) => {
  const { value: r, onChange: e, onActiveChange: n, index: l, mask: u } = t, f = O(t, ["value", "onChange", "onActiveChange", "index", "mask"]), y = r && typeof u == "string" ? u : r, i = p.useRef(null);
  p.useImperativeHandle(s, () => i.current);
  const c = () => {
    d(() => {
      var o;
      const a = (o = i.current) === null || o === void 0 ? void 0 : o.input;
      document.activeElement === a && a && a.select();
    });
  };
  return p.createElement(g, Object.assign({ type: u === !0 ? "password" : "text" }, f, { ref: i, value: y, onInput: (o) => {
    e(l, o.target.value);
  }, onFocus: c, onKeyDown: (o) => {
    const { key: a, ctrlKey: m, metaKey: v } = o;
    a === "ArrowLeft" ? n(l - 1) : a === "ArrowRight" ? n(l + 1) : a === "z" && (m || v) && o.preventDefault(), c();
  }, onKeyUp: (o) => {
    o.key !== "Backspace" || r || n(l - 1), c();
  }, onMouseDown: c, onMouseUp: c }));
});
export {
  h as default
};
