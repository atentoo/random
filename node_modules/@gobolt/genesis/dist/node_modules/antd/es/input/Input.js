import l, { forwardRef as ne, useRef as A, useContext as le, useEffect as pe } from "react";
import p from "../../../../_virtual/index.js";
import ie from "../../../rc-input/es/Input.js";
import { composeRef as me } from "../../../rc-util/es/ref.js";
import D from "../_util/ContextIsolator.js";
import ue from "../_util/getAllowClear.js";
import { getStatusClassNames as R, getMergedStatus as fe } from "../_util/statusUtils.js";
import { devUseWarning as V } from "../_util/warning.js";
import { useComponentConfig as ce } from "../config-provider/context.js";
import de from "../config-provider/DisabledContext.js";
import ge from "../config-provider/hooks/useCSSVarCls.js";
import be from "../config-provider/hooks/useSize.js";
import { FormItemInputContext as Ce } from "../form/context.js";
import xe from "../form/hooks/useVariants.js";
import { useCompactItemContext as ve } from "../space/Compact.js";
import ye from "./hooks/useRemovePasswordTimeout.js";
import Oe, { useSharedStyle as Ne } from "./style/index.js";
import { hasPrefixSuffix as we } from "./utils.js";
var Ee = function(r, u) {
  var i = {};
  for (var o in r) Object.prototype.hasOwnProperty.call(r, o) && u.indexOf(o) < 0 && (i[o] = r[o]);
  if (r != null && typeof Object.getOwnPropertySymbols == "function") {
    var a = 0;
    for (o = Object.getOwnPropertySymbols(r); a < o.length; a++) u.indexOf(o[a]) < 0 && Object.prototype.propertyIsEnumerable.call(r, o[a]) && (i[o[a]] = r[o[a]]);
  }
  return i;
};
const $e = ne((r, u) => {
  const { prefixCls: i, bordered: o = !0, status: a, size: x, disabled: v, onBlur: y, onFocus: O, suffix: N, allowClear: w, addonAfter: E, addonBefore: $, className: W, style: k, styles: z, rootClassName: j, onChange: h, classNames: g, variant: M } = r, Q = Ee(r, ["prefixCls", "bordered", "status", "size", "disabled", "onBlur", "onFocus", "suffix", "allowClear", "addonAfter", "addonBefore", "className", "style", "styles", "rootClassName", "onChange", "classNames", "variant"]);
  if (process.env.NODE_ENV !== "production") {
    const { deprecated: t } = V("Input");
    t(!("bordered" in r), "bordered", "variant");
  }
  const { getPrefixCls: U, direction: m, allowClear: q, autoComplete: G, className: H, style: J, classNames: I, styles: K } = ce("input"), e = U("input", i), b = A(null), S = ge(e), [L, f, T] = Ne(e, j), [X] = Oe(e, S), { compactSize: Y, compactItemClassnames: Z } = ve(e, m), n = be((t) => {
    var s;
    return (s = x ?? Y) !== null && s !== void 0 ? s : t;
  }), ee = l.useContext(de), re = v ?? ee, { status: oe, hasFeedback: c, feedbackIcon: te } = le(Ce), F = fe(oe, a), d = we(r) || !!c, B = A(d);
  if (process.env.NODE_ENV !== "production") {
    const t = V("Input");
    pe(() => {
      var s;
      d && !B.current && process.env.NODE_ENV !== "production" && t(document.activeElement === ((s = b.current) === null || s === void 0 ? void 0 : s.input), "usage", "When Input is focused, dynamic add or remove prefix / suffix will make it lose focus caused by dom structure change. Read more: https://ant.design/components/input/#FAQ"), B.current = d;
    }, [d]);
  }
  const C = ye(b, !0), ae = (c || N) && l.createElement(l.Fragment, null, N, c && te), se = ue(w ?? q), [_, P] = xe("input", M, o);
  return L(X(l.createElement(ie, Object.assign({ ref: me(u, b), prefixCls: e, autoComplete: G }, Q, { disabled: re, onBlur: (t) => {
    C(), y == null || y(t);
  }, onFocus: (t) => {
    C(), O == null || O(t);
  }, style: Object.assign(Object.assign({}, J), k), styles: Object.assign(Object.assign({}, K), z), suffix: ae, allowClear: se, className: p(W, j, T, S, Z, H), onChange: (t) => {
    C(), h == null || h(t);
  }, addonBefore: $ && l.createElement(D, { form: !0, space: !0 }, $), addonAfter: E && l.createElement(D, { form: !0, space: !0 }, E), classNames: Object.assign(Object.assign(Object.assign({}, g), I), { input: p({ [`${e}-sm`]: n === "small", [`${e}-lg`]: n === "large", [`${e}-rtl`]: m === "rtl" }, g == null ? void 0 : g.input, I.input, f), variant: p({ [`${e}-${_}`]: P }, R(e, F)), affixWrapper: p({ [`${e}-affix-wrapper-sm`]: n === "small", [`${e}-affix-wrapper-lg`]: n === "large", [`${e}-affix-wrapper-rtl`]: m === "rtl" }, f), wrapper: p({ [`${e}-group-rtl`]: m === "rtl" }, f), groupWrapper: p({ [`${e}-group-wrapper-sm`]: n === "small", [`${e}-group-wrapper-lg`]: n === "large", [`${e}-group-wrapper-rtl`]: m === "rtl", [`${e}-group-wrapper-${_}`]: P }, R(`${e}-group-wrapper`, F, c), f) }) }))));
});
process.env.NODE_ENV !== "production" && ($e.displayName = "Input");
export {
  $e as default
};
