import Q from "../../../../@babel/runtime/helpers/esm/toConsumableArray.js";
import * as a from "react";
import X from "../../../../../_virtual/index.js";
import F from "../../../../rc-util/es/hooks/useEvent.js";
import Y from "../../../../rc-util/es/pickAttrs.js";
import { getMergedStatus as Z } from "../../_util/statusUtils.js";
import { devUseWarning as ee } from "../../_util/warning.js";
import "../../config-provider/index.js";
import te from "../../config-provider/hooks/useSize.js";
import { FormItemInputContext as N } from "../../form/context.js";
import re from "../style/otp.js";
import ne from "./OTPInput.js";
import { ConfigContext as oe } from "../../config-provider/context.js";
var ae = function(s, p) {
  var i = {};
  for (var n in s) Object.prototype.hasOwnProperty.call(s, n) && p.indexOf(n) < 0 && (i[n] = s[n]);
  if (s != null && typeof Object.getOwnPropertySymbols == "function") {
    var l = 0;
    for (n = Object.getOwnPropertySymbols(s); l < n.length; l++) p.indexOf(n[l]) < 0 && Object.prototype.propertyIsEnumerable.call(s, n[l]) && (i[n[l]] = s[n[l]]);
  }
  return i;
};
function f(s) {
  return (s || "").split("");
}
const se = (s) => {
  const { index: p, prefixCls: i, separator: n } = s, l = typeof n == "function" ? n(p) : n;
  return l ? a.createElement("span", { className: `${i}-separator` }, l) : null;
}, ye = a.forwardRef((s, p) => {
  const { prefixCls: i, length: n = 6, size: l, defaultValue: M, value: d, onChange: C, formatter: O, separator: P, variant: S, disabled: $, status: w, autoFocus: z, mask: g, type: A, onInput: x, inputMode: V } = s, _ = ae(s, ["prefixCls", "length", "size", "defaultValue", "value", "onChange", "formatter", "separator", "variant", "disabled", "status", "autoFocus", "mask", "type", "onInput", "inputMode"]);
  if (process.env.NODE_ENV !== "production") {
    const e = ee("Input.OTP");
    process.env.NODE_ENV !== "production" && e(!(typeof g == "string" && g.length > 1), "usage", "`mask` prop should be a single character.");
  }
  const { getPrefixCls: R, direction: D } = a.useContext(oe), u = R("otp", i), T = Y(_, { aria: !0, data: !0, attr: !0 }), [H, U, q] = re(u), v = te((e) => l ?? e), h = a.useContext(N), b = Z(h.status, w), B = a.useMemo(() => Object.assign(Object.assign({}, h), { status: b, hasFeedback: !1, feedbackIcon: null }), [h, b]), E = a.useRef(null), m = a.useRef({});
  a.useImperativeHandle(p, () => ({ focus: () => {
    var e;
    (e = m.current[0]) === null || e === void 0 || e.focus();
  }, blur: () => {
    var e;
    for (let t = 0; t < n; t += 1) (e = m.current[t]) === null || e === void 0 || e.blur();
  }, nativeElement: E.current }));
  const j = (e) => O ? O(e) : e, [y, I] = a.useState(() => f(j(M || "")));
  a.useEffect(() => {
    d !== void 0 && I(f(d));
  }, [d]);
  const G = F((e) => {
    I(e), x && x(e), C && e.length === n && e.every((t) => t) && e.some((t, r) => y[r] !== t) && C(e.join(""));
  }), J = F((e, t) => {
    let r = Q(y);
    for (let o = 0; o < e; o += 1) r[o] || (r[o] = "");
    t.length <= 1 ? r[e] = t : r = r.slice(0, e).concat(f(t)), r = r.slice(0, n);
    for (let o = r.length - 1; o >= 0 && !r[o]; o -= 1) r.pop();
    const c = j(r.map((o) => o || " ").join(""));
    return r = f(c).map((o, k) => o !== " " || r[k] ? o : r[k]), r;
  }), K = (e, t) => {
    var r;
    const c = J(e, t), o = Math.min(e + t.length, n - 1);
    o !== e && c[e] !== void 0 && ((r = m.current[o]) === null || r === void 0 || r.focus()), G(c);
  }, L = (e) => {
    var t;
    (t = m.current[e]) === null || t === void 0 || t.focus();
  }, W = { variant: S, disabled: $, status: b, mask: g, type: A, inputMode: V };
  return H(a.createElement("div", Object.assign({}, T, { ref: E, className: X(u, { [`${u}-sm`]: v === "small", [`${u}-lg`]: v === "large", [`${u}-rtl`]: D === "rtl" }, q, U) }), a.createElement(N.Provider, { value: B }, Array.from({ length: n }).map((e, t) => {
    const r = `otp-${t}`, c = y[t] || "";
    return a.createElement(a.Fragment, { key: r }, a.createElement(ne, Object.assign({ ref: (o) => {
      m.current[t] = o;
    }, index: t, size: v, htmlSize: 1, className: `${u}-input`, onChange: K, value: c, onActiveChange: L, autoFocus: t === 0 && z }, W)), t < n - 1 && a.createElement(se, { separator: P, index: t, prefixCls: u }));
  }))));
});
export {
  ye as default
};
