import "../../../../@ant-design/cssinjs/es/extractStyle.js";
import "../../../../@ant-design/cssinjs/es/hooks/useCacheToken.js";
import "react";
import "../../../../@ant-design/cssinjs/es/StyleContext.js";
import "../../../../@ant-design/cssinjs/es/theme/createTheme.js";
import "../../../../rc-util/es/warning.js";
import "../../../../@ant-design/cssinjs/es/theme/ThemeCache.js";
import "../../../../@ant-design/cssinjs/es/hooks/useCompatibleInsertionEffect.js";
import "../../../../@ant-design/cssinjs/es/hooks/useEffectCleanupRegister.js";
import "../../../../@ant-design/cssinjs/es/hooks/useHMR.js";
import t from "../../../../@ant-design/cssinjs/es/Keyframes.js";
import "../../../../@ant-design/cssinjs/es/transformers/legacyLogicalProperties.js";
import { initMotion as m } from "./motion.js";
const s = new t("antMoveDownIn", { "0%": { transform: "translate3d(0, 100%, 0)", transformOrigin: "0 0", opacity: 0 }, "100%": { transform: "translate3d(0, 0, 0)", transformOrigin: "0 0", opacity: 1 } }), f = new t("antMoveDownOut", { "0%": { transform: "translate3d(0, 0, 0)", transformOrigin: "0 0", opacity: 1 }, "100%": { transform: "translate3d(0, 100%, 0)", transformOrigin: "0 0", opacity: 0 } }), p = new t("antMoveLeftIn", { "0%": { transform: "translate3d(-100%, 0, 0)", transformOrigin: "0 0", opacity: 0 }, "100%": { transform: "translate3d(0, 0, 0)", transformOrigin: "0 0", opacity: 1 } }), y = new t("antMoveLeftOut", { "0%": { transform: "translate3d(0, 0, 0)", transformOrigin: "0 0", opacity: 1 }, "100%": { transform: "translate3d(-100%, 0, 0)", transformOrigin: "0 0", opacity: 0 } }), O = new t("antMoveRightIn", { "0%": { transform: "translate3d(100%, 0, 0)", transformOrigin: "0 0", opacity: 0 }, "100%": { transform: "translate3d(0, 0, 0)", transformOrigin: "0 0", opacity: 1 } }), c = new t("antMoveRightOut", { "0%": { transform: "translate3d(0, 0, 0)", transformOrigin: "0 0", opacity: 1 }, "100%": { transform: "translate3d(100%, 0, 0)", transformOrigin: "0 0", opacity: 0 } }), g = new t("antMoveUpIn", { "0%": { transform: "translate3d(0, -100%, 0)", transformOrigin: "0 0", opacity: 0 }, "100%": { transform: "translate3d(0, 0, 0)", transformOrigin: "0 0", opacity: 1 } }), v = new t("antMoveUpOut", { "0%": { transform: "translate3d(0, 0, 0)", transformOrigin: "0 0", opacity: 1 }, "100%": { transform: "translate3d(0, -100%, 0)", transformOrigin: "0 0", opacity: 0 } }), u = { "move-up": { inKeyframes: g, outKeyframes: v }, "move-down": { inKeyframes: s, outKeyframes: f }, "move-left": { inKeyframes: p, outKeyframes: y }, "move-right": { inKeyframes: O, outKeyframes: c } }, E = (r, a) => {
  const { antCls: o } = r, n = `${o}-${a}`, { inKeyframes: i, outKeyframes: e } = u[a];
  return [m(n, i, e, r.motionDurationMid), { [`
        ${n}-enter,
        ${n}-appear
      `]: { opacity: 0, animationTimingFunction: r.motionEaseOutCirc }, [`${n}-leave`]: { animationTimingFunction: r.motionEaseInOutCirc } }];
};
export {
  E as initMoveMotion,
  s as moveDownIn,
  f as moveDownOut,
  p as moveLeftIn,
  y as moveLeftOut,
  O as moveRightIn,
  c as moveRightOut,
  g as moveUpIn,
  v as moveUpOut
};
