import { useRef as o } from "react";
import m from "../../../../rc-util/es/hooks/useLayoutEffect.js";
import i from "../../_util/hooks/useForceUpdate.js";
import a from "../../_util/responsiveObserver.js";
function b() {
  let e = !(arguments.length > 0 && arguments[0] !== void 0) || arguments[0];
  const r = o(arguments.length > 1 && arguments[1] !== void 0 ? arguments[1] : {}), n = i(), t = a();
  return m(() => {
    const u = t.subscribe((s) => {
      r.current = s, e && n();
    });
    return () => t.unsubscribe(u);
  }, []), r.current;
}
export {
  b as default
};
