import * as p from "react";
import f from "../../../../_virtual/index.js";
import { devUseWarning as d } from "../_util/warning.js";
import "../config-provider/index.js";
import "../../../@ant-design/cssinjs/es/extractStyle.js";
import "../../../@ant-design/cssinjs/es/hooks/useCacheToken.js";
import "../../../@ant-design/cssinjs/es/StyleContext.js";
import "../../../@ant-design/cssinjs/es/theme/createTheme.js";
import "../../../rc-util/es/warning.js";
import "../../../@ant-design/cssinjs/es/theme/ThemeCache.js";
import "../../../@ant-design/cssinjs/es/hooks/useCompatibleInsertionEffect.js";
import "../../../@ant-design/cssinjs/es/hooks/useEffectCleanupRegister.js";
import "../../../@ant-design/cssinjs/es/hooks/useHMR.js";
import "../../../@ant-design/cssinjs/es/transformers/legacyLogicalProperties.js";
import "../../../rc-util/es/hooks/useLayoutEffect.js";
import "../../../rc-util/es/ref.js";
import "../../../@ant-design/cssinjs-utils/es/util/statistic.js";
import "../../../@ant-design/cssinjs-utils/es/_util/hooks/useUniqueMemo.js";
import g from "../theme/useToken.js";
import { ConfigContext as v } from "../config-provider/context.js";
var O = function(o, i) {
  var r = {};
  for (var t in o) Object.prototype.hasOwnProperty.call(o, t) && i.indexOf(t) < 0 && (r[t] = o[t]);
  if (o != null && typeof Object.getOwnPropertySymbols == "function") {
    var e = 0;
    for (t = Object.getOwnPropertySymbols(o); e < t.length; e++) i.indexOf(t[e]) < 0 && Object.prototype.propertyIsEnumerable.call(o, t[e]) && (r[t[e]] = o[t[e]]);
  }
  return r;
};
const x = p.createContext(void 0), U = (o) => {
  const { getPrefixCls: i, direction: r } = p.useContext(v), { prefixCls: t, size: e, className: a } = o, l = O(o, ["prefixCls", "size", "className"]), s = i("btn-group", t), [, , c] = g(), n = p.useMemo(() => {
    switch (e) {
      case "large":
        return "lg";
      case "small":
        return "sm";
      default:
        return "";
    }
  }, [e]);
  if (process.env.NODE_ENV !== "production") {
    const m = d("Button.Group");
    m.deprecated(!1, "Button.Group", "Space.Compact"), process.env.NODE_ENV !== "production" && m(!e || ["large", "small", "middle"].includes(e), "usage", "Invalid prop `size`.");
  }
  const u = f(s, { [`${s}-${n}`]: n, [`${s}-rtl`]: r === "rtl" }, a, c);
  return p.createElement(x.Provider, { value: e }, p.createElement("div", Object.assign({}, l, { className: u })));
};
export {
  x as GroupSizeContext,
  U as default
};
