import { genCompactItemStyle as c } from "../../style/compact-item.js";
import { genCompactItemVerticalStyle as l } from "../../style/compact-item-vertical.js";
import "../../../../@ant-design/cssinjs/es/extractStyle.js";
import "../../../../@ant-design/cssinjs/es/hooks/useCacheToken.js";
import "react";
import "../../../../@ant-design/cssinjs/es/StyleContext.js";
import "../../../../@ant-design/cssinjs/es/theme/createTheme.js";
import "../../../../rc-util/es/warning.js";
import "../../../../@ant-design/cssinjs/es/theme/ThemeCache.js";
import "../../../../@ant-design/cssinjs/es/hooks/useCompatibleInsertionEffect.js";
import "../../../../@ant-design/cssinjs/es/hooks/useEffectCleanupRegister.js";
import "../../../../@ant-design/cssinjs/es/hooks/useHMR.js";
import "../../../../@ant-design/cssinjs/es/transformers/legacyLogicalProperties.js";
import "../../../../rc-util/es/hooks/useLayoutEffect.js";
import "../../../../rc-util/es/ref.js";
import "../../../../@ant-design/cssinjs-utils/es/util/statistic.js";
import "../../../../@ant-design/cssinjs-utils/es/_util/hooks/useUniqueMemo.js";
import { genSubStyleComponent as s } from "../../theme/util/genStyleUtils.js";
import { prepareToken as u, prepareComponentToken as g } from "./token.js";
const C = (r) => {
  const { componentCls: t, colorPrimaryHover: n, lineWidth: e, calc: a } = r, m = a(e).mul(-1).equal(), i = (o) => {
    const p = `${t}-compact${o ? "-vertical" : ""}-item${t}-primary:not([disabled])`;
    return { [`${p} + ${p}::before`]: { position: "absolute", top: o ? m : 0, insetInlineStart: o ? 0 : m, backgroundColor: n, content: '""', width: o ? "100%" : e, height: o ? e : "100%" } };
  };
  return Object.assign(Object.assign({}, i()), i(!0));
}, V = s(["Button", "compact"], (r) => {
  const t = u(r);
  return [c(t), l(t), C(t)];
}, g);
export {
  V as default
};
