import m from "../../../@babel/runtime/helpers/esm/toConsumableArray.js";
import i from "react";
import { cloneElement as d, isFragment as g } from "../_util/reactNode.js";
import { PresetColors as h } from "../theme/interface/presetColors.js";
const p = /^[\u4E00-\u9FA5]{2}$/, a = p.test.bind(p);
function $(r) {
  return r === "danger" ? { danger: !0 } : { type: r };
}
function c(r) {
  return typeof r == "string";
}
function j(r) {
  return r === "text" || r === "link";
}
function x(r, u) {
  let l = !1;
  const t = [];
  return i.Children.forEach(r, (o) => {
    const n = typeof o, s = n === "string" || n === "number";
    if (l && s) {
      const e = t.length - 1, f = t[e];
      t[e] = `${f}${o}`;
    } else t.push(o);
    l = s;
  }), i.Children.map(t, (o) => function(n, s) {
    if (n == null) return;
    const e = s ? " " : "";
    return typeof n != "string" && typeof n != "number" && c(n.type) && a(n.props.children) ? d(n, { children: n.props.children.split("").join(e) }) : c(n) ? a(n) ? i.createElement("span", null, n.split("").join(e)) : i.createElement("span", null, n) : g(n) ? i.createElement("span", null, n) : n;
  }(o, u));
}
["default", "primary", "danger"].concat(m(h));
export {
  $ as convertLegacyProps,
  c as isString,
  a as isTwoCNChar,
  j as isUnBorderedButtonVariant,
  x as spaceChildren
};
