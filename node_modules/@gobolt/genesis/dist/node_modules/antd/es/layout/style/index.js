import "../../../../@ant-design/cssinjs/es/extractStyle.js";
import "../../../../@ant-design/cssinjs/es/hooks/useCacheToken.js";
import "react";
import "../../../../@ant-design/cssinjs/es/StyleContext.js";
import { unit as p } from "../../../../@ant-design/cssinjs/es/util/index.js";
import "../../../../@ant-design/cssinjs/es/hooks/useCompatibleInsertionEffect.js";
import "../../../../@ant-design/cssinjs/es/hooks/useEffectCleanupRegister.js";
import "../../../../@ant-design/cssinjs/es/hooks/useHMR.js";
import "../../../../rc-util/es/warning.js";
import "../../../../@ant-design/cssinjs/es/theme/createTheme.js";
import "../../../../@ant-design/cssinjs/es/theme/ThemeCache.js";
import "../../../../@ant-design/cssinjs/es/transformers/legacyLogicalProperties.js";
import "../../../../rc-util/es/hooks/useLayoutEffect.js";
import "../../../../rc-util/es/ref.js";
import "../../../../@ant-design/cssinjs-utils/es/util/statistic.js";
import "../../../../@ant-design/cssinjs-utils/es/_util/hooks/useUniqueMemo.js";
import { genStyleHooks as m } from "../../theme/util/genStyleUtils.js";
const B = (e) => {
  const { antCls: t, componentCls: o, colorText: r, footerBg: i, headerHeight: g, headerPadding: l, headerColor: a, footerPadding: n, fontSize: d, bodyBg: c, headerBg: h } = e;
  return { [o]: { display: "flex", flex: "auto", flexDirection: "column", minHeight: 0, background: c, "&, *": { boxSizing: "border-box" }, [`&${o}-has-sider`]: { flexDirection: "row", [`> ${o}, > ${o}-content`]: { width: 0 } }, [`${o}-header, &${o}-footer`]: { flex: "0 0 auto" }, "&-rtl": { direction: "rtl" } }, [`${o}-header`]: { height: g, padding: l, color: a, lineHeight: p(g), background: h, [`${t}-menu`]: { lineHeight: "inherit" } }, [`${o}-footer`]: { padding: n, color: r, fontSize: d, background: i }, [`${o}-content`]: { flex: "auto", color: r, minHeight: 0 } };
}, f = (e) => {
  const { colorBgLayout: t, controlHeight: o, controlHeightLG: r, colorText: i, controlHeightSM: g, marginXXS: l, colorTextLightSolid: a, colorBgContainer: n } = e, d = 1.25 * r;
  return { colorBgHeader: "#001529", colorBgBody: t, colorBgTrigger: "#002140", bodyBg: t, headerBg: "#001529", headerHeight: 2 * o, headerPadding: `0 ${d}px`, headerColor: i, footerPadding: `${g}px ${d}px`, footerBg: t, siderBg: "#001529", triggerHeight: r + 2 * l, triggerBg: "#002140", triggerColor: a, zeroTriggerWidth: r, zeroTriggerHeight: r, lightSiderBg: n, lightTriggerBg: n, lightTriggerColor: i };
}, s = [["colorBgBody", "bodyBg"], ["colorBgHeader", "headerBg"], ["colorBgTrigger", "triggerBg"]];
m("Layout", (e) => [B(e)], f, { deprecatedTokens: s });
export {
  s as DEPRECATED_TOKENS,
  f as prepareComponentToken
};
