import * as r from "react";
import { useContext as j, useState as W, useEffect as h, useRef as ee } from "react";
import te from "../../../@ant-design/icons/es/icons/BarsOutlined.js";
import z from "../../../@ant-design/icons/es/icons/LeftOutlined.js";
import L from "../../../@ant-design/icons/es/icons/RightOutlined.js";
import P from "../../../../_virtual/index.js";
import re from "../../../rc-util/es/omit.js";
import "../config-provider/index.js";
import { LayoutContext as le } from "./context.js";
import oe from "./style/sider.js";
import { ConfigContext as ae } from "../config-provider/context.js";
var ne = function(e, p) {
  var c = {};
  for (var l in e) Object.prototype.hasOwnProperty.call(e, l) && p.indexOf(l) < 0 && (c[l] = e[l]);
  if (e != null && typeof Object.getOwnPropertySymbols == "function") {
    var o = 0;
    for (l = Object.getOwnPropertySymbols(e); o < l.length; o++) p.indexOf(l[o]) < 0 && Object.prototype.propertyIsEnumerable.call(e, l[o]) && (c[l[o]] = e[l[o]]);
  }
  return c;
};
const F = { xs: "479.98px", sm: "575.98px", md: "767.98px", lg: "991.98px", xl: "1199.98px", xxl: "1599.98px" }, se = r.createContext({}), ie = /* @__PURE__ */ (() => {
  let e = 0;
  return function() {
    return e += 1, `${arguments.length > 0 && arguments[0] !== void 0 ? arguments[0] : ""}${e}`;
  };
})(), ce = r.forwardRef((e, p) => {
  const { prefixCls: c, className: l, trigger: o, children: T, defaultCollapsed: _ = !1, theme: A = "dark", style: B = {}, collapsible: x = !1, reverseArrow: y = !1, width: H = 200, collapsedWidth: v = 80, zeroWidthTriggerStyle: M, breakpoint: m, onCollapse: w, onBreakpoint: b } = e, R = ne(e, ["prefixCls", "className", "trigger", "children", "defaultCollapsed", "theme", "style", "collapsible", "reverseArrow", "width", "collapsedWidth", "zeroWidthTriggerStyle", "breakpoint", "onCollapse", "onBreakpoint"]), { siderHook: C } = j(le), [s, E] = W("collapsed" in e ? e.collapsed : _), [$, D] = W(!1);
  h(() => {
    "collapsed" in e && E(e.collapsed);
  }, [e.collapsed]);
  const N = (t, n) => {
    "collapsed" in e || E(t), w == null || w(t, n);
  }, { getPrefixCls: I, direction: V } = j(ae), a = I("layout-sider", c), [q, G, J] = oe(a), O = ee(null);
  O.current = (t) => {
    D(t.matches), b == null || b(t.matches), s !== t.matches && N(t.matches, "responsive");
  }, h(() => {
    function t(d) {
      return O.current(d);
    }
    let n;
    if (typeof window < "u") {
      const { matchMedia: d } = window;
      if (d && m && m in F) {
        n = d(`screen and (max-width: ${F[m]})`);
        try {
          n.addEventListener("change", t);
        } catch {
          n.addListener(t);
        }
        t(n);
      }
    }
    return () => {
      try {
        n == null || n.removeEventListener("change", t);
      } catch {
        n == null || n.removeListener(t);
      }
    };
  }, [m]), h(() => {
    const t = ie("ant-sider-");
    return C.addSider(t), () => C.removeSider(t);
  }, []);
  const S = () => {
    N(!s, "clickTrigger");
  }, K = re(R, ["collapsed"]), u = s ? v : H, i = (f = u, !Number.isNaN(Number.parseFloat(f)) && isFinite(f) ? `${u}px` : String(u));
  var f;
  const g = parseFloat(String(v || 0)) === 0 ? r.createElement("span", { onClick: S, className: P(`${a}-zero-width-trigger`, `${a}-zero-width-trigger-${y ? "right" : "left"}`), style: M }, o || r.createElement(te, null)) : null, k = V === "rtl" == !y, Q = { expanded: k ? r.createElement(L, null) : r.createElement(z, null), collapsed: k ? r.createElement(z, null) : r.createElement(L, null) }[s ? "collapsed" : "expanded"], U = o !== null ? g || r.createElement("div", { className: `${a}-trigger`, onClick: S, style: { width: i } }, o || Q) : null, X = Object.assign(Object.assign({}, B), { flex: `0 0 ${i}`, maxWidth: i, minWidth: i, width: i }), Y = P(a, `${a}-${A}`, { [`${a}-collapsed`]: !!s, [`${a}-has-trigger`]: x && o !== null && !g, [`${a}-below`]: !!$, [`${a}-zero-width`]: parseFloat(i) === 0 }, l, G, J), Z = r.useMemo(() => ({ siderCollapsed: s }), [s]);
  return q(r.createElement(se.Provider, { value: Z }, r.createElement("aside", Object.assign({ className: Y }, K, { style: X, ref: p }), r.createElement("div", { className: `${a}-children` }, T), x || $ && g ? U : null)));
});
process.env.NODE_ENV !== "production" && (ce.displayName = "Sider");
export {
  se as SiderContext,
  ce as default
};
