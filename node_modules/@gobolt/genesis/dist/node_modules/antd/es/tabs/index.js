import * as d from "react";
import oe from "../../../@ant-design/icons/es/icons/CloseOutlined.js";
import ie from "../../../@ant-design/icons/es/icons/EllipsisOutlined.js";
import ne from "../../../@ant-design/icons/es/icons/PlusOutlined.js";
import S from "../../../../_virtual/index.js";
import re from "../../../rc-tabs/es/Tabs.js";
import { devUseWarning as te } from "../_util/warning.js";
import "../config-provider/index.js";
import le from "../config-provider/hooks/useCSSVarCls.js";
import ae from "../config-provider/hooks/useSize.js";
import de from "./hooks/useAnimateConfig.js";
import se from "./hooks/useLegacyItems.js";
import ce from "./style/index.js";
import me from "./TabPane.js";
import { ConfigContext as pe } from "../config-provider/context.js";
var ue = function(i, l) {
  var t = {};
  for (var o in i) Object.prototype.hasOwnProperty.call(i, o) && l.indexOf(o) < 0 && (t[o] = i[o]);
  if (i != null && typeof Object.getOwnPropertySymbols == "function") {
    var n = 0;
    for (o = Object.getOwnPropertySymbols(i); n < o.length; n++) l.indexOf(o[n]) < 0 && Object.prototype.propertyIsEnumerable.call(i, o[n]) && (t[o[n]] = i[o[n]]);
  }
  return t;
};
const k = (i) => {
  var l, t, o, n, c, m, p, u, v, f, b;
  const { type: N, className: _, rootClassName: $, size: T, onEdit: C, hideAdd: w, centered: D, addIcon: O, removeIcon: g, moreIcon: V, more: A, popupClassName: U, children: W, items: q, animated: B, style: F, indicatorSize: E, indicator: s } = i, I = ue(i, ["type", "className", "rootClassName", "size", "onEdit", "hideAdd", "centered", "addIcon", "removeIcon", "moreIcon", "more", "popupClassName", "children", "items", "animated", "style", "indicatorSize", "indicator"]), { prefixCls: G } = I, { direction: H, tabs: e, getPrefixCls: z, getPopupContainer: J } = d.useContext(pe), r = z("tabs", G), y = le(r), [K, P, x] = ce(r, y);
  let h;
  N === "editable-card" && (h = { onEdit: (a, Y) => {
    let { key: Z, event: ee } = Y;
    C == null || C(a === "add" ? ee : Z, a);
  }, removeIcon: (l = g ?? (e == null ? void 0 : e.removeIcon)) !== null && l !== void 0 ? l : d.createElement(oe, null), addIcon: (O ?? (e == null ? void 0 : e.addIcon)) || d.createElement(ne, null), showAdd: w !== !0 });
  const L = z();
  if (process.env.NODE_ENV !== "production") {
    const a = te("Tabs");
    process.env.NODE_ENV !== "production" && a(!("onPrevClick" in i) && !("onNextClick" in i), "breaking", "`onPrevClick` and `onNextClick` has been removed. Please use `onTabScroll` instead."), process.env.NODE_ENV !== "production" && a(!(E || e != null && e.indicatorSize), "deprecated", "`indicatorSize` has been deprecated. Please use `indicator={{ size: ... }}` instead.");
  }
  const j = ae(T), M = se(q, W), Q = de(r, B), R = Object.assign(Object.assign({}, e == null ? void 0 : e.style), F), X = { align: (t = s == null ? void 0 : s.align) !== null && t !== void 0 ? t : (o = e == null ? void 0 : e.indicator) === null || o === void 0 ? void 0 : o.align, size: (p = (c = (n = s == null ? void 0 : s.size) !== null && n !== void 0 ? n : E) !== null && c !== void 0 ? c : (m = e == null ? void 0 : e.indicator) === null || m === void 0 ? void 0 : m.size) !== null && p !== void 0 ? p : e == null ? void 0 : e.indicatorSize };
  return K(d.createElement(re, Object.assign({ direction: H, getPopupContainer: J }, I, { items: M, className: S({ [`${r}-${j}`]: j, [`${r}-card`]: ["card", "editable-card"].includes(N), [`${r}-editable-card`]: N === "editable-card", [`${r}-centered`]: D }, e == null ? void 0 : e.className, _, $, P, x, y), popupClassName: S(U, P, x, y), style: R, editable: h, more: Object.assign({ icon: (b = (f = (v = (u = e == null ? void 0 : e.more) === null || u === void 0 ? void 0 : u.icon) !== null && v !== void 0 ? v : e == null ? void 0 : e.moreIcon) !== null && f !== void 0 ? f : V) !== null && b !== void 0 ? b : d.createElement(ie, null), transitionName: `${L}-slide-up` }, A), prefixCls: r, animated: Q, indicator: X })));
};
k.TabPane = me, process.env.NODE_ENV !== "production" && (k.displayName = "Tabs");
export {
  k as default
};
