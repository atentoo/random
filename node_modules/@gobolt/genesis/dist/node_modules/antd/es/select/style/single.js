import "../../../../@ant-design/cssinjs/es/extractStyle.js";
import "../../../../@ant-design/cssinjs/es/hooks/useCacheToken.js";
import "react";
import "../../../../@ant-design/cssinjs/es/StyleContext.js";
import { unit as o } from "../../../../@ant-design/cssinjs/es/util/index.js";
import "../../../../@ant-design/cssinjs/es/hooks/useCompatibleInsertionEffect.js";
import "../../../../@ant-design/cssinjs/es/hooks/useEffectCleanupRegister.js";
import "../../../../@ant-design/cssinjs/es/hooks/useHMR.js";
import "../../../../rc-util/es/warning.js";
import "../../../../@ant-design/cssinjs/es/theme/createTheme.js";
import "../../../../@ant-design/cssinjs/es/theme/ThemeCache.js";
import "../../../../@ant-design/cssinjs/es/transformers/legacyLogicalProperties.js";
import { resetComponent as d } from "../../style/index.js";
import "../../../../rc-util/es/hooks/useLayoutEffect.js";
import "../../../../rc-util/es/ref.js";
import { merge as s } from "../../../../@ant-design/cssinjs-utils/es/util/statistic.js";
import "../../../../@ant-design/cssinjs-utils/es/_util/hooks/useUniqueMemo.js";
function l(e, t) {
  const { componentCls: n, inputPaddingHorizontalBase: r, borderRadius: a } = e, i = e.calc(e.controlHeight).sub(e.calc(e.lineWidth).mul(2)).equal(), c = t ? `${n}-${t}` : "";
  return { [`${n}-single${c}`]: { fontSize: e.fontSize, height: e.controlHeight, [`${n}-selector`]: Object.assign(Object.assign({}, d(e, !0)), { display: "flex", borderRadius: a, flex: "1 1 auto", [`${n}-selection-wrap:after`]: { lineHeight: o(i) }, [`${n}-selection-search`]: { position: "absolute", inset: 0, width: "100%", "&-input": { width: "100%", WebkitAppearance: "textfield" } }, [`
          ${n}-selection-item,
          ${n}-selection-placeholder
        `]: { display: "block", padding: 0, lineHeight: o(i), transition: `all ${e.motionDurationSlow}, visibility 0s`, alignSelf: "center" }, [`${n}-selection-placeholder`]: { transition: "none", pointerEvents: "none" }, [["&:after", `${n}-selection-item:empty:after`, `${n}-selection-placeholder:empty:after`].join(",")]: { display: "inline-block", width: 0, visibility: "hidden", content: '"\\a0"' } }), [`
        &${n}-show-arrow ${n}-selection-item,
        &${n}-show-arrow ${n}-selection-search,
        &${n}-show-arrow ${n}-selection-placeholder
      `]: { paddingInlineEnd: e.showArrowPaddingInlineEnd }, [`&${n}-open ${n}-selection-item`]: { color: e.colorTextPlaceholder }, [`&:not(${n}-customize-input)`]: { [`${n}-selector`]: { width: "100%", height: "100%", alignItems: "center", padding: `0 ${o(r)}`, [`${n}-selection-search-input`]: { height: i, fontSize: e.fontSize }, "&:after": { lineHeight: o(i) } } }, [`&${n}-customize-input`]: { [`${n}-selector`]: { "&:after": { display: "none" }, [`${n}-selection-search`]: { position: "static", width: "100%" }, [`${n}-selection-placeholder`]: { position: "absolute", insetInlineStart: 0, insetInlineEnd: 0, padding: `0 ${o(r)}`, "&:after": { display: "none" } } } } } };
}
function q(e) {
  const { componentCls: t } = e, n = e.calc(e.controlPaddingHorizontalSM).sub(e.lineWidth).equal();
  return [l(e), l(s(e, { controlHeight: e.controlHeightSM, borderRadius: e.borderRadiusSM }), "sm"), { [`${t}-single${t}-sm`]: { [`&:not(${t}-customize-input)`]: { [`${t}-selector`]: { padding: `0 ${o(n)}` }, [`&${t}-show-arrow ${t}-selection-search`]: { insetInlineEnd: e.calc(n).add(e.calc(e.fontSize).mul(1.5)).equal() }, [`
            &${t}-show-arrow ${t}-selection-item,
            &${t}-show-arrow ${t}-selection-placeholder
          `]: { paddingInlineEnd: e.calc(e.fontSize).mul(1.5).equal() } } } }, l(s(e, { controlHeight: e.singleItemHeightLG, fontSize: e.fontSizeLG, borderRadius: e.borderRadiusLG }), "lg")];
}
export {
  q as default
};
