import "../../../../@ant-design/cssinjs/es/extractStyle.js";
import "../../../../@ant-design/cssinjs/es/hooks/useCacheToken.js";
import "react";
import "../../../../@ant-design/cssinjs/es/StyleContext.js";
import { unit as i } from "../../../../@ant-design/cssinjs/es/util/index.js";
import "../../../../@ant-design/cssinjs/es/hooks/useCompatibleInsertionEffect.js";
import "../../../../@ant-design/cssinjs/es/hooks/useEffectCleanupRegister.js";
import "../../../../@ant-design/cssinjs/es/hooks/useHMR.js";
import "../../../../rc-util/es/warning.js";
import "../../../../@ant-design/cssinjs/es/theme/createTheme.js";
import "../../../../@ant-design/cssinjs/es/theme/ThemeCache.js";
import "../../../../@ant-design/cssinjs/es/transformers/legacyLogicalProperties.js";
import { genOutlinedStyle as l, genUnderlinedStyle as r, genFilledStyle as n, genBorderlessStyle as m } from "../../input/style/variants.js";
const S = (e) => {
  const { componentCls: t } = e;
  return { [t]: [Object.assign(Object.assign(Object.assign(Object.assign({}, l(e)), r(e)), n(e)), m(e)), { "&-outlined": { [`&${t}-multiple ${t}-selection-item`]: { background: e.multipleItemBg, border: `${i(e.lineWidth)} ${e.lineType} ${e.multipleItemBorderColor}` } }, "&-filled": { [`&${t}-multiple ${t}-selection-item`]: { background: e.colorBgContainer, border: `${i(e.lineWidth)} ${e.lineType} ${e.colorSplit}` } }, "&-borderless": { [`&${t}-multiple ${t}-selection-item`]: { background: e.multipleItemBg, border: `${i(e.lineWidth)} ${e.lineType} ${e.multipleItemBorderColor}` } }, "&-underlined": { [`&${t}-multiple ${t}-selection-item`]: { background: e.multipleItemBg, border: `${i(e.lineWidth)} ${e.lineType} ${e.multipleItemBorderColor}` } } }] };
};
export {
  S as default
};
