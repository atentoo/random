import { FastColor as c } from "../../../../@ant-design/fast-color/es/FastColor.js";
import { initComponentToken as s } from "../../input/style/token.js";
import { getArrowToken as h } from "../../style/roundedArrow.js";
const k = (e) => {
  const { componentCls: i, controlHeightLG: o, paddingXXS: t, padding: l } = e;
  return { pickerCellCls: `${i}-cell`, pickerCellInnerCls: `${i}-cell-inner`, pickerYearMonthCellWidth: e.calc(o).mul(1.5).equal(), pickerQuarterPanelContentHeight: e.calc(o).mul(1.4).equal(), pickerCellPaddingVertical: e.calc(t).add(e.calc(t).div(2)).equal(), pickerCellBorderGap: 2, pickerControlIconSize: 7, pickerControlIconMargin: 4, pickerControlIconBorderWidth: 1.5, pickerDatePanelPaddingHorizontal: e.calc(l).add(e.calc(t).div(2)).equal() };
}, C = (e) => {
  const { colorBgContainerDisabled: i, controlHeight: o, controlHeightSM: t, controlHeightLG: l, paddingXXS: a, lineWidth: g } = e, r = 2 * a, n = 2 * g, m = Math.min(o - r, o - n), p = Math.min(t - r, t - n), d = Math.min(l - r, l - n);
  return { INTERNAL_FIXED_ITEM_MARGIN: Math.floor(a / 2), cellHoverBg: e.controlItemBgHover, cellActiveWithRangeBg: e.controlItemBgActive, cellHoverWithRangeBg: new c(e.colorPrimary).lighten(35).toHexString(), cellRangeBorderColor: new c(e.colorPrimary).lighten(20).toHexString(), cellBgDisabled: i, timeColumnWidth: 1.4 * l, timeColumnHeight: 224, timeCellHeight: 28, cellWidth: 1.5 * t, cellHeight: t, textHeight: l, withoutTimeCellHeight: 1.65 * l, multipleItemBg: e.colorFillSecondary, multipleItemBorderColor: "transparent", multipleItemHeight: m, multipleItemHeightSM: p, multipleItemHeightLG: d, multipleSelectorBgDisabled: i, multipleItemColorDisabled: e.colorTextDisabled, multipleItemBorderColorDisabled: "transparent" };
}, B = (e) => Object.assign(Object.assign(Object.assign(Object.assign({}, s(e)), C(e)), h(e)), { presetsWidth: 120, presetsMaxWidth: 200, zIndexPopup: e.zIndexPopupBase + 50 });
export {
  C as initPanelComponentToken,
  k as initPickerPanelToken,
  B as prepareComponentToken
};
