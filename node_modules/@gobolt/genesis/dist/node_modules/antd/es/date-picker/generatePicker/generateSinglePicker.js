import * as a from "react";
import { forwardRef as Ee, useContext as S, useImperativeHandle as Pe } from "react";
import Ne from "../../../../@ant-design/icons/es/icons/CalendarOutlined.js";
import ve from "../../../../@ant-design/icons/es/icons/ClockCircleOutlined.js";
import T from "../../../../../_virtual/index.js";
import "../../../../rc-picker/es/PickerInput/RangePicker.js";
import Ie from "../../../../rc-picker/es/PickerInput/SinglePicker.js";
import "../../../../rc-picker/es/PickerPanel/index.js";
import be from "../../_util/ContextIsolator.js";
import { useZIndex as ke } from "../../_util/hooks/useZIndex.js";
import { getStatusClassNames as Oe, getMergedStatus as xe } from "../../_util/statusUtils.js";
import { devUseWarning as ye } from "../../_util/warning.js";
import "../../config-provider/index.js";
import he from "../../config-provider/DisabledContext.js";
import Re from "../../config-provider/hooks/useCSSVarCls.js";
import je from "../../config-provider/hooks/useSize.js";
import { FormItemInputContext as $e } from "../../form/context.js";
import we from "../../form/hooks/useVariants.js";
import { useCompactItemContext as De } from "../../space/Compact.js";
import Se from "../locale/en_US.js";
import Te from "../style/index.js";
import { useIcons as Ke, getPlaceholder as Me } from "../util.js";
import { QUARTERPICKER as ze, QUARTER as _e, TIMEPICKER as K, TIME as Ae, YEARPICKER as Ue, YEAR as We, MONTHPICKER as He, MONTH as Qe, WEEKPICKER as Ve, WEEK as Ye } from "./constant.js";
import qe from "./useComponents.js";
import { ConfigContext as Fe } from "../../config-provider/context.js";
import Le from "../../locale/useLocale.js";
var Ze = function(t, o) {
  var i = {};
  for (var e in t) Object.prototype.hasOwnProperty.call(t, e) && o.indexOf(e) < 0 && (i[e] = t[e]);
  if (t != null && typeof Object.getOwnPropertySymbols == "function") {
    var n = 0;
    for (e = Object.getOwnPropertySymbols(t); n < e.length; n++) o.indexOf(e[n]) < 0 && Object.prototype.propertyIsEnumerable.call(t, e[n]) && (i[e[n]] = t[e[n]]);
  }
  return i;
};
const Ir = (t) => {
  const o = (c, l) => {
    const _ = l === K ? "timePicker" : "datePicker", C = Ee((p, A) => {
      var u;
      const { prefixCls: U, getPopupContainer: W, components: H, style: Q, className: V, rootClassName: g, size: E, bordered: Y, placement: q, placeholder: F, popupClassName: L, dropdownClassName: P, disabled: N, status: Z, variant: B, onCalendarChange: v } = p, I = Ze(p, ["prefixCls", "getPopupContainer", "components", "style", "className", "rootClassName", "size", "bordered", "placement", "placeholder", "popupClassName", "dropdownClassName", "disabled", "status", "variant", "onCalendarChange"]), { getPrefixCls: b, direction: k, getPopupContainer: G, [_]: d } = S(Fe), r = b("picker", U), { compactSize: J, compactItemClassnames: X } = De(r, k), O = a.useRef(null), [ee, re] = we("datePicker", B, Y), f = Re(r), [ae, x, y] = Te(r, f);
      Pe(A, () => O.current);
      const h = c || p.picker, te = b(), { onSelect: R, multiple: oe } = I, j = R && c === "time" && !oe;
      if (process.env.NODE_ENV !== "production") {
        const s = ye(l || "DatePicker");
        process.env.NODE_ENV !== "production" && s(c !== "quarter", "deprecated", `DatePicker.${l} is legacy usage. Please use DatePicker[picker='${c}'] directly.`), s.deprecated(!P, "dropdownClassName", "popupClassName"), s.deprecated(!("bordered" in p), "bordered", "variant"), s.deprecated(!j, "onSelect", "onCalendarChange");
      }
      const [se, ne] = Ke(p, r), pe = qe(H), $ = je((s) => {
        var m;
        return (m = E ?? J) !== null && m !== void 0 ? m : s;
      }), ie = a.useContext(he), ce = N ?? ie, le = S($e), { hasFeedback: w, status: me, feedbackIcon: de } = le, ue = a.createElement(a.Fragment, null, h === "time" ? a.createElement(ve, null) : a.createElement(Ne, null), w && de), [fe] = Le("DatePicker", Se), D = Object.assign(Object.assign({}, fe), p.locale), [Ce] = ke("DatePicker", (u = p.popupStyle) === null || u === void 0 ? void 0 : u.zIndex);
      return ae(a.createElement(be, { space: !0 }, a.createElement(Ie, Object.assign({ ref: O, placeholder: Me(D, h, F), suffixIcon: ue, placement: q, prevIcon: a.createElement("span", { className: `${r}-prev-icon` }), nextIcon: a.createElement("span", { className: `${r}-next-icon` }), superPrevIcon: a.createElement("span", { className: `${r}-super-prev-icon` }), superNextIcon: a.createElement("span", { className: `${r}-super-next-icon` }), transitionName: `${te}-slide-up`, picker: c, onCalendarChange: (s, m, ge) => {
        v == null || v(s, m, ge), j && R(s);
      } }, { showToday: !0 }, I, { locale: D.lang, className: T({ [`${r}-${$}`]: $, [`${r}-${ee}`]: re }, Oe(r, xe(me, Z), w), x, X, d == null ? void 0 : d.className, V, y, f, g), style: Object.assign(Object.assign({}, d == null ? void 0 : d.style), Q), prefixCls: r, getPopupContainer: W || G, generateConfig: t, components: pe, direction: k, disabled: ce, classNames: { popup: T(x, y, f, g, L || P) }, styles: { popup: Object.assign(Object.assign({}, p.popupStyle), { zIndex: Ce }) }, allowClear: se, removeIcon: ne }))));
    });
    return process.env.NODE_ENV !== "production" && l && (C.displayName = l), C;
  }, i = o(), e = o(Ye, Ve), n = o(Qe, He), M = o(We, Ue), z = o(_e, ze);
  return { DatePicker: i, WeekPicker: e, MonthPicker: n, YearPicker: M, TimePicker: o(Ae, K), QuarterPicker: z };
};
export {
  Ir as default
};
