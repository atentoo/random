function i(e) {
  return e === !1 ? [!1, !1] : Array.isArray(e) ? e : [e];
}
function r(e, t, n) {
  return e === !0 || e === void 0 ? t : e || n && t;
}
function s(e) {
  const t = document.createElement("em");
  e.appendChild(t), process.env.NODE_ENV !== "production" && (t.className = "ant-typography-css-ellipsis-content-measure");
  const n = e.getBoundingClientRect(), o = t.getBoundingClientRect();
  return e.removeChild(t), n.left > o.left || o.right > n.right || n.top > o.top || o.bottom > n.bottom;
}
const c = (e) => ["string", "number"].includes(typeof e);
export {
  r as getNode,
  s as isEleEllipsis,
  c as isValidText,
  i as toList
};
