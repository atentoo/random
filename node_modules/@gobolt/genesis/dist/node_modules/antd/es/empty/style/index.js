import "../../../../@ant-design/cssinjs/es/extractStyle.js";
import "../../../../@ant-design/cssinjs/es/hooks/useCacheToken.js";
import "react";
import "../../../../@ant-design/cssinjs/es/StyleContext.js";
import "../../../../@ant-design/cssinjs/es/theme/createTheme.js";
import "../../../../rc-util/es/warning.js";
import "../../../../@ant-design/cssinjs/es/theme/ThemeCache.js";
import "../../../../@ant-design/cssinjs/es/hooks/useCompatibleInsertionEffect.js";
import "../../../../@ant-design/cssinjs/es/hooks/useEffectCleanupRegister.js";
import "../../../../@ant-design/cssinjs/es/hooks/useHMR.js";
import "../../../../@ant-design/cssinjs/es/transformers/legacyLogicalProperties.js";
import "../../../../rc-util/es/hooks/useLayoutEffect.js";
import "../../../../rc-util/es/ref.js";
import { merge as n } from "../../../../@ant-design/cssinjs-utils/es/util/statistic.js";
import "../../../../@ant-design/cssinjs-utils/es/_util/hooks/useUniqueMemo.js";
import { genStyleHooks as p } from "../../theme/util/genStyleUtils.js";
const l = (t) => {
  const { componentCls: i, margin: m, marginXS: o, marginXL: r, fontSize: e, lineHeight: g } = t;
  return { [i]: { marginInline: o, fontSize: e, lineHeight: g, textAlign: "center", [`${i}-image`]: { height: t.emptyImgHeight, marginBottom: o, opacity: t.opacityImage, img: { height: "100%" }, svg: { maxWidth: "100%", height: "100%", margin: "auto" } }, [`${i}-description`]: { color: t.colorTextDescription }, [`${i}-footer`]: { marginTop: m }, "&-normal": { marginBlock: r, color: t.colorTextDescription, [`${i}-description`]: { color: t.colorTextDescription }, [`${i}-image`]: { height: t.emptyImgHeightMD } }, "&-small": { marginBlock: o, color: t.colorTextDescription, [`${i}-image`]: { height: t.emptyImgHeightSM } } } };
}, k = p("Empty", (t) => {
  const { componentCls: i, controlHeightLG: m, calc: o } = t, r = n(t, { emptyImgCls: `${i}-img`, emptyImgHeight: o(m).mul(2.5).equal(), emptyImgHeightMD: m, emptyImgHeightSM: o(m).mul(0.875).equal() });
  return [l(r)];
});
export {
  k as default
};
