import j from "../../@babel/runtime/helpers/esm/extends.js";
import v from "../../@babel/runtime/helpers/esm/objectSpread2.js";
import h from "../../@babel/runtime/helpers/esm/defineProperty.js";
import w from "../../@babel/runtime/helpers/esm/slicedToArray.js";
import A from "../../@babel/runtime/helpers/esm/objectWithoutProperties.js";
import H from "../../../_virtual/index.js";
import I from "../../rc-util/es/hooks/useMergedState.js";
import * as o from "react";
import { forwardRef as M, useRef as k, useImperativeHandle as S } from "react";
var T = ["prefixCls", "className", "style", "checked", "disabled", "defaultChecked", "type", "title", "onChange"], L = M(function(e, b) {
  var i = e.prefixCls, n = i === void 0 ? "rc-checkbox" : i, g = e.className, C = e.style, y = e.checked, a = e.disabled, s = e.defaultChecked, x = s !== void 0 && s, u = e.type, f = u === void 0 ? "checkbox" : u, E = e.title, l = e.onChange, N = A(e, T), r = k(null), d = k(null), D = I(x, { value: y }), m = w(D, 2), p = m[0], P = m[1];
  S(b, function() {
    return { focus: function(t) {
      var c;
      (c = r.current) === null || c === void 0 || c.focus(t);
    }, blur: function() {
      var t;
      (t = r.current) === null || t === void 0 || t.blur();
    }, input: r.current, nativeElement: d.current };
  });
  var R = H(n, g, h(h({}, "".concat(n, "-checked"), p), "".concat(n, "-disabled"), a));
  return o.createElement("span", { className: R, title: E, style: C, ref: d }, o.createElement("input", j({}, N, { className: "".concat(n, "-input"), ref: r, onChange: function(t) {
    a || ("checked" in e || P(t.target.checked), l == null || l({ target: v(v({}, e), {}, { type: f, checked: t.target.checked }), stopPropagation: function() {
      t.stopPropagation();
    }, preventDefault: function() {
      t.preventDefault();
    }, nativeEvent: t.nativeEvent }));
  }, disabled: a, checked: !!p, type: f })), o.createElement("span", { className: "".concat(n, "-inner") }));
});
export {
  L as Checkbox,
  L as default
};
