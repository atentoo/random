import l from "../../@babel/runtime/helpers/esm/typeof.js";
import { warningOnce as h } from "./warning.js";
function d(c, m) {
  var o = arguments.length > 2 && arguments[2] !== void 0 && arguments[2], a = /* @__PURE__ */ new Set();
  return function t(r, e) {
    var u = arguments.length > 2 && arguments[2] !== void 0 ? arguments[2] : 1, i = a.has(r);
    if (h(!i, "Warning: There may be circular references"), i) return !1;
    if (r === e) return !0;
    if (o && u > 1) return !1;
    a.add(r);
    var f = u + 1;
    if (Array.isArray(r)) {
      if (!Array.isArray(e) || r.length !== e.length) return !1;
      for (var n = 0; n < r.length; n++) if (!t(r[n], e[n], f)) return !1;
      return !0;
    }
    if (r && e && l(r) === "object" && l(e) === "object") {
      var g = Object.keys(r);
      return g.length === Object.keys(e).length && g.every(function(s) {
        return t(r[s], e[s], f);
      });
    }
    return !1;
  }(c, m);
}
export {
  d as default
};
