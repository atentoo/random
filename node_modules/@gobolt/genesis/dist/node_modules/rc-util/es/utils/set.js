import p from "../../../@babel/runtime/helpers/esm/typeof.js";
import b from "../../../@babel/runtime/helpers/esm/objectSpread2.js";
import d from "../../../@babel/runtime/helpers/esm/toConsumableArray.js";
import j from "../../../@babel/runtime/helpers/esm/toArray.js";
import s from "./get.js";
function h(e, o, t, r) {
  if (!o.length) return t;
  var a, i = j(o), n = i[0], c = i.slice(1);
  return a = e || typeof n != "number" ? Array.isArray(e) ? d(e) : b({}, e) : [], r && t === void 0 && c.length === 1 ? delete a[n][c[0]] : a[n] = h(a[n], c, t, r), a;
}
function l(e, o, t) {
  var r = arguments.length > 3 && arguments[3] !== void 0 && arguments[3];
  return o.length && r && t === void 0 && !s(e, o.slice(0, -1)) ? e : h(e, o, t, r);
}
function v(e) {
  return Array.isArray(e) ? [] : {};
}
var O = typeof Reflect > "u" ? Object.keys : Reflect.ownKeys;
function x() {
  for (var e = arguments.length, o = new Array(e), t = 0; t < e; t++) o[t] = arguments[t];
  var r = v(o[0]);
  return o.forEach(function(a) {
    (function i(n, c) {
      var m, u = new Set(c), f = s(a, n), y = Array.isArray(f);
      if (y || p(m = f) === "object" && m !== null && Object.getPrototypeOf(m) === Object.prototype) {
        if (!u.has(f)) {
          u.add(f);
          var g = s(r, n);
          y ? r = l(r, n, []) : g && p(g) === "object" || (r = l(r, n, v(f))), O(f).forEach(function(A) {
            i([].concat(d(n), [A]), u);
          });
        }
      } else r = l(r, n, f);
    })([]);
  }), r;
}
export {
  l as default,
  x as merge
};
