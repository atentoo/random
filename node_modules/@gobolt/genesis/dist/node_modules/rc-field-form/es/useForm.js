import j from "../../@babel/runtime/helpers/esm/slicedToArray.js";
import V from "../../@babel/runtime/helpers/esm/objectSpread2.js";
import R from "../../@babel/runtime/helpers/esm/objectWithoutProperties.js";
import p from "../../@babel/runtime/helpers/esm/toConsumableArray.js";
import x from "../../@babel/runtime/helpers/esm/typeof.js";
import K from "../../@babel/runtime/helpers/esm/createClass.js";
import z from "../../@babel/runtime/helpers/esm/classCallCheck.js";
import a from "../../@babel/runtime/helpers/esm/defineProperty.js";
import y, { merge as S } from "../../rc-util/es/utils/set.js";
import { warningOnce as U } from "../../rc-util/es/warning.js";
import * as D from "react";
import { HOOK_MARK as B } from "./FieldContext.js";
import { allPromiseFinish as q } from "./utils/asyncUtil.js";
import { defaultValidateMessages as G } from "./utils/messages.js";
import b from "./utils/NameMap.js";
import { getNamePath as f, cloneByNamePathList as H, containsNamePath as M, matchNamePath as J } from "./utils/valueUtil.js";
import W from "../../rc-util/es/utils/get.js";
var Q = ["name"], X = K(function k(E) {
  var e = this;
  z(this, k), a(this, "formHooked", !1), a(this, "forceRootUpdate", void 0), a(this, "subscribable", !0), a(this, "store", {}), a(this, "fieldEntities", []), a(this, "initialValues", {}), a(this, "callbacks", {}), a(this, "validateMessages", null), a(this, "preserve", null), a(this, "lastValidatePromise", null), a(this, "getForm", function() {
    return { getFieldValue: e.getFieldValue, getFieldsValue: e.getFieldsValue, getFieldError: e.getFieldError, getFieldWarning: e.getFieldWarning, getFieldsError: e.getFieldsError, isFieldsTouched: e.isFieldsTouched, isFieldTouched: e.isFieldTouched, isFieldValidating: e.isFieldValidating, isFieldsValidating: e.isFieldsValidating, resetFields: e.resetFields, setFields: e.setFields, setFieldValue: e.setFieldValue, setFieldsValue: e.setFieldsValue, validateFields: e.validateFields, submit: e.submit, _init: !0, getInternalHooks: e.getInternalHooks };
  }), a(this, "getInternalHooks", function(t) {
    return t === B ? (e.formHooked = !0, { dispatch: e.dispatch, initEntityValue: e.initEntityValue, registerField: e.registerField, useSubscribe: e.useSubscribe, setInitialValues: e.setInitialValues, destroyForm: e.destroyForm, setCallbacks: e.setCallbacks, setValidateMessages: e.setValidateMessages, getFields: e.getFields, setPreserve: e.setPreserve, getInitialValue: e.getInitialValue, registerWatch: e.registerWatch }) : (U(!1, "`getInternalHooks` is internal usage. Should not call directly."), null);
  }), a(this, "useSubscribe", function(t) {
    e.subscribable = t;
  }), a(this, "prevWithoutPreserves", null), a(this, "setInitialValues", function(t, i) {
    if (e.initialValues = t || {}, i) {
      var r, n = S(t, e.store);
      (r = e.prevWithoutPreserves) === null || r === void 0 || r.map(function(o) {
        var l = o.key;
        n = y(n, l, W(t, l));
      }), e.prevWithoutPreserves = null, e.updateStore(n);
    }
  }), a(this, "destroyForm", function(t) {
    if (t) e.updateStore({});
    else {
      var i = new b();
      e.getFieldEntities(!0).forEach(function(r) {
        e.isMergedPreserve(r.isPreserve()) || i.set(r.getNamePath(), !0);
      }), e.prevWithoutPreserves = i;
    }
  }), a(this, "getInitialValue", function(t) {
    var i = W(e.initialValues, t);
    return t.length ? S(i) : i;
  }), a(this, "setCallbacks", function(t) {
    e.callbacks = t;
  }), a(this, "setValidateMessages", function(t) {
    e.validateMessages = t;
  }), a(this, "setPreserve", function(t) {
    e.preserve = t;
  }), a(this, "watchList", []), a(this, "registerWatch", function(t) {
    return e.watchList.push(t), function() {
      e.watchList = e.watchList.filter(function(i) {
        return i !== t;
      });
    };
  }), a(this, "notifyWatch", function() {
    var t = arguments.length > 0 && arguments[0] !== void 0 ? arguments[0] : [];
    if (e.watchList.length) {
      var i = e.getFieldsValue(), r = e.getFieldsValue(!0);
      e.watchList.forEach(function(n) {
        n(i, r, t);
      });
    }
  }), a(this, "timeoutId", null), a(this, "warningUnhooked", function() {
    process.env.NODE_ENV === "production" || e.timeoutId || typeof window > "u" || (e.timeoutId = setTimeout(function() {
      e.timeoutId = null, e.formHooked || U(!1, "Instance created by `useForm` is not connected to any Form element. Forget to pass `form` prop?");
    }));
  }), a(this, "updateStore", function(t) {
    e.store = t;
  }), a(this, "getFieldEntities", function() {
    return arguments.length > 0 && arguments[0] !== void 0 && arguments[0] ? e.fieldEntities.filter(function(t) {
      return t.getNamePath().length;
    }) : e.fieldEntities;
  }), a(this, "getFieldsMap", function() {
    var t = arguments.length > 0 && arguments[0] !== void 0 && arguments[0], i = new b();
    return e.getFieldEntities(t).forEach(function(r) {
      var n = r.getNamePath();
      i.set(n, r);
    }), i;
  }), a(this, "getFieldEntitiesForNamePathList", function(t) {
    if (!t) return e.getFieldEntities(!0);
    var i = e.getFieldsMap(!0);
    return t.map(function(r) {
      var n = f(r);
      return i.get(n) || { INVALIDATE_NAME_PATH: f(r) };
    });
  }), a(this, "getFieldsValue", function(t, i) {
    var r, n, o;
    if (e.warningUnhooked(), t === !0 || Array.isArray(t) ? (r = t, n = i) : t && x(t) === "object" && (o = t.strict, n = t.filter), r === !0 && !n) return e.store;
    var l = e.getFieldEntitiesForNamePathList(Array.isArray(r) ? r : null), s = [];
    return l.forEach(function(u) {
      var h, v, m, F, d = "INVALIDATE_NAME_PATH" in u ? u.INVALIDATE_NAME_PATH : u.getNamePath();
      if (o) {
        if ((m = (F = u).isList) !== null && m !== void 0 && m.call(F)) return;
      } else if (!r && (h = (v = u).isListField) !== null && h !== void 0 && h.call(v)) return;
      if (n) {
        var P = "getMeta" in u ? u.getMeta() : null;
        n(P) && s.push(d);
      } else s.push(d);
    }), H(e.store, s.map(f));
  }), a(this, "getFieldValue", function(t) {
    e.warningUnhooked();
    var i = f(t);
    return W(e.store, i);
  }), a(this, "getFieldsError", function(t) {
    return e.warningUnhooked(), e.getFieldEntitiesForNamePathList(t).map(function(i, r) {
      return i && !("INVALIDATE_NAME_PATH" in i) ? { name: i.getNamePath(), errors: i.getErrors(), warnings: i.getWarnings() } : { name: f(t[r]), errors: [], warnings: [] };
    });
  }), a(this, "getFieldError", function(t) {
    e.warningUnhooked();
    var i = f(t);
    return e.getFieldsError([i])[0].errors;
  }), a(this, "getFieldWarning", function(t) {
    e.warningUnhooked();
    var i = f(t);
    return e.getFieldsError([i])[0].warnings;
  }), a(this, "isFieldsTouched", function() {
    e.warningUnhooked();
    for (var t = arguments.length, i = new Array(t), r = 0; r < t; r++) i[r] = arguments[r];
    var n, o = i[0], l = i[1], s = !1;
    i.length === 0 ? n = null : i.length === 1 ? Array.isArray(o) ? (n = o.map(f), s = !1) : (n = null, s = o) : (n = o.map(f), s = l);
    var u = e.getFieldEntities(!0), h = function(d) {
      return d.isFieldTouched();
    };
    if (!n) return s ? u.every(function(d) {
      return h(d) || d.isList();
    }) : u.some(h);
    var v = new b();
    n.forEach(function(d) {
      v.set(d, []);
    }), u.forEach(function(d) {
      var P = d.getNamePath();
      n.forEach(function(I) {
        I.every(function(c, g) {
          return P[g] === c;
        }) && v.update(I, function(c) {
          return [].concat(p(c), [d]);
        });
      });
    });
    var m = function(d) {
      return d.some(h);
    }, F = v.map(function(d) {
      return d.value;
    });
    return s ? F.every(m) : F.some(m);
  }), a(this, "isFieldTouched", function(t) {
    return e.warningUnhooked(), e.isFieldsTouched([t]);
  }), a(this, "isFieldsValidating", function(t) {
    e.warningUnhooked();
    var i = e.getFieldEntities();
    if (!t) return i.some(function(n) {
      return n.isFieldValidating();
    });
    var r = t.map(f);
    return i.some(function(n) {
      var o = n.getNamePath();
      return M(r, o) && n.isFieldValidating();
    });
  }), a(this, "isFieldValidating", function(t) {
    return e.warningUnhooked(), e.isFieldsValidating([t]);
  }), a(this, "resetWithFieldInitialValue", function() {
    var t = arguments.length > 0 && arguments[0] !== void 0 ? arguments[0] : {}, i = new b(), r = e.getFieldEntities(!0);
    r.forEach(function(o) {
      var l = o.props.initialValue, s = o.getNamePath();
      if (l !== void 0) {
        var u = i.get(s) || /* @__PURE__ */ new Set();
        u.add({ entity: o, value: l }), i.set(s, u);
      }
    });
    var n;
    t.entities ? n = t.entities : t.namePathList ? (n = [], t.namePathList.forEach(function(o) {
      var l, s = i.get(o);
      s && (l = n).push.apply(l, p(p(s).map(function(u) {
        return u.entity;
      })));
    })) : n = r, n.forEach(function(o) {
      if (o.props.initialValue !== void 0) {
        var l = o.getNamePath();
        if (e.getInitialValue(l) !== void 0) U(!1, "Form already set 'initialValues' with path '".concat(l.join("."), "'. Field can not overwrite it."));
        else {
          var s = i.get(l);
          if (s && s.size > 1) U(!1, "Multiple Field with path '".concat(l.join("."), "' set 'initialValue'. Can not decide which one to pick."));
          else if (s) {
            var u = e.getFieldValue(l);
            o.isListField() || t.skipExist && u !== void 0 || e.updateStore(y(e.store, l, p(s)[0].value));
          }
        }
      }
    });
  }), a(this, "resetFields", function(t) {
    e.warningUnhooked();
    var i = e.store;
    if (!t) return e.updateStore(S(e.initialValues)), e.resetWithFieldInitialValue(), e.notifyObservers(i, null, { type: "reset" }), void e.notifyWatch();
    var r = t.map(f);
    r.forEach(function(n) {
      var o = e.getInitialValue(n);
      e.updateStore(y(e.store, n, o));
    }), e.resetWithFieldInitialValue({ namePathList: r }), e.notifyObservers(i, r, { type: "reset" }), e.notifyWatch(r);
  }), a(this, "setFields", function(t) {
    e.warningUnhooked();
    var i = e.store, r = [];
    t.forEach(function(n) {
      var o = n.name, l = R(n, Q), s = f(o);
      r.push(s), "value" in l && e.updateStore(y(e.store, s, l.value)), e.notifyObservers(i, [s], { type: "setField", data: n });
    }), e.notifyWatch(r);
  }), a(this, "getFields", function() {
    return e.getFieldEntities(!0).map(function(t) {
      var i = t.getNamePath(), r = t.getMeta(), n = V(V({}, r), {}, { name: i, value: e.getFieldValue(i) });
      return Object.defineProperty(n, "originRCField", { value: !0 }), n;
    });
  }), a(this, "initEntityValue", function(t) {
    var i = t.props.initialValue;
    if (i !== void 0) {
      var r = t.getNamePath();
      W(e.store, r) === void 0 && e.updateStore(y(e.store, r, i));
    }
  }), a(this, "isMergedPreserve", function(t) {
    var i = t !== void 0 ? t : e.preserve;
    return i == null || i;
  }), a(this, "registerField", function(t) {
    e.fieldEntities.push(t);
    var i = t.getNamePath();
    if (e.notifyWatch([i]), t.props.initialValue !== void 0) {
      var r = e.store;
      e.resetWithFieldInitialValue({ entities: [t], skipExist: !0 }), e.notifyObservers(r, [t.getNamePath()], { type: "valueUpdate", source: "internal" });
    }
    return function(n, o) {
      var l = arguments.length > 2 && arguments[2] !== void 0 ? arguments[2] : [];
      if (e.fieldEntities = e.fieldEntities.filter(function(h) {
        return h !== t;
      }), !e.isMergedPreserve(o) && (!n || l.length > 1)) {
        var s = n ? void 0 : e.getInitialValue(i);
        if (i.length && e.getFieldValue(i) !== s && e.fieldEntities.every(function(h) {
          return !J(h.getNamePath(), i);
        })) {
          var u = e.store;
          e.updateStore(y(u, i, s, !0)), e.notifyObservers(u, [i], { type: "remove" }), e.triggerDependenciesUpdate(u, i);
        }
      }
      e.notifyWatch([i]);
    };
  }), a(this, "dispatch", function(t) {
    switch (t.type) {
      case "updateValue":
        var i = t.namePath, r = t.value;
        e.updateValue(i, r);
        break;
      case "validateField":
        var n = t.namePath, o = t.triggerName;
        e.validateFields([n], { triggerName: o });
    }
  }), a(this, "notifyObservers", function(t, i, r) {
    if (e.subscribable) {
      var n = V(V({}, r), {}, { store: e.getFieldsValue(!0) });
      e.getFieldEntities().forEach(function(o) {
        (0, o.onStoreChange)(t, i, n);
      });
    } else e.forceRootUpdate();
  }), a(this, "triggerDependenciesUpdate", function(t, i) {
    var r = e.getDependencyChildrenFields(i);
    return r.length && e.validateFields(r), e.notifyObservers(t, r, { type: "dependenciesUpdate", relatedFields: [i].concat(p(r)) }), r;
  }), a(this, "updateValue", function(t, i) {
    var r = f(t), n = e.store;
    e.updateStore(y(e.store, r, i)), e.notifyObservers(n, [r], { type: "valueUpdate", source: "internal" }), e.notifyWatch([r]);
    var o = e.triggerDependenciesUpdate(n, r), l = e.callbacks.onValuesChange;
    l && l(H(e.store, [r]), e.getFieldsValue()), e.triggerOnFieldsChange([r].concat(p(o)));
  }), a(this, "setFieldsValue", function(t) {
    e.warningUnhooked();
    var i = e.store;
    if (t) {
      var r = S(e.store, t);
      e.updateStore(r);
    }
    e.notifyObservers(i, null, { type: "valueUpdate", source: "external" }), e.notifyWatch();
  }), a(this, "setFieldValue", function(t, i) {
    e.setFields([{ name: t, value: i, errors: [], warnings: [] }]);
  }), a(this, "getDependencyChildrenFields", function(t) {
    var i = /* @__PURE__ */ new Set(), r = [], n = new b();
    return e.getFieldEntities().forEach(function(o) {
      (o.props.dependencies || []).forEach(function(l) {
        var s = f(l);
        n.update(s, function() {
          var u = arguments.length > 0 && arguments[0] !== void 0 ? arguments[0] : /* @__PURE__ */ new Set();
          return u.add(o), u;
        });
      });
    }), function o(l) {
      (n.get(l) || /* @__PURE__ */ new Set()).forEach(function(s) {
        if (!i.has(s)) {
          i.add(s);
          var u = s.getNamePath();
          s.isFieldDirty() && u.length && (r.push(u), o(u));
        }
      });
    }(t), r;
  }), a(this, "triggerOnFieldsChange", function(t, i) {
    var r = e.callbacks.onFieldsChange;
    if (r) {
      var n = e.getFields();
      if (i) {
        var o = new b();
        i.forEach(function(s) {
          var u = s.name, h = s.errors;
          o.set(u, h);
        }), n.forEach(function(s) {
          s.errors = o.get(s.name) || s.errors;
        });
      }
      var l = n.filter(function(s) {
        var u = s.name;
        return M(t, u);
      });
      l.length && r(l, n);
    }
  }), a(this, "validateFields", function(t, i) {
    var r, n;
    e.warningUnhooked(), Array.isArray(t) || typeof t == "string" || typeof i == "string" ? (r = t, n = i) : n = t;
    var o = !!r, l = o ? r.map(f) : [], s = [], u = String(Date.now()), h = /* @__PURE__ */ new Set(), v = n || {}, m = v.recursive, F = v.dirty;
    e.getFieldEntities(!0).forEach(function(c) {
      if (o || l.push(c.getNamePath()), c.props.rules && c.props.rules.length && (!F || c.isFieldDirty())) {
        var g = c.getNamePath();
        if (h.add(g.join(u)), !o || M(l, g, m)) {
          var w = c.validateRules(V({ validateMessages: V(V({}, G), e.validateMessages) }, n));
          s.push(w.then(function() {
            return { name: g, errors: [], warnings: [] };
          }).catch(function(O) {
            var L, N = [], A = [];
            return (L = O.forEach) === null || L === void 0 || L.call(O, function(T) {
              var _ = T.rule.warningOnly, C = T.errors;
              _ ? A.push.apply(A, p(C)) : N.push.apply(N, p(C));
            }), N.length ? Promise.reject({ name: g, errors: N, warnings: A }) : { name: g, errors: N, warnings: A };
          }));
        }
      }
    });
    var d = q(s);
    e.lastValidatePromise = d, d.catch(function(c) {
      return c;
    }).then(function(c) {
      var g = c.map(function(w) {
        return w.name;
      });
      e.notifyObservers(e.store, g, { type: "validateFinish" }), e.triggerOnFieldsChange(g, c);
    });
    var P = d.then(function() {
      return e.lastValidatePromise === d ? Promise.resolve(e.getFieldsValue(l)) : Promise.reject([]);
    }).catch(function(c) {
      var g = c.filter(function(w) {
        return w && w.errors.length;
      });
      return Promise.reject({ values: e.getFieldsValue(l), errorFields: g, outOfDate: e.lastValidatePromise !== d });
    });
    P.catch(function(c) {
      return c;
    });
    var I = l.filter(function(c) {
      return h.has(c.join(u));
    });
    return e.triggerOnFieldsChange(I), P;
  }), a(this, "submit", function() {
    e.warningUnhooked(), e.validateFields().then(function(t) {
      var i = e.callbacks.onFinish;
      if (i) try {
        i(t);
      } catch (r) {
        console.error(r);
      }
    }).catch(function(t) {
      var i = e.callbacks.onFinishFailed;
      i && i(t);
    });
  }), this.forceRootUpdate = E;
});
function fe(k) {
  var E = D.useRef(), e = D.useState({}), t = j(e, 2)[1];
  if (!E.current) if (k) E.current = k;
  else {
    var i = new X(function() {
      t({});
    });
    E.current = i.getForm();
  }
  return [E.current];
}
export {
  X as FormStore,
  fe as default
};
