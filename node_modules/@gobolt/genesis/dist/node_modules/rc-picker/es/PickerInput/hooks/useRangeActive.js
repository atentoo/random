import g from "../../../../@babel/runtime/helpers/esm/slicedToArray.js";
import * as t from "react";
import w from "./useLockEffect.js";
function E(p) {
  var v = arguments.length > 1 && arguments[1] !== void 0 ? arguments[1] : [], d = arguments.length > 2 && arguments[2] !== void 0 && arguments[2], h = t.useState(0), f = g(h, 2), r = f[0], R = f[1], S = t.useState(!1), i = g(S, 2), e = i[0], x = i[1], u = t.useRef([]), o = t.useRef(null), s = t.useRef(null), a = function(n) {
    o.current = n;
  };
  return w(e || d, function() {
    e || (u.current = [], a(null));
  }), t.useEffect(function() {
    e && u.current.push(r);
  }, [e, r]), [e, function(n) {
    x(n);
  }, function(n) {
    return n && (s.current = n), s.current;
  }, r, R, function(n) {
    var c = u.current, b = new Set(c.filter(function(m) {
      return n[m] || v[m];
    })), l = c[c.length - 1] === 0 ? 1 : 0;
    return b.size >= 2 || p[l] ? null : l;
  }, u.current, a, function(n) {
    return o.current === n;
  }];
}
export {
  E as default
};
