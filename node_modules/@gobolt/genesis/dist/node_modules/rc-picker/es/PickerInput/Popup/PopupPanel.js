import x from "../../../../@babel/runtime/helpers/esm/extends.js";
import a from "../../../../@babel/runtime/helpers/esm/objectSpread2.js";
import * as e from "react";
import m from "../../PickerPanel/index.js";
import { PickerHackContext as c } from "../../PickerPanel/context.js";
import b from "../context.js";
import { offsetPanelDate as D } from "../hooks/useRangePickerValue.js";
function q(r) {
  var n = r.picker, s = r.multiplePanel, i = r.pickerValue, P = r.onPickerValueChange, d = r.needConfirm, h = r.onSubmit, C = r.range, f = r.hoverValue, p = e.useContext(b), k = p.prefixCls, v = p.generateConfig, o = e.useCallback(function(u, E) {
    return D(v, n, u, E);
  }, [v, n]), V = e.useMemo(function() {
    return o(i, 1);
  }, [i, o]), l = { onCellDblClick: function() {
    d && h();
  } }, g = n === "time", t = a(a({}, r), {}, { hoverValue: null, hoverRangeValue: null, hideHeader: g });
  return C ? t.hoverRangeValue = f : t.hoverValue = f, s ? e.createElement("div", { className: "".concat(k, "-panels") }, e.createElement(c.Provider, { value: a(a({}, l), {}, { hideNext: !0 }) }, e.createElement(m, t)), e.createElement(c.Provider, { value: a(a({}, l), {}, { hidePrev: !0 }) }, e.createElement(m, x({}, t, { pickerValue: V, onPickerValueChange: function(u) {
    P(o(u, -1));
  } })))) : e.createElement(c.Provider, { value: a({}, l) }, e.createElement(m, t));
}
export {
  q as default
};
