import n from "../../../../@babel/runtime/helpers/esm/objectSpread2.js";
import F from "../../../../@babel/runtime/helpers/esm/slicedToArray.js";
import * as u from "react";
import "../../../../rc-util/es/hooks/useLayoutEffect.js";
import "../../../../rc-util/es/ref.js";
import { warningOnce as se } from "../../../../rc-util/es/warning.js";
import le from "../../hooks/useLocale.js";
import { getTimeProps as me, fillShowTimeConfig as ue } from "../../hooks/useTimeConfig.js";
import { toArray as de } from "../../utils/miscUtil.js";
import { fillClearIcon as ae } from "../Selector/hooks/useClearIcon.js";
import fe from "./useDisabledBoundary.js";
import { useFieldFormat as ce } from "./useFieldFormat.js";
import pe from "./useInputReadOnly.js";
import ve from "./useInvalidate.js";
function m(e) {
  var i = arguments.length > 1 && arguments[1] !== void 0 && arguments[1];
  return u.useMemo(function() {
    var r = e && de(e);
    return i && r && (r[1] = r[1] || r[0]), r;
  }, [e, i]);
}
function Oe(e, i) {
  var r = e.generateConfig, a = e.locale, f = e.picker, t = f === void 0 ? "date" : f, c = e.prefixCls, p = c === void 0 ? "rc-picker" : c, v = e.styles, I = v === void 0 ? {} : v, b = e.classNames, R = b === void 0 ? {} : b, g = e.order, S = g === void 0 || g, C = e.components, E = C === void 0 ? {} : C, H = e.inputRender, j = e.allowClear, A = e.clearIcon, k = e.needConfirm, V = e.multiple, L = e.format, _ = e.inputReadOnly, q = e.disabledDate, z = e.minDate, B = e.maxDate, G = e.showTime, J = e.value, K = e.defaultValue, Q = e.pickerValue, U = e.defaultPickerValue, W = m(J), X = m(K), Y = m(Q), Z = m(U), o = t === "date" && G ? "datetime" : t, w = o === "time" || o === "datetime", $ = w || V, M = k ?? w, ee = me(e), s = F(ee, 4), h = s[0], re = s[1], x = s[2], y = s[3], l = le(a, re), D = u.useMemo(function() {
    return ue(o, x, y, h, l);
  }, [o, x, y, h, l]);
  process.env.NODE_ENV !== "production" && t === "time" && ["disabledHours", "disabledMinutes", "disabledSeconds"].some(function(ne) {
    return e[ne];
  }) && se(!1, "'disabledHours', 'disabledMinutes', 'disabledSeconds' will be removed in the next major version, please use 'disabledTime' instead.");
  var T = u.useMemo(function() {
    return n(n({}, e), {}, { prefixCls: p, locale: l, picker: t, styles: I, classNames: R, order: S, components: n({ input: H }, E), clearIcon: ae(p, j, A), showTime: D, value: W, defaultValue: X, pickerValue: Y, defaultPickerValue: Z }, i == null ? void 0 : i());
  }, [e]), oe = ce(o, l, L), N = F(oe, 2), O = N[0], ie = N[1], P = pe(O, _, V), d = fe(r, a, q, z, B), te = ve(r, t, d, D);
  return [u.useMemo(function() {
    return n(n({}, T), {}, { needConfirm: M, inputReadOnly: P, disabledDate: d });
  }, [T, M, P, d]), o, $, O, ie, te];
}
export {
  Oe as default
};
