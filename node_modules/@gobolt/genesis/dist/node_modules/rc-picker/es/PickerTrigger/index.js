import i from "../../../@babel/runtime/helpers/esm/defineProperty.js";
import P from "../../../@rc-component/trigger/es/index.js";
import w from "../../../../_virtual/index.js";
import * as r from "react";
import { getRealPlacement as x } from "../utils/uiUtil.js";
import A from "../PickerInput/context.js";
var N = { bottomLeft: { points: ["tl", "bl"], offset: [0, 4], overflow: { adjustX: 1, adjustY: 1 } }, bottomRight: { points: ["tr", "br"], offset: [0, 4], overflow: { adjustX: 1, adjustY: 1 } }, topLeft: { points: ["bl", "tl"], offset: [0, -4], overflow: { adjustX: 0, adjustY: 1 } }, topRight: { points: ["br", "tr"], offset: [0, -4], overflow: { adjustX: 0, adjustY: 1 } } };
function E(t) {
  var n = t.popupElement, a = t.popupStyle, l = t.popupClassName, u = t.popupAlign, m = t.transitionName, f = t.getPopupContainer, s = t.children, c = t.range, d = t.placement, e = t.builtinPlacements, g = e === void 0 ? N : e, p = t.direction, b = t.visible, C = t.onClose, h = r.useContext(A).prefixCls, o = "".concat(h, "-dropdown"), j = x(d, p === "rtl");
  return r.createElement(P, { showAction: [], hideAction: ["click"], popupPlacement: j, builtinPlacements: g, prefixCls: o, popupTransitionName: m, popup: n, popupAlign: u, popupVisible: b, popupClassName: w(l, i(i({}, "".concat(o, "-range"), c), "".concat(o, "-rtl"), p === "rtl")), popupStyle: a, stretch: "minWidth", getPopupContainer: f, onPopupVisibleChange: function(v) {
    v || C();
  } }, s);
}
export {
  E as default
};
