var h = 7;
function o(e, n, t) {
  return !e && !n || e === n || !(!e || !n) && t();
}
function m(e, n, t) {
  return o(n, t, function() {
    return Math.floor(e.getYear(n) / 10) === Math.floor(e.getYear(t) / 10);
  });
}
function a(e, n, t) {
  return o(n, t, function() {
    return e.getYear(n) === e.getYear(t);
  });
}
function f(e, n) {
  return Math.floor(e.getMonth(n) / 3) + 1;
}
function d(e, n, t) {
  return o(n, t, function() {
    return a(e, n, t) && f(e, n) === f(e, t);
  });
}
function l(e, n, t) {
  return o(n, t, function() {
    return a(e, n, t) && e.getMonth(n) === e.getMonth(t);
  });
}
function s(e, n, t) {
  return o(n, t, function() {
    return a(e, n, t) && l(e, n, t) && e.getDate(n) === e.getDate(t);
  });
}
function g(e, n, t) {
  return o(n, t, function() {
    return e.getHour(n) === e.getHour(t) && e.getMinute(n) === e.getMinute(t) && e.getSecond(n) === e.getSecond(t);
  });
}
function M(e, n, t) {
  return o(n, t, function() {
    return s(e, n, t) && g(e, n, t) && e.getMillisecond(n) === e.getMillisecond(t);
  });
}
function S(e, n, t, r) {
  return o(t, r, function() {
    var u = e.locale.getWeekFirstDate(n, t), c = e.locale.getWeekFirstDate(n, r);
    return a(e, u, c) && e.locale.getWeek(n, t) === e.locale.getWeek(n, r);
  });
}
function D(e, n, t, r, u) {
  switch (u) {
    case "date":
      return s(e, t, r);
    case "week":
      return S(e, n.locale, t, r);
    case "month":
      return l(e, t, r);
    case "quarter":
      return d(e, t, r);
    case "year":
      return a(e, t, r);
    case "decade":
      return m(e, t, r);
    case "time":
      return g(e, t, r);
    default:
      return M(e, t, r);
  }
}
function k(e, n, t, r) {
  return !!(n && t && r) && e.isAfter(r, n) && e.isAfter(t, r);
}
function W(e, n, t, r, u) {
  return !!D(e, n, t, r, u) || e.isAfter(t, r);
}
function Y(e, n, t) {
  var r = n.locale.getWeekFirstDay(e), u = n.setDate(t, 1), c = n.getWeekDay(u), i = n.addDate(u, r - c);
  return n.getMonth(i) === n.getMonth(t) && n.getDate(i) > 1 && (i = n.addDate(i, -7)), i;
}
function v(e, n) {
  var t = n.generateConfig, r = n.locale, u = n.format;
  return e ? typeof u == "function" ? u(e) : t.locale.format(r.locale, e, u) : "";
}
function A(e, n, t) {
  var r = n, u = ["getHour", "getMinute", "getSecond", "getMillisecond"];
  return ["setHour", "setMinute", "setSecond", "setMillisecond"].forEach(function(c, i) {
    r = t ? e[c](r, e[u[i]](t)) : e[c](r, 0);
  }), r;
}
export {
  h as WEEK_DAY_COUNT,
  A as fillTime,
  v as formatValue,
  f as getQuarter,
  Y as getWeekStartDate,
  k as isInRange,
  D as isSame,
  s as isSameDate,
  m as isSameDecade,
  l as isSameMonth,
  W as isSameOrAfter,
  d as isSameQuarter,
  g as isSameTime,
  M as isSameTimestamp,
  S as isSameWeek,
  a as isSameYear
};
