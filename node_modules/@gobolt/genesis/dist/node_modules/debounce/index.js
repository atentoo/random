import { __module as c } from "../../_virtual/index7.js";
var h;
function w() {
  if (h) return c.exports;
  function p(u, i = 100, f = {}) {
    if (typeof u != "function") throw new TypeError(`Expected the first parameter to be a function, got \`${typeof u}\`.`);
    if (i < 0) throw new RangeError("`wait` must not be negative.");
    const { immediate: m } = typeof f == "boolean" ? { immediate: f } : f;
    let r, a, e, b, n;
    function s() {
      const o = r, d = a;
      return r = void 0, a = void 0, n = u.apply(o, d), n;
    }
    function g() {
      const o = Date.now() - b;
      o < i && o >= 0 ? e = setTimeout(g, i - o) : (e = void 0, m || (n = s()));
    }
    const t = function(...o) {
      if (r && this !== r && Object.getPrototypeOf(this) === Object.getPrototypeOf(r)) throw new Error("Debounced method called with different contexts of the same prototype.");
      r = this, a = o, b = Date.now();
      const d = m && !e;
      return e || (e = setTimeout(g, i)), d && (n = s()), n;
    };
    return Object.defineProperty(t, "isPending", { get: () => e !== void 0 }), t.clear = () => {
      e && (clearTimeout(e), e = void 0);
    }, t.flush = () => {
      e && t.trigger();
    }, t.trigger = () => {
      n = s(), t.clear();
    }, t;
  }
  return h = 1, c.exports.debounce = p, c.exports = p, c.exports;
}
export {
  w as __require
};
