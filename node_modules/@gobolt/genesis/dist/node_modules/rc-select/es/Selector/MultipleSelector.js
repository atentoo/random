import le from "../../../@babel/runtime/helpers/esm/defineProperty.js";
import M from "../../../@babel/runtime/helpers/esm/slicedToArray.js";
import * as o from "react";
import { useState as P } from "react";
import ce from "../../../../_virtual/index.js";
import ie from "../../../rc-util/es/pickAttrs.js";
import ue from "../../../rc-overflow/es/Overflow.js";
import se from "../TransBtn.js";
import pe from "./Input.js";
import fe from "../hooks/useLayoutEffect.js";
import { getTitle as de } from "../utils/commonUtil.js";
function me(e) {
  var i;
  return (i = e.key) !== null && i !== void 0 ? i : e.value;
}
var K = function(e) {
  e.preventDefault(), e.stopPropagation();
}, De = function(e) {
  var i = e.id, C = e.prefixCls, m = e.values, s = e.open, B = e.searchValue, I = e.autoClearSearchValue, F = e.inputRef, k = e.placeholder, b = e.disabled, p = e.mode, z = e.showSearch, V = e.autoFocus, L = e.autoComplete, O = e.activeDescendantId, W = e.tabIndex, j = e.removeIcon, q = e.maxTagCount, v = e.maxTagTextLength, x = e.maxTagPlaceholder, g = x === void 0 ? function(t) {
    return "+ ".concat(t.length, " ...");
  } : x, h = e.tagRender, A = e.onToggleOpen, G = e.onRemove, H = e.onInputChange, J = e.onInputPaste, Q = e.onInputKeyDown, U = e.onInputMouseDown, X = e.onInputCompositionStart, Y = e.onInputCompositionEnd, Z = e.onInputBlur, E = o.useRef(null), _ = P(0), y = M(_, 2), $ = y[0], ee = y[1], te = P(!1), w = M(te, 2), ne = w[0], D = w[1], a = "".concat(C, "-selection"), f = s || p === "multiple" && I === !1 || p === "tags" ? B : "", oe = p === "tags" || p === "multiple" && I === !1 || z && (s || ne);
  fe(function() {
    ee(E.current.scrollWidth);
  }, [f]);
  var S = function(t, n, r, u, l) {
    return o.createElement("span", { title: de(t), className: ce("".concat(a, "-item"), le({}, "".concat(a, "-item-disabled"), r)) }, o.createElement("span", { className: "".concat(a, "-item-content") }, n), u && o.createElement(se, { className: "".concat(a, "-item-remove"), onMouseDown: K, onClick: l, customizeIcon: j }, "×"));
  }, N = function(t, n, r, u, l, c) {
    return o.createElement("span", { onMouseDown: function(d) {
      K(d), A(!s);
    } }, h({ label: n, value: t, disabled: r, closable: u, onClose: l, isMaxTag: !!c }));
  }, ae = o.createElement("div", { className: "".concat(a, "-search"), style: { width: $ }, onFocus: function() {
    D(!0);
  }, onBlur: function() {
    D(!1);
  } }, o.createElement(pe, { ref: F, open: s, prefixCls: C, id: i, inputElement: null, disabled: b, autoFocus: V, autoComplete: L, editable: oe, activeDescendantId: O, value: f, onKeyDown: Q, onMouseDown: U, onChange: H, onPaste: J, onCompositionStart: X, onCompositionEnd: Y, onBlur: Z, tabIndex: W, attrs: ie(e, !0) }), o.createElement("span", { ref: E, className: "".concat(a, "-search-mirror"), "aria-hidden": !0 }, f, " ")), re = o.createElement(ue, { prefixCls: "".concat(a, "-overflow"), data: m, renderItem: function(t) {
    var n = t.disabled, r = t.label, u = t.value, l = !b && !n, c = r;
    if (typeof v == "number" && (typeof r == "string" || typeof r == "number")) {
      var d = String(c);
      d.length > v && (c = "".concat(d.slice(0, v), "..."));
    }
    var R = function(T) {
      T && T.stopPropagation(), G(t);
    };
    return typeof h == "function" ? N(u, c, n, l, R) : S(t, c, n, l, R);
  }, renderRest: function(t) {
    if (!m.length) return null;
    var n = typeof g == "function" ? g(t) : g;
    return typeof h == "function" ? N(void 0, n, !1, !1, void 0, !0) : S({ title: n }, n, !1);
  }, suffix: ae, itemKey: me, maxCount: q });
  return o.createElement("span", { className: "".concat(a, "-wrap") }, re, !m.length && !f && o.createElement("span", { className: "".concat(a, "-placeholder") }, k));
};
export {
  De as default
};
