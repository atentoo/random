import v from "../../../@babel/runtime/helpers/esm/objectSpread2.js";
import * as o from "react";
const m = function(r, t) {
  var u = o.useRef({ values: /* @__PURE__ */ new Map(), options: /* @__PURE__ */ new Map() });
  return [o.useMemo(function() {
    var n = u.current, c = n.values, p = n.options, l = r.map(function(e) {
      var a;
      return e.label === void 0 ? v(v({}, e), {}, { label: (a = c.get(e.value)) === null || a === void 0 ? void 0 : a.label }) : e;
    }), s = /* @__PURE__ */ new Map(), i = /* @__PURE__ */ new Map();
    return l.forEach(function(e) {
      s.set(e.value, e), i.set(e.value, t.get(e.value) || p.get(e.value));
    }), u.current.values = s, u.current.options = i, l;
  }, [r, t]), o.useCallback(function(n) {
    return t.get(n) || u.current.options.get(n);
  }, [t])];
};
export {
  m as default
};
