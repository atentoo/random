import i from "../../../@babel/runtime/helpers/esm/slicedToArray.js";
import { useLayoutUpdateEffect as p } from "../../../rc-util/es/hooks/useLayoutEffect.js";
import { useState as s, useRef as f } from "react";
function m(t) {
  var n = s(0), o = i(n, 2), a = o[0], u = o[1], e = f(0), r = f();
  return r.current = t, p(function() {
    var c;
    (c = r.current) === null || c === void 0 || c.call(r);
  }, [a]), function() {
    e.current === a && (e.current += 1, u(e.current));
  };
}
function U(t) {
  var n = f([]), o = s({}), a = i(o, 2)[1], u = f(typeof t == "function" ? t() : t), e = m(function() {
    var r = u.current;
    n.current.forEach(function(c) {
      r = c(r);
    }), n.current = [], u.current = r, a({});
  });
  return [u.current, function(r) {
    n.current.push(r), e();
  }];
}
export {
  m as default,
  U as useUpdateState
};
