import ee from "../../../@babel/runtime/helpers/esm/extends.js";
import B from "../../../@babel/runtime/helpers/esm/defineProperty.js";
import K from "../../../@babel/runtime/helpers/esm/slicedToArray.js";
import h from "../../../../_virtual/index.js";
import te from "../../../rc-dropdown/es/Dropdown.js";
import oe from "../../../rc-menu/es/index.js";
import n from "../../../rc-util/es/KeyCode.js";
import * as a from "react";
import { useState as M, useEffect as W } from "react";
import { getRemovable as ae } from "../util.js";
import ne from "./AddButton.js";
import re from "../../../rc-menu/es/MenuItem.js";
var le = a.forwardRef(function(t, C) {
  var u = t.prefixCls, d = t.id, f = t.tabs, g = t.locale, G = t.mobile, N = t.more, w = N === void 0 ? {} : N, U = t.style, j = t.className, v = t.editable, q = t.tabBarGutter, D = t.rtl, z = t.removeAriaLabel, I = t.onTabClick, F = t.getPopupContainer, H = t.popupClassName, J = M(!1), P = K(J, 2), s = P[0], p = P[1], _ = M(null), R = K(_, 2), r = R[0], A = R[1], L = w.icon, Q = L === void 0 ? "More" : L, b = "".concat(d, "-more-popup"), E = "".concat(u, "-dropdown"), S = r !== null ? "".concat(b, "-").concat(r) : null, O = g == null ? void 0 : g.dropdownAriaLabel, X = a.createElement(oe, { onClick: function(e) {
    var o = e.key, l = e.domEvent;
    I(o, l), p(!1);
  }, prefixCls: "".concat(E, "-menu"), id: b, tabIndex: -1, role: "listbox", "aria-activedescendant": S, selectedKeys: [r], "aria-label": O !== void 0 ? O : "expanded dropdown" }, f.map(function(e) {
    var o = e.closable, l = e.disabled, c = e.closeIcon, i = e.key, y = e.label, m = ae(o, c, v, l);
    return a.createElement(re, { key: i, id: "".concat(b, "-").concat(i), role: "option", "aria-controls": d && "".concat(d, "-panel-").concat(i), disabled: l }, a.createElement("span", null, y), m && a.createElement("button", { type: "button", "aria-label": z || "remove", tabIndex: 0, className: "".concat(E, "-menu-item-remove"), onClick: function(V) {
      V.stopPropagation(), function(x, $) {
        x.preventDefault(), x.stopPropagation(), v.onEdit("remove", { key: $, event: x });
      }(V, i);
    } }, c || v.removeIcon || "Ã—"));
  }));
  function T(e) {
    for (var o = f.filter(function(m) {
      return !m.disabled;
    }), l = o.findIndex(function(m) {
      return m.key === r;
    }) || 0, c = o.length, i = 0; i < c; i += 1) {
      var y = o[l = (l + e + c) % c];
      if (!y.disabled) return void A(y.key);
    }
  }
  W(function() {
    var e = document.getElementById(S);
    e && e.scrollIntoView && e.scrollIntoView(!1);
  }, [r]), W(function() {
    s || A(null);
  }, [s]);
  var k = B({}, D ? "marginRight" : "marginLeft", q);
  f.length || (k.visibility = "hidden", k.order = 1);
  var Y = h(B({}, "".concat(E, "-rtl"), D)), Z = G ? null : a.createElement(te, ee({ prefixCls: E, overlay: X, visible: !!f.length && s, onVisibleChange: p, overlayClassName: h(Y, H), mouseEnterDelay: 0.1, mouseLeaveDelay: 0.1, getPopupContainer: F }, w), a.createElement("button", { type: "button", className: "".concat(u, "-nav-more"), style: k, "aria-haspopup": "listbox", "aria-controls": b, id: "".concat(d, "-more"), "aria-expanded": s, onKeyDown: function(e) {
    var o = e.which;
    if (s) switch (o) {
      case n.UP:
        T(-1), e.preventDefault();
        break;
      case n.DOWN:
        T(1), e.preventDefault();
        break;
      case n.ESC:
        p(!1);
        break;
      case n.SPACE:
      case n.ENTER:
        r !== null && I(r, e);
    }
    else [n.DOWN, n.SPACE, n.ENTER].includes(o) && (p(!0), e.preventDefault());
  } }, Q));
  return a.createElement("div", { className: h("".concat(u, "-nav-operations"), j), style: U, ref: C }, Z, a.createElement(ne, { prefixCls: u, locale: g, editable: v }));
});
const ye = a.memo(le, function(t, C) {
  return C.tabMoving;
});
export {
  ye as default
};
