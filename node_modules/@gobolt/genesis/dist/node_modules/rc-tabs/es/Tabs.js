import u from "../../@babel/runtime/helpers/esm/extends.js";
import s from "../../@babel/runtime/helpers/esm/defineProperty.js";
import G from "../../@babel/runtime/helpers/esm/objectSpread2.js";
import l from "../../@babel/runtime/helpers/esm/slicedToArray.js";
import le from "../../@babel/runtime/helpers/esm/typeof.js";
import ce from "../../@babel/runtime/helpers/esm/objectWithoutProperties.js";
import me from "../../../_virtual/index.js";
import M from "../../rc-util/es/hooks/useMergedState.js";
import ue from "../../rc-util/es/isMobile.js";
import * as n from "react";
import { useState as V, useEffect as d } from "react";
import se from "./TabContext.js";
import de from "./TabNavList/Wrapper.js";
import fe from "./TabPanelList/index.js";
import pe from "./hooks/useAnimateConfig.js";
var be = ["id", "prefixCls", "className", "items", "direction", "activeKey", "defaultActiveKey", "editable", "animated", "tabPosition", "tabBarGutter", "tabBarStyle", "tabBarExtraContent", "locale", "more", "destroyInactiveTabPane", "renderTabBar", "onChange", "onTabClick", "onTabScroll", "getPopupContainer", "popupClassName", "indicator"], _ = 0, ve = n.forwardRef(function(e, A) {
  var c = e.id, f = e.prefixCls, r = f === void 0 ? "rc-tabs" : f, D = e.className, p = e.items, O = e.direction, j = e.activeKey, w = e.defaultActiveKey, b = e.editable, R = e.animated, v = e.tabPosition, y = v === void 0 ? "top" : v, q = e.tabBarGutter, z = e.tabBarStyle, F = e.tabBarExtraContent, H = e.locale, J = e.more, L = e.destroyInactiveTabPane, Q = e.renderTabBar, T = e.onChange, E = e.onTabClick, U = e.onTabScroll, W = e.getPopupContainer, X = e.popupClassName, Y = e.indicator, Z = ce(e, be), a = n.useMemo(function() {
    return (p || []).filter(function(t) {
      return t && le(t) === "object" && "key" in t;
    });
  }, [p]), N = O === "rtl", x = pe(R), $ = V(!1), B = l($, 2), P = B[0], C = B[1];
  d(function() {
    C(ue());
  }, []);
  var ee = M(function() {
    var t;
    return (t = a[0]) === null || t === void 0 ? void 0 : t.key;
  }, { value: j, defaultValue: w }), k = l(ee, 2), i = k[0], g = k[1], te = V(function() {
    return a.findIndex(function(t) {
      return t.key === i;
    });
  }), S = l(te, 2), h = S[0], ae = S[1];
  d(function() {
    var t, o = a.findIndex(function(m) {
      return m.key === i;
    });
    o === -1 && (o = Math.max(0, Math.min(h, a.length - 1)), g((t = a[o]) === null || t === void 0 ? void 0 : t.key)), ae(o);
  }, [a.map(function(t) {
    return t.key;
  }).join("_"), i, h]);
  var re = M(null, { value: c }), I = l(re, 2), oe = I[0], ne = I[1];
  d(function() {
    c || (ne("rc-tabs-".concat(process.env.NODE_ENV === "test" ? "test" : _)), _ += 1);
  }, []);
  var K = { id: oe, activeKey: i, animated: x, tabPosition: y, rtl: N, mobile: P }, ie = G(G({}, K), {}, { editable: b, locale: H, more: J, tabBarGutter: q, onTabClick: function(t, o) {
    E == null || E(t, o);
    var m = t !== i;
    g(t), m && (T == null || T(t));
  }, onTabScroll: U, extra: F, style: z, panes: null, getPopupContainer: W, popupClassName: X, indicator: Y });
  return n.createElement(se.Provider, { value: { tabs: a, prefixCls: r } }, n.createElement("div", u({ ref: A, id: c, className: me(r, "".concat(r, "-").concat(y), s(s(s({}, "".concat(r, "-mobile"), P), "".concat(r, "-editable"), b), "".concat(r, "-rtl"), N), D) }, Z), n.createElement(de, u({}, ie, { renderTabBar: Q })), n.createElement(fe, u({ destroyInactiveTabPane: L }, K, { animated: x }))));
});
process.env.NODE_ENV !== "production" && (ve.displayName = "Tabs");
export {
  ve as default
};
