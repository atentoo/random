import n from "../../../@babel/runtime/helpers/esm/objectSpread2.js";
import { Color as C } from "./color.js";
var R = "rc-color-picker", a = function(r) {
  return r instanceof C ? r : new C(r);
}, v = a("#1677ff"), k = function(r) {
  var e = r.offset, t = r.targetRef, d = r.containerRef, x = r.color, i = r.type, u = d.current.getBoundingClientRect(), f = u.width, b = u.height, l = t.current.getBoundingClientRect(), s = l.width / 2, m = l.height / 2, c = (e.x + s) / f, h = 1 - (e.y + m) / b, o = x.toHsb(), g = c, p = (e.x + s) / f * 360;
  if (i) switch (i) {
    case "hue":
      return a(n(n({}, o), {}, { h: p <= 0 ? 0 : p }));
    case "alpha":
      return a(n(n({}, o), {}, { a: g <= 0 ? 0 : g }));
  }
  return a({ h: o.h, s: c <= 0 ? 0 : c, b: h >= 1 ? 1 : h, a: o.a });
}, B = function(r, e) {
  var t = r.toHsb();
  switch (e) {
    case "hue":
      return { x: t.h / 360 * 100, y: 50 };
    case "alpha":
      return { x: 100 * r.a, y: 50 };
    default:
      return { x: 100 * t.s, y: 100 * (1 - t.b) };
  }
};
export {
  R as ColorPickerPrefixCls,
  B as calcOffset,
  k as calculateColor,
  v as defaultColor,
  a as generateColor
};
