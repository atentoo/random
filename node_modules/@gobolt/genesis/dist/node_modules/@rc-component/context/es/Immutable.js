import l from "../../../@babel/runtime/helpers/esm/extends.js";
import { supportRef as i } from "../../../rc-util/es/ref.js";
import * as e from "react";
function v() {
  var s = e.createContext(null);
  function m() {
    return e.useContext(s);
  }
  return { makeImmutable: function(t, a) {
    var o = i(t), r = function(n, c) {
      var u = o ? { ref: c } : {}, f = e.useRef(0), p = e.useRef(n);
      return m() !== null ? e.createElement(t, l({}, n, u)) : (a && !a(p.current, n) || (f.current += 1), p.current = n, e.createElement(s.Provider, { value: f.current }, e.createElement(t, l({}, n, u))));
    };
    return process.env.NODE_ENV !== "production" && (r.displayName = "ImmutableRoot(".concat(t.displayName || t.name, ")")), o ? e.forwardRef(r) : r;
  }, responseImmutable: function(t, a) {
    var o = i(t), r = function(n, c) {
      var u = o ? { ref: c } : {};
      return m(), e.createElement(t, l({}, n, u));
    };
    return process.env.NODE_ENV !== "production" && (r.displayName = "ImmutableResponse(".concat(t.displayName || t.name, ")")), o ? e.memo(e.forwardRef(r), a) : e.memo(r, a);
  }, useImmutableMark: m };
}
export {
  v as default
};
