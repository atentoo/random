import f from "../../../@babel/runtime/helpers/esm/slicedToArray.js";
import * as r from "react";
import { createPortal as q } from "react-dom";
import i from "../../../rc-util/es/Dom/canUseDom.js";
import { warningOnce as x } from "../../../rc-util/es/warning.js";
import { supportRef as L, useComposeRef as j } from "../../../rc-util/es/ref.js";
import A from "./Context.js";
import M from "./useDom.js";
import T from "./useScrollLocker.js";
import { inlineMock as z } from "./mock.js";
var N = function(e) {
  return e !== !1 && (i() && e ? typeof e == "string" ? document.querySelector(e) : typeof e == "function" ? e() : e : null);
}, B = r.forwardRef(function(e, u) {
  var o = e.open, S = e.autoLock, s = e.getContainer, w = e.debug, c = e.autoDestroy, m = c === void 0 || c, t = e.children, R = r.useState(o), p = f(R, 2), k = p[0], C = p[1], d = k || o;
  process.env.NODE_ENV !== "production" && x(i() || !o, "Portal only work in client side. Please call 'useEffect' to show Portal instead default render in SSR."), r.useEffect(function() {
    (m || o) && C(o);
  }, [o, m]);
  var D = r.useState(function() {
    return N(s);
  }), v = f(D, 2), n = v[0], O = v[1];
  r.useEffect(function() {
    var g = N(s);
    O(g ?? null);
  });
  var b = M(d && !n, w), E = f(b, 2), y = E[0], h = E[1], a = n ?? y;
  T(S && o && i() && (a === y || a === document.body));
  var P = null;
  t && L(t) && u && (P = t.ref);
  var V = j(P, u);
  if (!d || !i() || n === void 0) return null;
  var _ = a === !1 || z(), l = t;
  return u && (l = r.cloneElement(t, { ref: V })), r.createElement(A.Provider, { value: h }, _ ? l : q(l, a));
});
process.env.NODE_ENV !== "production" && (B.displayName = "Portal");
export {
  B as default
};
