import { getShadowRoot as h } from "../../../../rc-util/es/Dom/shadow.js";
import { warning as N } from "../../../../rc-util/es/warning.js";
import * as m from "react";
import { getWin as W } from "../util.js";
function V(c, s, r, d, f, l, L, w) {
  var E = m.useRef(c);
  E.current = c;
  var u = m.useRef(!1);
  return m.useEffect(function() {
    if (s && d && (!f || l)) {
      var p = function() {
        u.current = !1;
      }, e = function(v) {
        var o;
        !E.current || L(((o = v.composedPath) === null || o === void 0 || (o = o.call(v)) === null || o === void 0 ? void 0 : o[0]) || v.target) || u.current || w(!1);
      }, n = W(d);
      n.addEventListener("pointerdown", p, !0), n.addEventListener("mousedown", e, !0), n.addEventListener("contextmenu", e, !0);
      var t = h(r);
      if (t && (t.addEventListener("mousedown", e, !0), t.addEventListener("contextmenu", e, !0)), process.env.NODE_ENV !== "production") {
        var i, a, x = r == null || (i = r.getRootNode) === null || i === void 0 ? void 0 : i.call(r), R = (a = d.getRootNode) === null || a === void 0 ? void 0 : a.call(d);
        N(x === R, "trigger element and popup element should in same shadow root.");
      }
      return function() {
        n.removeEventListener("pointerdown", p, !0), n.removeEventListener("mousedown", e, !0), n.removeEventListener("contextmenu", e, !0), t && (t.removeEventListener("mousedown", e, !0), t.removeEventListener("contextmenu", e, !0));
      };
    }
  }, [s, r, d, f, l]), function() {
    u.current = !0;
  };
}
export {
  V as default
};
