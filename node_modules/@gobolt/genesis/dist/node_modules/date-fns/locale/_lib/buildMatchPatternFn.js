function c(l) {
  return (e, n = {}) => {
    const r = e.match(l.matchPattern);
    if (!r) return null;
    const u = r[0], t = e.match(l.parsePattern);
    if (!t) return null;
    let a = l.valueCallback ? l.valueCallback(t[0]) : t[0];
    return a = n.valueCallback ? n.valueCallback(a) : a, { value: a, rest: e.slice(u.length) };
  };
}
export {
  c as buildMatchPatternFn
};
