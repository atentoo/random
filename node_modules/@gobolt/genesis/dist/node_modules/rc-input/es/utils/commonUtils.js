function c(e) {
  return !(!e.addonBefore && !e.addonAfter);
}
function i(e) {
  return !!(e.prefix || e.suffix || e.allowClear);
}
function o(e, t, a) {
  var n = t.cloneNode(!0), r = Object.create(e, { target: { value: n }, currentTarget: { value: n } });
  return n.value = a, typeof t.selectionStart == "number" && typeof t.selectionEnd == "number" && (n.selectionStart = t.selectionStart, n.selectionEnd = t.selectionEnd), n.setSelectionRange = function() {
    t.setSelectionRange.apply(t, arguments);
  }, r;
}
function l(e, t, a, n) {
  if (a) {
    var r = t;
    t.type !== "click" ? e.type === "file" || n === void 0 ? a(r) : a(r = o(t, e, n)) : a(r = o(t, e, ""));
  }
}
function s(e, t) {
  if (e) {
    e.focus(t);
    var a = (t || {}).cursor;
    if (a) {
      var n = e.value.length;
      switch (a) {
        case "start":
          e.setSelectionRange(0, 0);
          break;
        case "end":
          e.setSelectionRange(n, n);
          break;
        default:
          e.setSelectionRange(0, n);
      }
    }
  }
}
export {
  c as hasAddon,
  i as hasPrefixSuffix,
  l as resolveOnChange,
  s as triggerFocus
};
